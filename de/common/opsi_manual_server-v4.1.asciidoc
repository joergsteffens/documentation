////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////


:Author:    uib gmbh
:Email:     info@uib.de
:Date:      19.10.2017
:Revision:  4.1
:toclevels: 6

include::../common/opsi_terms.asciidoc[]


[[opsi-manual-server-overview]]
===  Überblick

Die Funktionalitäten eines '{opsi-server}s' lassen sich auf vielen Business gängigen Linuxdistributionen installieren:

Grob lassen sich zwei wichtige Funktionalitäten unterscheiden, die auf einem Server vereint sein können:

* '{opsi-configserver}' +
Die Funktionalität des configserver umfasst die Speicherung und Verarbeitung der Konfigurationsdaten in unterschiedlichen Backends und deren Bereitstellung über einen Webservice und auf Kommandozeile.

* '{opsi-depotserver}' +
Die Funktionalität des depotserver umfasst die Speicherung der eigentlichen Installationsdateien der zu verteilenden Software, Betriebssysteme, Bootimages und deren Bereitstellung für den Client per smb, cifs/https, tftp.

Die aus diesen Diensten entstehenden Hardwareanforderungen sind in der Regel gering, so das ein Betrieb eines opsi-servers in einer Virtualisierungsumgebung kein Problem darstellt.


[[opsi-manual-server-installation]]
==== Installation und Inbetriebnahme
Die Installation und Inbetriebnahme eines '{opsi-server}s' ist in dem gesonderten Handbuch: 'opsi-getting-started' ausführlich erläutert.

[[opsi-manual-server-samba]]
==== Samba Konfiguration
Um den Client-PCs Zugriff auf die Softwarepakete zu ermöglichen, stellt der opsi-server Shares bereit, die von den Clients als Netzlaufwerke gemountet werden können. Für die Windows-Clients wird dazu die Software SAMBA eingesetzt.
Die Korrekte Sambakonfiguration können Sie erstellen bzw. reparieren durch den Aufruf von:
[source,prompt]
----
opsi-setup --auto-configure-samba
----

Nach einer Änderung der Samba-Konfigurationsdateien ist ein Neustart der Samba-Software notwendig (`systemctl restart smbd.service`).

[[opsi-manual-server-opsiconfd]]
==== Der Daemon opsiconfd
Der 'opsiconfd' ist der zentrale Konfigurations-Daemon von opsi.
Alle Client-Komponenten ({opsi-client-agent}, {opsi-configed}, {opsi-linux-bootimage}, ...) verbinden sich mit diesem Service um auf die Konfigurationen in den Backends zuzugreifen.
Der 'opsiconfd' wird über die Datei `/etc/opsi/opsiconfd.conf` konfiguriert.
Die einzelnen Konfigurations-Optionen sind in dieser Datei dokumentiert.
An dieser Stelle finden sich weitere Ergänzungen.

* +[global] admin networks+: +
Über diese Option kann der administrative Zugriff auf den 'opsiconfd' auf Verbindungen von bestimmten Netzwerkadressen eingeschränkt werden. +
Es können mehrere Netzwerkadressen durch Kommas getrennt angegeben werden. +
Nicht-administrative Client-Verbindungen können auch aus anderen Netzwerken erfolgen.

* +[global] max log size+: +
Über diese Option kann die Größe der Logdateien beschränkt werden. +
Aus historischen Gründen ist dies auf 5MB pro Logdatei beschränkt. +
Seit opsi 4.0.6 ist es möglichen diesen Wert an eigene Bedürfnisse anzupassen. +
Um die Größenbeschränkung zu deaktivieren, kann der Wert auf 0 gesetzt werden.

Ergänzend zu dieser Einstellmöglichkeit ist es möglich durch das Werkzeug +
'logrotate' die Logdateien auf einem Server automatisch zu komprimieren und +
rotieren zu lassen. +
Bitte entnehmen Sie dem zugehörigen Handbuch die Konfigurationsmöglichkeiten.

Ist die maximale Größe der Logdateien bekannt, lässt sich
berechnen wieviel Speicherplatz die anfallenden Logs benötigen werden.
Es gibt fünf verschiedene, Client-bezogene Log-Arten die vom opsiconfd
geschrieben werden: 'bootimage', 'clientconnect', 'instlog', 'opsiconfd' und +
'userlogin'.
Es gibt außerdem einige Client-unabhängige Logs: 'opsiconfd.log', 'opsipxeconfd.log', +
'opsi-backup.log', 'opsi-package-updater.log' und 'package.log'.

Wenn wir von einer mit opsiconfd und logrotate realisierten Konfiguration +
ausgehen, bei der alle Logdateien auf 5MB limitiert sind, abgesehen von +
'package.log', welche 10MB groß werden darf, dann kommen wir auf folgende +
Berechnung:

[source,prompt]
----
(Anzahl der clients * 5 * 5MB) + 5MB + 5MB + 5MB + 5MB + 10MB
----

Bei 100 Clients sollten wir bis zu 2530MB für Logs von opsi reservieren.
Weil Logrotate überlicherweise zu einer bestimmten Uhrzeit aktiv wird, empfehlen wir diese Zahl aufzurunden.


[[opsi-manual-server-accounts]]
==== Notwendige System-User und Gruppen

* User 'opsiconfd' +
Dies ist der user unter dem der opsiconfd Deamon läuft.

* User 'pcpatch' +
Dies ist der user, den der '{opsi-client-agent}' verwendet um den 'depotshare' zu mounten und von diesem zu lesen.
Dieser User hat per Voreinstellung das Heimatverzeichnis `/var/lib/opsi`.Setzen und Ändern Sie das Passwort mit `opsi-admin -d task setPcpatchPassword`.

* Gruppe 'pcpatch' +
Neben dem User pcpatch gibt es noch die Gruppe pcpatch. Die meisten Dateien sind sowohl für den User als auch für die Gruppe im Vollzugriff. Die Systemadministratoren des opsi-servers sollten daher Mitglieder der Gruppe pcpatch sein.

* Gruppe 'opsiadmin' +
Die Mitglieder dieser Gruppe können sich gegenüber dem opsi-webservice Authentifizieren und damit z.B. mit dem opsi-configed arbeiten. Daher sollten alle Mitarbeiter die mit opsi arbeiten, Mitglied dieser Gruppe sein.

[[opsi-manual-server-shares]]
==== Notwendige Shares

* Bereich: 'Depotshare' mit Softwarepaketen ('opsi_depot') +
Auf dem depot-Share liegen die für die Installation durch das Programm opsi Winst vorbereiteten Softwarepakete. +
In der Voreinstellung liegt dieses Verzeichniss auf dem opsi-server unter `/var/lib/opsi/depot`. +
Unterhalb von diesem Verzeichnis findet sich das Verzeichnis `install` und in diesem für jedes Softwarepaket ein Verzeichnis mit dem Namen des Softwarepakets. +
Wiederum unterhalb dieses Verzeichnisses liegen dann die Installationsskripte und -dateien.
+
Das Verzeichnis wird mit dem Freigabe-Namen 'opsi_depot' per Samba read-only exportiert.
+
NOTE: In alten Versionen von opsi war das entsprechende Verzeichnis `/opt/pcbin` und der Share hieß 'opt_pcbin'.

* Bereich: Arbeitsverzeichnis zum Pakethandling ('opsi_workbench') +
Unter `/var/lib/opsi/workbench` ist der Bereich um Pakete zu erstellen und in dem Pakete vor der Installation mit opsi-package-manager abgelegt werden sollen.
Dieses Verzeichnis ist als share 'opsi_workbench' freigegeben.
+
NOTE: Seit opsi 4.1 kann der Pfad Depot-spezifisch über das Attribut `workbenchLocalUrl` konfiguriert werden.

* Bereich: Konfigurationsdateien File-Backend ('opsi_config') +
Unter `/var/lib/opsi` liegen die Konfigurationsdateien des file Backends.
Dieses Verzeichnis ist als share 'opsi_config' freigegeben.
+
CAUTION: Wenn Sie über diesen Share auf den Dateien arbeiten, verwenden Sie keine Editoren die das Dateiformat (Unix/DOS) verändern und entfernen Sie Sicherungsdateien wie z.B. *.bak.

[[opsi-manual-server-opsi-pam-authentification]]
==== opsi PAM Authentifizierung

opsi verwendet zur Authentifizierung der User diverse `PAM`-Module. Bisher wurden für verschiedene Distributionen verschiedene PAM-Module verwendet. In der folgenden Auflistung werden die eingesetzten PAM Module aufgelistet:

Standard: `common-auth` +
openSUSE / SLES: `sshd` +
CentOS und RedHat: `system-auth` +
RedHat 6: `password-auth`

Wie man aus der Liste erkennen kann, wurden diverse `PAM`-Konfigurationen verwendet, diese können sich aber je nach lokaler `PAM` Konfiguration wieder ändern. Da für diese Anpassungen immer ein Eingriff in den Code nötig war gibt es nun die Möglichkeit unter: `/etc/pam.d/` die Datei `opsi-auth` an zu legen und für opsi eine eigene `PAM`-Konfiguration zu hinterlegen. Wenn es diese Datei gibt, benutzt opsi automatisch diese Konfiguration.

Folgendes einfaches Beispiel soll das Verhalten verdeutlichen: Wenn Sie ein Debian/Ubuntu System betreiben und bei der Anmeldung am '{opsi-configed}' eine `PAM`-Fehlermeldung bekommen, obwohl mit den selben Benutzerdaten eine SSH Verbindung zum Server geöffnet werden kann, kann man die Datei `/etc/pam.d/opsi-auth` mit folgendem Inhalt erstellen:

[source,configfile]
----
@include sshd
----

Nach einem Neustart von `opsiconfd` benutzt opsi automatisch das `sshd`-`PAM`-Modul zur authentifizierung.

NOTE: Bitte beachten Sie, dass die Anwendung der ACL auf case-sensitive arbeitende Schnittstellen zurückgreift, wohingegen die Authentifizierung über PAM case-insensitiv geschehen kann. Dadurch kann der Fall eintreten, dass trotz erfolgreicher Authentifizierung keine Arbeit mit dem Service möglich ist, da die ACL dies verhindern.
