////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      30.06.2015
:Revision:  1.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-on-shutdown]]
=== opsi Installation beim Shutdown (frei)

[[opsi-on-shutdown-introduction]]
==== Einführung

Standardmäßig wird die Installation von opsi Software-Paketen beim Hochfahren des Clients gestartet. Der Anwender muss dann auf die Beendigung der Software-Installationen warten, bevor er sich am Rechner anmelden kann. Von daher kann es wünschenswert sein, die Software-Installationen vorwiegend beim Runterfahren des Clients durchzuführen.

Das opsi Modul zur Installation beim Shutdown stellt genau diese Funktionalität zur Verfügung. Individuell für bestimmte Clients kann die Installation beim Shutdown aktiviert werden.

[[opsi-on-shutdown-prerequires]]
==== Vorbedingungen für die Installation beim Shutdown

Das Modul Installation beim Shutdown kann auf Clients ab *Windows XP* eingesetzt werden. Die erforderliche Grundfunktionalität ist Bestandteil des Paketes '{opsi-client-agent}'. 

Das Paket '{opsi-client-agent}' muss mindestens die Version 4.0.2.3-2 haben mit einem `opsiclientd` mindestens der Version 4.0.75. 

Da die **Kofinanzierungsphase abgeschlossen** ist, wurde das Modul Installation beim Shutdown mit der opsi Version 4.0.5.4-2 freigegeben und ist **nun Bestandteil des freien opsi Systems.** Eine entsprechende modules-Datei ist somit ab der aktuellen opsi Version nicht mehr erforderlich. 
Für ältere '{opsi-client-agent}' Pakete, d.h. 4.0.2.3-2 bis 4.0.5.4-2, ist noch eine entsprechende modules-Datei erforderlich. Weitere Details zu Kofinanzierungs-Projekten finden Sie in <<opsi-manual-modules>> sowie unter dem Link http://www.uib.de/www/kofinanziert/index.html[kofinanzierte opsi Erweiterungen].


Einschränkungen und Besonderheiten bestehen in folgendem Zusammenhang:

* WAN-Erweiterung: das On-Shutdown-Modul ist derzeit nur auf Clients anwendbar, die nicht mit der WAN-Erweiterung betrieben werden. Bei der WAN-Erweiterung ist teilweise die lokale und nicht die serverseitige Konfiguration relevant, dies kollidiert mit der Zustandssteuerung für die Installation beim Shutdown.

* Group Policies: da ein Teil des Mechanismusses für die Installation beim Shutdown auf Shutdown-Skripten per Local Group Policy beruht, werden diese Einstellungen eventuell durch übergeordnete Group Policies überschrieben. In diesem Fall sollten die notwendigen Einstellungen in die übergeordneten Group-Policies aufgenommen werden. Siehe hierzu <<opsi-on-shutdown-concept-shutdownscript>>.

* Wenn durch einen Shutdown oder Reboot auf einem Windows-Rechner eine Installation beim Shutdown ausgelöst wurde, lässt die Windows-API zu diesem Zeitpunkt keine Umwandlung eines Shutdown in einen Reboot (oder umgekehrt) mehr zu. Im Falle eines Shutdown werden also Produkte, die einen Reboot beinhalten, erst beim nächsten Hochfahren des Rechners fertig installiert.  

* Windows Home-Edition: Windows Home enthält nicht die erforderlichen Group Policy Shutdown-Skript-Mechanismen. Von daher kann die On-Shutdown-Installation auf Windows-Home-Edition nicht eingesetzt werden. 

* Windows 2000: Auf Windows 2000 beträgt die maximale Wartezeit für Shutdown-Skripte 10 Minuten, danach wird die Installation durch Windows automatisch abgebrochen. Aus diesem Grund ist das Modul nicht auf Windows 2000 Clients einsetzbar. 


[[opsi-on-shutdown-activate]]
==== Inbetriebnahme der Installation beim Shutdown

Die Grundfunktionalität für die Installation beim Shutdown ist bereits im aktuellen `opsi-client-agent`-Paket enthalten. Seit opsi Version 4.0.5.4-2 ist keine entsprechende `modules`-Datei mehr erforderlich. 

Für geeignete Clients (siehe <<opsi-on-shutdown-prerequires>>) kann einfach der Produktschalter `on_shutdown_install` des Paketes `opsi-client-agent` auf `on` und der `opsi-client-agent` für diese Clients auf `update` (oder auch `setup`) gesetzt werden.

Weitere Einstellungen sind im Normalfall nicht notwendig. 

Außer es werden auf den Clients bereits Group-Policies eingesetzt. Falls es hier zu Kollisionen kommt, sollten die entsprechenden Policy-Einträge nicht automatisch über den opsi-client-agent gemacht werden (on_shutdown_install_set_policy = off), sondern händig in die eigene Group-Policy-Verwaltung integriert werden, siehe   
<<opsi-on-shutdown-concept-shutdownscript>>.

Die Installation beim Shutdown wird zusätzlich zur Installation beim Hochfahren ausgeführt. Dies ist im Normalfall sinnvoll, da somit auch Rechner, die längere Zeit ausgeschaltet waren (z.B. nach Urlaub des Anwenders), vor der Benutzung die neuesten Security-Updates bekommen. Falls gewünscht, kann die Installation beim Hochfahren abgeschaltet werden, siehe <<opsi-on-shutdown-config>>. Angefangene Installationen werden aber auf jeden Fall beim Hochfahren des Rechners fortgesetzt, siehe <<opsi-on-shutdown-concept-opsiclientd>>.

* Windows unterscheidet beim Herunterfahren systemtechnisch nicht zwischen einem Shutdown und einem Reboot. Die Installation beim Shutdown wird also sowohl beim Shutdown, als auch beim Reboot ausgeführt und es ist nicht möglich, diese beiden Fälle bei der Ausführung eines Skriptes zu unterscheiden. Die Windows-API lässt zu diesem Zeitpunkt weder eine Umwandlung eines Shutdown in einen Reboot (oder umgekehrt) mehr zu, als auch keinen Abbruchs des Shutdowns/Reboot. Falls einzelne Software-Pakete eine mehrphasige Installation mit Reboot benötigen, wird die Installation erst beim nächsten Start des Clients fortgesetzt. 


[[opsi-on-shutdown-concept]]
==== Technisches Konzept

Die folgenden Erläuterungen dienen dem besseren Verständnis der technischen Zusammenhänge für spezielle Konfigurationsvarianten sowie der Untersuchung im Fehlerfall. Im Normalfall werden alle erforderlichen Einstellungen vom Paket `opsi-client-agent` durchgeführt. 

[[opsi-on-shutdown-concept-overview]]
===== Überblick

Die Installation beim Shutdown basiert auf dem Zusammenspiel verschiedener System-Komponenten. Ein wesentlicher Bestandteil ist die Nutzung des Windows Shutdown-Skript-Mechanismus per Local Group Policy. Shutdown-Skripte ermöglichen die Durchführung von Tasks genau zu dem Zeitpunkt des Shutdown-Vorgangs, an dem der Benutzer bereits abgemeldet ist und alle Benutzer-Tasks beendet sind, aber noch alle Systemdienste laufen. 

Per Shutdown-Skript wird ein opsi-Task ausgeführt, der über den opsi Systemdienst '{opsiclientd}' eine Installation anstößt und auf deren Beendigung wartet. Erst dann wird das System ganz runter gefahren. Systemtechnisch wird hier nicht zwischen einem Shutdown und einem Reboot unterschieden, so dass die Installation auch bei einem Reboot ausgelöst wird. 

Der opsi-Client-Systemdienst '{opsiclientd}' ist für die Aktionsart `on_shutdown` konfiguriert, die die Installation handhabt. Falls für die Installation Reboots benötigt werden, ist die precondition `installation_pending` für die korrekte Steuerung des Ablaufs zuständig.
Falls während der Installation im Shutdown ein Reboot benötigt wird, führt die Precondition `installation_pending` (unabhängig davon, ob `gui_startup` aktiviert ist oder nicht) zu einer direkten Fortführung der Installation beim nächsten Hochfahren des Systems, gegebenenfalls auch mit weiteren Reboots. Im Zustand `installation_pending` wird bei eventuell erforderlichen weiteren Reboots keine Installation beim Shutdown ausgeführt, da ansonsten zwischen der Installation beim Hochfahren und der Installation beim Runterfahren kein Reboot liegen würde. D.h. es wird bis zum Abschluss der aktuellen Installation beim Hochfahren des Systems weiter installiert, aber nicht beim Shutdown, da sonst kein Reboot zwischen den einzelnen Installationsphasen liegen würde.

Im Folgenden werden die beiden Komponenten im Detail beschrieben.

[[opsi-on-shutdown-concept-shutdownscript]]
===== Durchführung per Shutdown-Skript

Über entsprechende Registry-Einträge wird per Local Group Policy beim Herunterfahren des Systems ein Shutdown-Skript ausgeführt, das die Installation anstößt. Die Registry-Einträge entsprechen den Einstellungen, wie sie auch mit dem Group Policy-Editor `gpedit.msc` erzeugt werden können.

So kann man per Group Policy-Editor den Eintrag eines Shutdown-Skriptes erzeugen:

* Richtlinien für Lokaler Computer
* Computerkonfiguration
* Windows-Einstellungen
* Skripts (Start/Herunterfahren)
* Herunterfahren
* Skripts - Hinzufügen - Durchsuchen
* C:\Programme\opsi.org\opsi-client-agent\on_shutdown\doinstall32.cmd (bzw. doinstall64.cmd für 64Bit-Systeme)

Damit das System mit dem Shutdown wartet, bis die Installation vollständig abgeschlossen ist, wird die Wartezeit für Shutdown-Skripte auf unendlich gesetzt (0 Sekunden):

* Richtlinien für Lokaler Computer
* Computerkonfiguration
* Administrative Vorlagen
* System - Skripts
* Maximale Wartezeit für Gruppenrichtlinienskripts
* Einstellung - Aktiviert - Sekunden: 0

Das eingetragene Shutdown-Skript `doinstall32.cmd` bzw. `doinstall64.cmd` wechselt das Arbeitsverzeichnis und löst das 'on_shutdown'-Event aus:
[source,prompt]
----
echo Start opsi product installation ...
cd "%ProgramFiles%\opsi.org\opsi-client-agent\on_shutdown" 
opsiclientd_event_starter.exe --event=on_shutdown
----

bzw. für 64Bit-Systeme:
[source,prompt]
----
echo Start opsi product installation ...
cd "%ProgramFiles(x86)%\opsi.org\opsi-client-agent\on_shutdown"
opsiclientd_event_starter.exe --event=on_shutdown
----

Der `opsiclientd_event_starter` wartet auf die Beendigung der Installation, so dass der System Shutdown so lange aufgehalten wird.

[[opsi-on-shutdown-concept-regedit]]
===== Registry-Einträge für die Ausführung des Shutdown-Skripts

Diese Registry-Einträge werden über das Setup des `opsi-client-agent` Paketes gesetzt und führen zur Ausführung des angegebenen Shutdown-Skriptes auf WinXP / 32Bit. Für 64Bit-Systeme ist der Skriptname `doinstall64.cmd` (statt `doinstall32.cmd`). 

[source,prompt]
----
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine\Scripts\Shutdown\0]
"GPO-ID"="LocalGPO"
"SOM-ID"="Local"
"FileSysPath"="C:\\WINDOWS\\System32\\GroupPolicy\\Machine"
"DisplayName"="opsi shutdown install policy"
"GPOName"="opsi shutdown install policy"

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine\Scripts\Shutdown\0\0]
"Script"="C:\\Programme\\opsi.org\\opsi-client-agent\\on_shutdown\\doinstall32.cmd"
"Parameters"=""
"ExecTime"=hex(b):00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System\Scripts\Shutdown\0]
"GPO-ID"="LocalGPO"
"SOM-ID"="Local"
"FileSysPath"="C:\\WINDOWS\\System32\\GroupPolicy\\Machine"
"DisplayName"="opsi shutdown install policy"
"GPOName"="opsi shutdown install policy"

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\System\Scripts\Shutdown\0\0]
"Script"="C:\\Programme\\opsi.org\\opsi-client-agent\\on_shutdown\\doinstall32.cmd"
"Parameters"=""
"ExecTime"=hex:00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system]
"MaxGPOScriptWait"=dword:00000000
----

Dies sind die entsprechenden Registry-Einträge für Win6 64Bit (Vista / Win7 / Win8):

[source,prompt]
----
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine\Scripts\Shutdown\0]
"GPO-ID"="LocalGPO"
"SOM-ID"="Local"
"FileSysPath"="C:\\WINDOWS\\System32\\GroupPolicy\\Machine"
"DisplayName"="opsi shutdown install policy"
"GPOName"="opsi shutdown install policy"

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine\Scripts\Shutdown\0\0]
"Script"="C:\\Programme\\opsi.org\\opsi-client-agent\\on_shutdown\\doinstall32.cmd"
"Parameters"=""
"ExecTime"=hex(b):00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0]
"GPO-ID"="LocalGPO"
"SOM-ID"="Local"
"FileSysPath"="C:\\Windows\\System32\\GroupPolicy\\Machine"
"DisplayName"="opsi shutdown install policy"
"GPOName"="opsi shutdown install policy"
"PSScriptOrder"=dword:00000001

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy\Scripts\Shutdown\0\0]
"Script"="C:\\Program Files (x86)\\opsi.org\\opsi-client-agent\\on_shutdown\\doinstall64.cmd"
"Parameters"=""
"IsPowershell"=dword:00000000
"ExecTime"=hex:00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system]
"MaxGPOScriptWait"=dword:00000000
----

[[opsi-on-shutdown-concept-opsiclientd]]
===== Erforderliche Konfiguration des opsiclientd

Der opsi-Client-Systemdienst 'opsiclientd' hat für das neue Event 'on_shutdown' zusätzliche Standard-Einträge in der Konfigurationsdatei 'opsiclientd.conf' bekommen. Hier alle relevanten Einträge:

[source,prompt]
----
[event_gui_startup]
active = True

[event_gui_startup{installation_pending}]
active = True

[event_on_shutdown]
active = False

[event_on_shutdown{installation_pending}]
active = False

[precondition_installation_pending]
installation_pending = true
----

Die Precondition `installation_pending` zeigt an, ob noch eine Installation im Gange ist. Falls bei Beendigung des Skriptes immer noch der Zustand `installation_pending` auf true gesetzt ist, bedeutet dies, dass die aktuelle Installation einen Reboot benötigt und noch nicht abgeschlossen ist. Im Normalbetrieb ohne Installation bei Shutdown sind die Sektionen für die neue Aktion `event_on_shutdown` deaktiviert.  

Für einen Client mit aktivierter Installation bei Shutdown ist dies die erforderliche Konfiguration:

[source,prompt]
----
[event_gui_startup]
active = True

[event_gui_startup{installation_pending}]
active = True

[event_on_shutdown]
active = True

[event_on_shutdown{installation_pending}]
active = False

[precondition_installation_pending]
installation_pending = true
----

Der einzige Unterschied ist hier also:

[source,prompt]
----
[event_on_shutdown]
active = True
----

Diese Einstellung wird über den Produktschalter `on_shutdown_install` des Paketes `opsi-client-agent` gesteuert.

Die Precondition `precondition_installation_pending = true` besagt, dass eine angefangene Installation noch nicht beendet ist. Dieser Zustand bleibt über einen oder mehrere Reboots hinweg so lange bestehen, bis die Installation abgeschlossen ist. Wenn die unvollständige Installation einen Reboot benötigt, wird beim nächsten Hochfahren durch die Konfiguration `[event_gui_startup{installation_pending}] active = True` die begonnene Installation beim Hochfahren des Systems fortgesetzt. Diese Einstellung darf nicht verändert werden, da eine angefangene Installation auf jeden Fall beendet werden muss, bevor der Benutzer sich anmelden darf.

Der Eintrag `[event_on_shutdown{installation_pending}] active = False` muss auch in jedem Fall auf False bleiben, da bei einer angefangenen Installation ansonsten kein Reboot wäre zwischen den Installationsphasen beim Startup und beim Shutdown.

Sobald die laufende Installation abgeschlossen ist, wird die Precondition `installation_pending = false` und somit auch wieder die Installation im Shutdown aktiv.

[[opsi-on-shutdown-config]]
===== Spezielle Konfiguration der Installation bei Shutdown

Im Normalfall ist zur Inbetriebnahme der Installation bei Shutdown, wie in <<opsi-on-shutdown-activate>> beschrieben, nichts weiter erforderlich als ein aktuelles `opsi-client-agent` Paket.  Für geeignete Clients kann mit dem `opsi-client-agent`-Produktschalter `on_shutdown_install` die Installation beim Shutdown aktiviert werden. 

Die Installation beim Hochfahren des Systems bleibt standardmässig auch aktiv. Somit ist gewährleistet, dass auch ein längere Zeit ausgeschalteter Client (z.B. nach dem Urlaub des Benutzers) auf jeden Fall die neuesten Versionsstände bekommt, bevor der Benutzer sich anmelden kann.

Sollte dies nicht erwünscht sein, kann die Installation beim Hochfahren deaktiviert werden. Da die Konfiguration des '{opsi-client-agent}s' auch zentral über den Webservice erfolgen kann (siehe: <<opsi-manual-clientagent-configuration-webservice>>),
ist zu empfehlen, dass folgender '{opsi-config-object}' angelegt wird:

* +opsiclientd.event_gui_startup.active+ (boolean, default: +true+)

Über diesen '{opsi-config-object}' kann dann das gui_startup-Event Client-spezifisch aktiviert bzw. deaktiviert werden.
Die '{opsi-config-objects}' können über den '{opsi-configed}' oder '{opsi-admin}' angelegt werden.

Zum Anlegen des '{opsi-config-object}' über '{opsi-admin}' ist der folgende Befehl auf dem '{opsi-configserver}' auszuführen:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.event_gui_startup.active "gui_startup active" true
----

Der Standard-Wert true entspricht hierbei dem Wert in der mitgelieferten `opsiclientd.conf`.

Wenn für einen Install_on_shutdown-Client die Installation im Startup deaktiviert werden soll, wird der entsprechende '{opsi-config-object}' wie folgt konfiguriert:

* +opsiclientd.event_gui_startup.active+: +false+

Dies sollte aber nur in begründeten Ausnahmefällen geschehen. Die Einstellungen mit der Zusatzbedingung 'installation_pending' sollten unter keinen Umständen geändert werden, es müssen hier immer die default-Werte verwendet werden, um eine korrekte Steuerung des Ablaufs zu gewährleisten. +

Zum Setzen des '{opsi-config-object}' über '{opsi-admin}' ist der folgende Befehl auf dem '{opsi-configserver}' auszuführen
(im Beispiel für einen Client mit der {opsi-host-id} +myclient.domain.de+):

[source,prompt]
----
opsi-admin -d method configState_create opsiclientd.event_gui_startup.active myclient.domain.de false
----

Diese Konfiguration hat zur Folge, dass beim Start des Rechners kein Verbindungsaufbau zum '{opsi-configserver}' und somit keine Installation stattfindet. Ausser bei einer angefangenen Installation, die durch die Zusatzbedingung `installation_pending` angezeigt wird. In diesem Fall wird durch die Einstellung `event_gui_startup{installation_pending}` beim Systemstart die angefangene Installation weiter fortgesetzt. Wenn ein weiterer Reboot erforderlich ist, wird durch die Einstellung `event_on_shutdown{installation_pending}` (die ebenfalls nicht verändert werden darf) verhindert, dass zusätzlich auch beim Shutdown die Installation weitergeführt wird. Ansonsten wäre kein System-Neustart zwischen den einzelnen Installationsphasen. 

[[opsi-on-shutdown-error]]
===== Lokale Logdatei für den Fehlerfall

Beim Install-On-Shutdown werden zwei lokale Logdateien angelegt:

* `C:\opsi.org\log\doinstall.log`
* `C:\opsi.org\log\opsiclientd_event_starter.log`

mit normalerweise folgendem Inhalt:

`doinstall.log`:
[source,prompt]
----
doinstall32.cmd started
Aktuelles Datum: 29.01.2013 
----

`opsiclientd_event_starter.log`:
[source,prompt]
----
[1] [Okt 06 18:49:44:435] opsiclientd_shutdown_starter: version: 4.0.7.0
[5] [Okt 06 18:49:44:435] clientid=pctry4detlef.uib.local
[5] [Okt 06 18:49:44:435] service_url=https://localhost:4441/opsiclientd
[5] [Okt 06 18:49:44:435] service_user=pctry4detlef.uib.local
[5] [Okt 06 18:49:44:450] host_key=***(confidential)***
[5] [Okt 06 18:49:44:450] myevent=on_shutdown
[6] [Okt 06 18:49:44:450] Working with ssl protocol: sslvSSLv23 - auto negotation
[6] [Okt 06 18:49:45:107] JSON Bench for backend_info "params":[],"id":1} Start: 18:49:44:450 Time: 00:00:00:657
[6] [Okt 06 18:49:45:232] opsidata connected
[5] [Okt 06 18:49:45:232] init Connection done
[6] [Okt 06 18:49:45:232] JSON service request https://localhost:4441/opsiclientd isInstallationPending
[6] [Okt 06 18:49:45:529] JSON Bench for isInstallationPending "params":[],"id":1} Start: 18:49:45:232 Time: 00:00:00:297
[5] [Okt 06 18:49:45:622] resultstring={"id": 1, "result": false, "error": null}
[5] [Okt 06 18:49:45:622] No installation pending - fine
[6] [Okt 06 18:49:45:622] JSON service request https://localhost:4441/opsiclientd fireEvent
[6] [Okt 06 18:49:45:966] JSON Bench for fireEvent "params":["on_shutdown"],"id":1} Start: 18:49:45:622 Time: 00:00:00:344
[5] [Okt 06 18:49:46:091] resultstring={"id": 1, "result": null, "error": null}
[5] [Okt 06 18:49:46:091] Succesfull fired event: on_shutdown
[5] [Okt 06 18:49:51:107] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:49:51:107] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:49:51:357] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:49:51:107 Time: 00:00:00:250
[5] [Okt 06 18:49:51:451] resultstring={"id": 1, "result": true, "error": null}
[5] [Okt 06 18:49:56:467] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:49:56:467] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:49:56:935] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:49:56:467 Time: 00:00:00:468
[5] [Okt 06 18:49:57:060] resultstring={"id": 1, "result": true, "error": null}
[5] [Okt 06 18:50:02:076] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:50:02:076] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:50:02:545] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:50:02:076 Time: 00:00:00:469
[5] [Okt 06 18:50:02:670] resultstring={"id": 1, "result": true, "error": null}
[5] [Okt 06 18:50:07:686] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:50:07:686] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:50:08:186] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:50:07:686 Time: 00:00:00:500
[5] [Okt 06 18:50:08:311] resultstring={"id": 1, "result": true, "error": null}
[5] [Okt 06 18:50:13:327] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:50:13:327] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:50:13:624] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:50:13:327 Time: 00:00:00:297
[5] [Okt 06 18:50:13:749] resultstring={"id": 1, "result": true, "error": null}
[5] [Okt 06 18:50:18:765] calling: isEventRunning,[on_shutdown]
[6] [Okt 06 18:50:18:765] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:50:19:030] JSON Bench for isEventRunning "params":["on_shutdown"],"id":1} Start: 18:50:18:765 Time: 00:00:00:265
[5] [Okt 06 18:50:19:171] resultstring={"id": 1, "result": false, "error": null}
[5] [Okt 06 18:50:19:171] calling: isEventRunning,[on_shutdown{user_logged_in}]
[6] [Okt 06 18:50:19:171] JSON service request https://localhost:4441/opsiclientd isEventRunning
[6] [Okt 06 18:50:19:452] JSON Bench for isEventRunning "params":["on_shutdown{user_logged_in}"],"id":1} Start: 18:50:19:171 Time: 00:00:00:281
[5] [Okt 06 18:50:19:562] resultstring={"id": 1, "result": false, "error": null}
[5] [Okt 06 18:50:19:562] Task completed
----

oder

[source,prompt]
----
[1] [Okt 12 18:07:57:352] opsiclientd_shutdown_starter: version: 4.0.7.0
[5] [Okt 12 18:07:57:352] clientid=pctry4detlef.uib.local
[5] [Okt 12 18:07:57:352] service_url=https://localhost:4441/opsiclientd
[5] [Okt 12 18:07:57:352] service_user=pctry4detlef.uib.local
[5] [Okt 12 18:07:57:352] host_key=***(confidential)***
[5] [Okt 12 18:07:57:352] myevent=on_shutdown
[6] [Okt 12 18:07:57:352] Working with ssl protocol: sslvSSLv23 - auto negotation
[6] [Okt 12 18:07:57:946] JSON Bench for backend_info "params":[],"id":1} Start: 18:07:57:352 Time: 00:00:00:594
[6] [Okt 12 18:07:58:055] opsidata connected
[5] [Okt 12 18:07:58:055] init Connection done
[6] [Okt 12 18:07:58:055] JSON service request https://localhost:4441/opsiclientd isInstallationPending
[6] [Okt 12 18:07:58:290] JSON Bench for isInstallationPending "params":[],"id":1} Start: 18:07:58:055 Time: 00:00:00:235
[5] [Okt 12 18:07:58:399] resultstring={"id": 1, "result": true, "error": null}
[2] [Okt 12 18:07:58:399] State installation pending detected, do not starting shutdown event.
[2] [Okt 12 18:07:58:399] Terminate called.
----


Diese Logdateien werden jedes Mal neu erzeugt und können im Fehlerfall überprüft werden. 
