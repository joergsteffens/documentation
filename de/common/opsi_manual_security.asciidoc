////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      19.10.2017
:Revision:  4.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-security]]
== Security

[[opsi-manual-security-introduction]]
=== Einführung

Opsi ist ein mächtiges Werkzeug zur zentralen Administration vieler Clients.
Damit steht der '{opsi-server}' natürlich auch im besonderen Fokus der Sicherheitsbetrachtung.
Wer den '{opsi-server}' kontrolliert, kontrolliert auch die Clients.
Wer einen Client davon überzeugen kann, er sei der richtige '{opsi-server}', der kontrolliert den Client.

Wieviel Energie und Geld Sie in die Absicherung der opsi Infrastruktur stecken sollten hängt von Ihren Sicherheitsbedürfnis und vom Einsatzszenario ab.
Ein '{opsi-server}' in der 'cloud' ist z.B. gefährdeter als einer in einem abgeschlossenen Inselnetz.

Im Folgenden haben wir die wichtigsten uns bekannten Maßnahmen und Probleme zusammengetragen.

Wir danken an dieser Stelle allen Kunden und Anwendern die uns auf Probleme hingewiesen und damit zur Sicherheit beigetragen haben.
Wir bitten Sie darum Probleme die Ihnen auffallen zunächst an info@uib.de zu melden bevor das Problem öffentlich gemacht wird.

[[opsi-manual-security-staytuned]]
=== Informiert bleiben
Informationen über Security relevante opsi Updates werden veröffentlicht in:

News Bereich des opsi forums: +
https://forum.opsi.org/viewforum.php?f=1

In der opsi Mailingliste: +
https://lists.sourceforge.net/lists/listinfo/opsi-announce_de

[[opsi-manual-security-server]]
=== Allgemeine Serversicherheit

Die opsi Software auf einem Server kann nicht sicherer als der Server selbst sein.
Daher ist es wichtig, dass Sie Ihren '{opsi-server}' regelmäßig aktualisieren, d.h. die vom Distributor angebotenen Security Updates auch einspielen.
Dies gilt sowohl für den '{opsi-configserver}' wie auch für die '{opsi-depotserver}'.

Sie können auf dem Server Programme installieren, welche Sie per E-Mail informieren wenn es Paketupdates gibt.

Debian, Ubuntu:: apticron

RHEL, CentOS::  yum-updatesd

Darüber hinaus gibt es viele Möglichkeiten Linuxserver weiter abzusichern.
Dies ist aber nicht das Thema dieses Handbuchs.
Gerne beraten wir Sie hierzu im Rahmen eines Support- und Pflegevertrages.

[[opsi-manual-security-client2server]]
=== Authentifizierung des Clients beim Server
Der Client authentifiziert sich beim Server mit seinem FQDN sowie dem opsi-host-key.
Client-seitig liegt dieser Key in der Datei `%programfiles%\opsi.org\opsi-client-agent\opsiclientd\opsiclientd.conf` und ist nur mit administrativen Rechten lesbar.
Serverseitig liegen die opsi-host-keys im jeweiligen Backend (z.B. unter `/etc/opsi/pckeys`).

Zusätzlich zu dieser Authentifizierung kann der opsiconfd angewiesen werden, zu überprüfen ob die IP-Nummer unter der sich der Client meldet auch zu dem angegebenen Clientnamen passt.
Um dieses Verhalten zu aktivieren setzen sie in der `/etc/opsi/opsiconfd.conf` folgenden Parameter:

[source,configfile]
----
verify ip = yes
----

und starten 'opsiconfd' neu:

[source,prompt]
----
systemctl restart opsiconfd.service
----

CAUTION: Verwenden Sie diese Feature nur wenn Sie eine vollstängig funktionierende Namensauflösung (vorwärts wie rückwärts) für Ihre Clients haben.

[[opsi-manual-security-server2client]]
=== Authentifizierung des Servers beim Client

Seit opsi 4.0.1 gibt es verschiedene Möglichkeiten den Client prüfen zulassen, ob der kontaktierte '{opsi-server}' vertrauenswürdig ist.

==== Variante 1: verify_server_cert

Bei der ersten Kontaktaufnahme zu einem '{opsi-server}' wird dessen SSL-Zertifikat akzeptiert und unter `C:\opsi.org\opsiclientd\server-certs` abgespeichert.
Bei der nächsten Kontaktaufnahme wird der 'public key' des gespeicherten Zertifikats ermittelt und mit diesem ein Zufallsstring sowie die eigenen Zugangsdaten verschlüsselt.
Diese Daten werden an den Server übergeben.
Der Server entschlüsselt mittels des 'private key' seines SSL-Zertifikats diese Daten und sendet zum Beweis der erfolgreichen Entschlüsselung den Zufallsstring an den Client zurück.
Nach erfolgreicher Prüfung des zurückgegbenen Zufallsstrings erachtet der Client den Server als vertrauenswürdig.

Auf diese Weise kann verhindert werden, dass per Angriff auf das DNS opsi-clients falsche Server als '{opsi-server}' akzeptieren.
Diese Methode minimiert das Risiko, dass bei einem Serverumzug Clients den neuen Server nicht mehr akzeptieren, da sich die Serverzertifikate von einem auf einen anderen Server übertragen lassen.
Außerdem ist keine Verteilung einer certification authority (CA) notwendig.

Die Schwäche dieser Methode ist die Möglichkeit eines 'Man-in-the-middle' Angriffs, da aus den oben genannten Gründen das Zertifikat keiner weiteren Prüfung unterzogen wird.

Die Prüfung betrifft die Webservice Kommunikation mit dem '{opsi-configserver}'.

Wird im Rahmen der opsi WAN-Erweiterung für die WAN-Clients als +clientconfig.depot.protocol+ +webdav+ verwendet, so wird auch der '{opsi-depotserver}' entsprechend geprüft. <<opsi-manual-wansupport-depot-protocol>>

Um diese Methode zu aktivieren, muss in der `opsiclientd.conf` in der Sektion '[global]' folgende Option gesetzt werden:
[source,configfile]
----
verify_server_cert = true
----
Mit dem folgenden Befehl richten Sie den Konfigurationseintrag ein, so das er vom '{opsi-configed}' bearbeitet werden kann:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert "verify_server_cert" false
----

Aktivieren können Sie dies nun in dem Sie im '{opsi-configed}' in der 'Serverkonfiguration' oder in den 'Hostparameter' einzelner Clients den Wert von 'false' auf 'true' setzen.

CAUTION: Dies sollte nur gemacht werden, wenn man genau weiß, was man tut. Ansonsten ist die Gefahr groß, dass die Clients den Kontakt zum Server verweigern und somit abgehängt sind.

==== Variante 2: verify_server_cert_by_ca

Dieser Mechanismus funktioniert analog zu der Art und Weise wie Browser die SSL-Zertifikate von Webservern prüfen.
SSL-Zertifikate werden klaglos akzeptiert wenn diese auf genau den FQDN (bzw. Wildcard) ausgestellt sind unter dem der Server angesprochen wird und das Zertifikat von einer dem Browser bekannten CA signiert ist.

Der opsicliend enthält eine nur für diesen Zweck erstellte Root-CA der 'uib gmbh' und akzeptiert Zertifikate, die durch die CA der 'uib gmbh' signiert sind.
Ebenso wird überprüft ob der 'commonName' mit dem FQDN des Servers übereinstimmt.
Ist eine der beiden Bedingungen nicht erfüllt, verweigert der Client die Kommunikation.

Diese Methode ist sicherer als die oben beschriebene, erfordert aber den Erwerb von Zertifikaten über die link:http://uib.de[uib gmbh].
Die Bedingungen und Preise zum Erwerb solcher Zertifikate erfahren Sie auf der link:https://uib.de/de/support-schulung/support/support-opsi-betrieb/[Preisliste] der 'uib gmbh'.
Die Überschüsse aus dem Zertifikatsverkauf fließen in die Pflege der opsi-Security.

Um diese Methode zu aktivieren, muss in der `opsiclientd.conf` in der Sektion '[global]' folgender Parameter gesetzt werden:
[source,configfile]
----
verify_server_cert_by_ca = true
----

Mit dem folgenden Befehl richten Sie den Konfigurationseintrag ein, so das er vom '{opsi-configed}' bearbeitet werden kann:
[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert_by_ca "verify_server_cert_by_ca" false
----

Aktivieren können Sie dies nun in dem Sie im '{opsi-configed}' in der 'Serverkonfiguration' oder in den 'Hostparameter' einzelner Clients den Wert von 'false' auf 'true' setzen.

CAUTION: Dies sollte nur getan werden, wenn man genau weiß, was man tut. Ansonsten ist die Gefahr groß, dass die Clients den Kontakt zum Server verweigern und somit abgehängt sind.

[[opsi-manual-security-clientcontrolserver]]
=== Authentifizierung beim controlserver des Client

Der '{opsiclientd}' besitzt eine Webservice-Schnittstelle die es erlaubt dem opsiclientd Anweisungen von aussen zu erteilen (<<opsi-manual-clientagent-control>>).

Für den Zugriff auf den Webservice wird eine Authentifizierung benötigt.
Dies geschieht entweder mittels des lokalen Administrator-Accounts (ein leeres Passwort ist unzulässig) oder mittels leerem Benutzernamen und dem '{opsi-host-key}s' als Passwort.

[[opsi-manual-security-adminnetwork]]
=== Konfiguration eines Admin-Networks

Die Idee eines Admin-Networks ist es, administrative Zugriffe auf Server nicht aus dem allgemeinen Produktiv-Netz zu erlauben, sondern nur von einem speziellen und abgesicherten Netzbereich.

Zwar müssen alle 'opsi-clients' Zugang zum opsi-webservice haben, diese dürfen aber nur eingeschränkt Daten abrufen und ändern.
Ein administrativer Zugang zum Webservice setzt die Mitgliedschaft in der Gruppe 'opsiadmin' voraus.

Über die Option +[global] admin networks+ in der `/etc/opsi/opsiconfd.conf` kann der administrative Zugriff auf den 'opsiconfd' auf Verbindungen von bestimmten Netzwerkadressen eingeschränkt werden. +
Es können mehrere Netzwerkadressen durch Kommas getrennt angegeben werden. +
Nicht-administrative Client-Verbindungen können auch aus anderen Netzwerken erfolgen.

Der default ist:
[source,configfile]
----
admin networks = 0.0.0.0/0
----
und erlaubt Zugriff von allen Netzen.

Eine Konfiguration wie z.B.
[source,configfile]
----
admin networks = 127.0.0.1/32, 10.1.1.0/24
----
würde administrative Zugriffe nur vom Server selbst und aus dem Netz '10.1.1.0/24' erlauben.

[[opsi-manual-security-pcpatch]]
=== Der user pcpatch

Der user 'pcpatch' dient in opsi 4 dem Mounten des depot-Shares (`opsi_depot`) durch den Client.

Ausnahme hier von sind die Produkte:

* `opsi-wim-capture` und `opsi-local-image-capture` welche als user 'pcpatch' auch den share `opsi_depot_rw` mit Schreibrechten mounten.
* `opsi-clonezilla` welches den share `opsi_images` mit Schreibrechten mountet.

Das Passwort des Benutzers 'pcpatch' wird in der Regel verschlüsselt abgelegt und auch nur verschlüsselt übertragen.
Es existieren jedoch auch unter gewissen Umständen Möglichkeiten das Passwort in Erfahrung zu bringen.
Um den Schaden der hierdurch entstehen kann zu minimieren empfehlen wir folgende Maßnahmen:

In der `/etc/samba/smb.conf` in allen Share-Definitionen ausser 'opsi_depot' dem user pcpatch den Zugriff verbieten über den Eintrag:
[source,configfile]
----
invalid users = root pcpatch
----

Alternativ +
In der `/etc/samba/smb.conf` dem User 'pcpatch' auf Leserechte beschränken durch den Eintrag in der [global] Sektion:

[source,configfile]
----
read list = pcpatch
----

WARNING: Für die Produkte `opsi-wim-capture` und `opsi-local-image-capture` muß der share `opsi_depot_rw` für 'pcpatch' beschreibbar sein. Für das Produkt `opsi-clonezilla` muß der share `opsi_images` beschreibbar sein.

Als weitere Maßnahme sollten Sie das Passwort des Users 'pcpatch' öfters ändern.
Da das Klartext-Passwort niemandem bekannt sein muss, kann es z.B. durch den regelmäßigigen Aufruf (z.B. per cronjob) des folgenden Scriptes auf ein zufälliges Passwort setzen.

[source,prompt]
----
opsi-admin -d task setPcpatchPassword $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16)
----

Falls Sie keine Netboot-Produkte verwenden, welche eine Anmeldung am Server als Benutzer 'pcpatch' benötigen, so können Sie zusätzlich die Anmeldung des Benutzer 'pcpatch' am Server unterbinden.
Dazu weisen Sie in der Datei `/etc/passwd` dem Benutzer 'pcpatch' die Shell +/bin/false+ zu.
Seit opsi 4.1 wird der Benutzer 'pcpatch' standardmäßig mit der Shell +/bin/false+ angelegt. Handlungsbedarf besteht hier nur, falls das System mit einer früheren Version installiert wurde.


[[opsi-manual-security-acl-configuration]]
=== Webservice-Zugriffsbeschränkungen

In der Datei `/etc/opsi/backendManager/acl.conf` kann der Zugriff auf
bestimmte Methoden und Attribute der zurückgegebenen Werte beschränkt werden.

Die Beschränkung greift auf die Basis-Methoden des Webservices, für welche eingeschränkt werden kann welche Benutzer oder Gruppen zugreifen dürfen sowie für welche Attribute der Zugriff erlaubt ist.

Der Zugriff sollte für eine Absicherung auf eine Freigabe der verwendeten Methoden beschränkt werden. Falls unklar ist welche Methoden verwendet werden, so kann dazu die Ausgabe des opsiconfd über die aufgerufenen Methoden herangezogen werden, welche im Falle eines Neustarts oder Stops des Dienstes in der Datei `/var/log/opsi/opsiconfd/opsiconfd.log` ausgegeben werden.

Weitere Informationen zu den Methoden des Webservice sind unter <<opsi-manual-api-datastructure-opsi4>> zu finden.


[[opsi-manual-security-bootimagerootpw]]
=== Root Passwort des bootimages ändern

Das root Passwort des bootimages ist per default 'linux123'.
Dies sollte aus Gründen der Sicherheit geändert werden.
Wie das geht ist beschrieben in: <<opsi-manual-netboot-bootimage-parametrization>>
