////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: https://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.2
:doctype:   book
:toc: left
:toclevels: 3
:numbered:
:icons: font
:xrefstyle: full
:chapter-label:
:gstarted:  getting started
:source-highlighter: rouge
:release: stable

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]


= opsi Getting Started opsi-Version 4.2

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]


[[opsi-getting-started-introduction]]
== Einführung

Diese Anleitung beschreibt detailliert die Installation und Inbetriebnahme eines {opsi-Server}s, ausgehend von den zur Verfügung gestellten Installationspaketen bis zur Testinstallation eines Clients.

Die Installation und Inbetriebnahme eines {opsi-Server}s erfolgt in mehreren Schritten:

. Grundinstallation des Servers
. Konfiguration des Servers (Anpassung an Netzwerkgegebenheiten, Einrichtung von Benutzern und Kennwörtern, Installation zu verteilender Produkte)
. Aufnahme und Einbindung von Rechnern in opsi
. Verteilung von Windows auf Clients
. Paketierung und Verteilung eigener Software

Danach kann auf einem Client automatisiert ein Betriebssystem mitsamt Software installiert und eine Hard- und Software-Inventur gemacht werden.

Weitere Features sind im opsi-Handbuch beschrieben.
Dort finden sich auch Erläuterungen und Erklärungen zu den kofinanzierten Erweiterungen und deren Einrichtung.

Die dargestellte Netzwerkkonfiguration ist exemplarisch und bezieht sich auf ein Netz u.a. ohne konkurrierende DHCP-Server (z.B. ein isoliertes Testnetz, in das der {opsi-Server} und seine Clients für die ersten Versuche gestellt werden können).

Wir empfehlen Ihnen dringend, erste Versuche mit opsi in einem Testnetz zu machen, das getrennt von anderen DHCP-Servern ist, welches Sie aber zeitweise an Ihr Hauptnetz ankoppeln können, um z.B. Aktualisierungen und Pakete aus dem Internet laden zu können

Für die Einbindung in bestehende Netze können Sie ggf. auf link:https://uib.de/de/support-schulung/support/[Beratungsleistungen durch uib] zurückgreifen.


[[opsi-getting-started-convention]]
== Konventionen dieses Dokuments

Befehle werden gesondert hervorgehoben:

[source,prompt]
----
dies ist ein Befehl
----

Im Rahmen der Installation und Konfiguration können Sie die Befehle aus diesen Feldern in der Regel der Reihe nach per _copy & paste_ aus diesem Dokument kopieren und ausführen.


[[opsi-getting-started-requirements]]
== Voraussetzungen

Nachfolgend werden die Voraussetzungen für die Installation von opsi auf einem Server beschrieben.

// Add the support matrix
include::../common/opsi_manual_supportmatrix.asciidoc[]


[[opsi-getting-started-requirements-hardware]]
=== Hardwarevoraussetzungen

Für den {opsi-Server} in realer Hardware wird benötigt:

* Intel-x86-kompatibler PC

* mindestens 2GB RAM

* eine Festplatte mit mindestens 60 GB Kapazität
** Ein {opsi-Server} sollte im Betrieb im Verzeichnis '/var/lib/opsi' über mindestens 16 GB freien Speicher verfügen

Im Testbetrieb sind die Anforderungen an die Leistungsfähigkeit der Maschine nicht besonders hoch. Für den Produktivbetrieb kann es nötig werden die Anforderungen an den Server an zu passen.

Bei der Verwendung der virtuellen Maschine muss ein angemessener Wirtsrechner genutzt werden. Es sollte mindestens ein Dualcore Prozessor und 4GB RAM vorhanden sein.
Für eine Teststellung kann problemlos eine weitere virtuellen Maschine auf dem selben Wirtsrechner als Client dienen.


[[opsi-getting-started-introduction-hardware-requirements-hints]]
==== Hinweise zur Ermittlung von Hardware-Anforderungen

Die Anforderungen an die Hardware hängen stark von der Verwendung ab.
Daher hier ein paar Hinweise damit Sie das passende für sich kalkulieren können.


[[opsi-getting-started-introduction-hardware-requirements-ram]]
===== Arbeitsspeicher

Jede aktive Samba Connection macht einen eigenen Samba Prozess auf.
Für diesen sind je nach Quelle zwischen 800 kB und 4 MB zu kalkulieren.
Wieviele opsi-clients gleichzeitig auf einen opsi Server zugreifen, hängt stark von den Tagesabläufen in Ihrer Umgebung ab.

Für link:https://www.samba.org/samba/docs/man/Samba3-ByExample/secure.html[Samba 3] wurden folgende Werte empfohlen:

|==========================
| Prozess | 1 User | 130 User | 500 User
| smbd    | 4 MB   | 520 MB   | 2000 MB
|==========================

Da uns keine Werte für aktuelle Samba-Versionen vorliegen, können die vorgenannten Zahlen lediglich als grobe Schätzung angesehen werden und sollten mit einem Sicherheitszuschlag von 50% versehen werden.

Der Speicherverbrauch des opsiconfd hängt stark (aber nicht nur) von der Anzahl der Clients ab.
Aus bestehenden Installationen kann der folgende Minimalverbrauch abgeleitet werden.
Bei den angegebenen Userzahlen handelt es sich hierbei nicht um gleichzeitig aktive User, sondern um die Gesamtzahl.

|==========================
| Prozess   | 100 User | 2000 User | 4000 User
| opsiconfd | 500 MB   | 1000 MB   | 2000 MB
|==========================

Auch hier sollten Sie einen Sicherheitszuschlag haben.


[[opsi-getting-started-introduction-hardware-requirements-hints-cpu]]
===== CPU

Der opsiconfd nutzt derzeit nur einen Kern.
Dieser eine Kern wird auch nur dann ausgelastet, wenn viele opsi-clients (>100) exakt gleichzeitig auf den Server zugreifen.
Aber das Betriebsystem, Samba, die Datenbank usw. benötigen ebenfalls Rechenzeit.

D.h. bei 500 Clients sollten zwei CPU-Kerne hinreichend sein, bei 1000 Clients sollten sie vier CPU-Kerne zur Verfügung stellen.

Beachten Sie auch, dass opsi-Depots Last auf den opsi-Configserver bringen, die zudem deutlich größer ist, als die eines einzelnen Clients.


[[opsi-getting-started-introduction-software-and-configuration-preconditions]]
=== Software und Konfigurationsvoraussetzungen

Folgende Voraussetzungen müssen erfüllt sein, damit Sie opsi installieren bzw. einsetzen können:


[[opsi-getting-started-requirements-software-dns-domainname]]
==== gültiger DNS Domainname

Ihr DNS Domainname muss mindestens aus einer Domain und einer Topleveldomain bestehen.
Anders ausgedrückt: der volle (Fully qualified) Domainname muss mindestens einen Punkt enthalten.  Weiterhin muss die Topleveldomain aus mindestens zwei Zeichen bestehen.

Erlaubt sind z.B.: 'domain.local', 'uib.de', 'subdomain.domain.de'. +
Nicht erlaubt ist z.B. 'mydomain.d', denn das wäre nur ein Zeichen in der Topleveldomain. +
Nicht erlaubt ist z.B. 'mydomain', denn das wäre nur eine Topleveldomain.

Siehe auch:

* https://de.wikipedia.org/wiki/Domain
* https://de.wikipedia.org/wiki/Hostname#Richtlinien


[[opsi-getting-started-requirements-software-dns-hostname]]
==== gültige DNS Hostnamen

Die Hostnamen (auch der Clients) müssen den Richtlinien entsprechen.
Dazu gehört auch, dass sie z.B. keine Unterstriche enthalten dürfen.

Kontrollieren Sie auf Ihrem {opsi-Server}, dass der folgende Befehl einen 'fully qualified domainname' zurück liefert, in dem mindestens zwei Punkte vorkommen, z.B. 'opsiserver.domain.local':

[source,prompt]
----
hostname -f
----

Sieht das Ergebnis nicht so aus (enthält z.B. '127.0.0.1' oder 'localhost') dann müssen Sie Ihre '/etc/hosts' oder Namensauflösung zunächst korrigieren.

Siehe auch:
* https://de.wikipedia.org/wiki/Hostname#Richtlinien


[[opsi-getting-started-requirements-software-dns-resolving]]
==== Korrekte Namensauflösung für den Server

Prüfen Sie den Eintrag für den {opsi-Server} in der Datei '/etc/hosts', oder aber die Ausgabe von:

[source,prompt]
----
getent hosts $(hostname -f)
----

Das Ergebnis sollte beispielsweise so aussehen: +
'192.168.1.1 server.domain.tld server'

Dabei sollte die IP-Adresse der Netzwerkschnittstelle aufgeführt sein, zu der sich die Clients später verbinden sollen.

Sieht das Ergebnis nicht so aus (enthält z.B. '127.0.0.1', '127.0.0.2' oder 'localhost'), dann müssen Sie die Datei `/etc/hosts` oder Ihre Namensauflösung korrigieren.

NOTE: Die Namen müssen den Vorgaben eines DNS-Systems entsprechen, aber ein DNS-Server wird für den Betrieb von opsi nicht benötigt.

NOTE: opsi benötigt kein _Active Directory_ oder ähnliches. Eine Integration ist möglich, wird aber nicht vorausgesetzt.


[[opsi-getting-started-requirements-software-lang]]
==== Gesetzte Spracheinstellungen

opsi setzt voraus, dass auf dem verwendeten Server Spracheinstellungen ('locale') gesetzt sind. +
Empfohlen wird die Verwendung einer UTF-8-kompatiblen Lokalisierung. +

Zur vereinfachten Prüfung kann folgender Befehl verwendet werden:
[source,prompt]
----
test -e /etc/default/locale && echo "ok" || (echo "Check locales:" && locale)
----

Wird _ok_ ausgegeben, so sind locales gesetzt.
Wird _check locales:_ ausgegeben, so prüfen Sie bitte, dass in der nachfolgend
ausgegebenen Liste für 'LANG' oder 'LC_ALL' ein Wert gesetzt ist, welcher der von Ihnen verwendeten Sprache entspricht.

Für Deutsch empfehlen wir `de_DE.UTF-8`.

Die folgenden Befehle zeigen beispielhaft wie die Einstellung geändert
werden kann, sollte kein oder ein ungewollte Wert gesetzt sein:

[source,prompt]
----
sudo locale-gen de_DE.UTF-8
update-locale LANG=de_DE.UTF-8
----

Zum systemweiten Anwenden der Spracheinstellung sollte der Server neu gestartet werden.

Weitere Informationen entnehmen Sie bitte dem Handbuch der von Ihnen verwendeten Linux-Distribution.


[[opsi-getting-started-installation-config-ports]]
=== Benötigte Netzwerk-Ports

Dies ist eine Übersicht über verwendete Ports und Netzwerk-Protokolle.

* opsi-server Webservice: TCP 4447 +
Client zum Server, Depot zum Server (bidirektional, Verbindungen via localhost).

* opsi-client Webservice: TCP 4441 +
Server zum Client, Verbindung vom Client an sich selbst via localhost.

* opsi-client Webservice: TCP 4442 +
Verbindung vom Client an sich selbst via localhost.

* opsi-client Notifier: TCP 45000 - 65536 +
Verbindung vom Client an sich selbst via localhost. +
Ein zufälliger Port aus dem gegebenen Bereich wird ausgewählt.

* TFTP: UDP 69 +
Verbindung vom Client zum Server.

* CIFS/SMB: UDP 137 / UDP 138 (netbios) / TCP 139 / TCP 445 +
Client zu Server (bidirektional). +
Abhängig von der Version des Client-Betriebssystems.

* WEBDAV: TCP 80
* WINEXE: UDP 137 / UDP 138 (netbios) / TCP 139 / TCP 445
Server zu Client (bidirektional). +
Abhängig von der Version des Client-Betriebssystems.

* grafana Webservice (optional): TCP 3000 +
Verbindung vom Client zum opsi-server.

* SSH (optional): TCP 22

* DNS: TCP 53

* WakeOnLan (WOL): UDP 7 / UDP 9 / UDP 12287 +
Verbindung vom Server zum Client. Diese Ports sind konfigurierbar.

* HTTP: TCP 80 +
Um Server-Updates z.B. von http://download.opensuse.org/ zu laden.

* HTTPS: TCP 443 +
Um Server-Updates z.B. von https://download.uib.de zu laden (opsi-package-updater).


[[opsi-getting-started-installation]]
== {opsi-Server} Installation

Dieses Kapitel beschreibt die Installation und Konfiguration eines opsi-Servers.

Nachdem Sie dieses Kapitel durchgearbeitet haben, haben Sie einen funktionsfähigen opsi-Server.
Dies dient als Grundlage für alle weiterführenden Kapitel.

Wir gehen in den folgenden Kapiteln davon aus, dass Sie eine funktionierende Netzwerkkonfiguration auf Ihrem Server haben.


[[opsi-getting-started-installation-base]]
=== {opsi-Server}-Grundinstallation

In diesem Abschnitt werden verschiedene Varianten der Installation eines '{opsi-server}s' dargestellt.
Am Ende haben Sie ein Serversystem, das bereit für die endgültige Konfiguration und Inbetriebnahme ist.
Zur Evaluierung von opsi empfehlen wir die Verwendung der <<opsi-getting-started-installation-base-vm,vorinstallierten virtuellen Maschine>>.
Ansonsten sollten Sie das Betriebssystem wählen, mit welchem Sie sich am besten auskennen.
Sorgen Sie in diesem Fall dafür, dass die Pakete auf dem Server aktuell sind!

Falls in Ihrem Netzwerk ein Proxyserver zum Zugriff auf das Internet verwendet werden muss, so denken Sie daran diesen auch auf Ihrem {opsi-server} einzutragen.
Insbesondere die Umgebungsvariablen `http_proxy` und `https_proxy`.

Bei Problemen können Sie sich an den durch die Community bereitgestellten link:https://forum.opsi.org[Freien Support] wenden.


[[opsi-getting-started-installation-base-vm]]
==== Inbetriebnahme der von uib vorkonfigurierten virtuellen Maschine

Da die Anforderungen an die Rechengeschwindigkeit eher niedrig sind, lässt sich der '{opsi-server}' auch problemlos als virtuelle Maschine installieren.
Für ESX, VMware und  Virtualbox haben wir bereits eine entsprechende Maschine eingerichtet.
Die Dateien stehen im Internet zur Verfügung.
Zum Betrieb genügt ein kostenfreier VMware-Player oder Virtualbox.
Sie können diese Maschine aber auch in VMware-Server oder ESXi betreiben.

[[opsi-getting-started-installation-base-vm-start]]
===== Auspacken und erster Start

*VMware*

Sofern Sie bereits über einen Gastrechner verfügen, auf dem die VMware-Vollversion oder ein VMware-Player installiert ist, erledigen Sie die Grundinstallation des '{opsi-server}s' mit wenigen Mausklicks:

* Laden Sie die aktuelle opsi-ServerVM von link:https://uib.de/de/opsi/opsi-testen-download/[uib.de]
* Entpacken Sie den Zip-File, das Verzeichnis `opsivm` wird erzeugt.
* Starten Sie den VMware-Player. +
Öffnen Sie "Open a Virtual Maschine", suchen Sie in dessen Dateiauswahldialog das Verzeichnis `opsivm` und darin die Datei `opsivm.ovf`. Gegebenenfalls müssen Sie ganz unten noch die anzuzeigenden Dateitypen auf ovf ändern.
Sie können den Server jetzt unter einem eigenen Namen importieren. Der virtuelle Server kann gestartet werden.

*ESXi-Server*

* Laden Sie die aktuelle opsi-ServerVM von link:https://uib.de/de/opsi/opsi-testen-download/[uib.de]
* Entpacken Sie den Zip-File, das Verzeichnis `opsivm` wird erzeugt
* Starten Sie den vSphere Client. +
Erstellen Sie sich einen neuen Rechner über 'Datei' / 'OVF-Vorlage bereitstellen....' und die Beantwortung der Folge-Dialoge.

*Virtualbox*

* Laden Sie die aktuelle opsi-ServerVM von link:https://uib.de/de/opsi/opsi-testen-download/[uib.de]
* Entpacken Sie den Zip-File, das Verzeichnis `opsivm` wird erzeugt
* Starten Sie Virtualbox. +
Über den Menüpunkt 'Datei' / 'Appliance importieren' können Sie die Datei `opsivm.ovf` laden.

*Allgemein*

Den VMware-Player können Sie für alle gängigen Betriebssysteme kostenfrei bei link:https://www.vmware.com/[vmware.com] beziehen.
Er lässt sich in der Regel problemlos installieren, sofern die Ausstattung des Wirtsrechners, insbesondere mit Speicher, den Bedarf mehrerer parallel laufender Betriebssysteme abdeckt.

[[opsi-getting-started-installation-base-vm-lang]]
===== Sprachauswahl
Nach dem Start des Systems müssen Sie die gewünschte Sprache auswählen:

.Sprachauswahl
image::abbildung1.png["Screenshot: Sprachauswahl", pdfwidth=90%]

[[opsi-getting-started-installation-base-vm-1stboot]]
=====  Erster Start

Zur Arbeit mit dem {opsi-Server} ist es von sehr großem Vorteil, wenn dieser direkt mit dem Internet verbunden ist. Zur Netzwerkkonfiguration wird beim ersten Start der Appliance automatisch das Skript `1stboot.py` aufgerufen. +
Wenn Sie das System anders aufgesetzt haben oder einen neuen Anlauf nehmen wollen, können sie `1stboot.py` bzw. `/usr/local/bin/1stboot.py` auch auf der Kommandozeile aufrufen.

Die Logdatei von `1stboot.py` ist `/var/lib/1stboot/1stboot.log`.

WARNING: `1stboot.py` eignet sich nicht, um einen konfigurierten {opsi-Server} nachträglich umzubenennen!

.Startmaske
image::abbildung2.png["Screenshot: 1stboot.py Startmaske", pdfwidth=90%]

Sie werden dann zur Eingabe von Informationen zur Konfiguration des Netzwerkes aufgefordert. Beantworten Sie die Fragen.

.Eingabemaske
image::1stboot-Eingabemaske.png["Screenshot: 1stboot Eingabemaske", pdfwidth=90%]

Im Folgenden werden Sie gefragt nach:

Servername:: Name diese Servers (ohne Domain) z.B. +opsidepot+

Domain:: DNS-Domain (nicht Windows-Domain, muss einen Punkt enthalten) z.B. +opsi.local+ oder +meinefirma.local+

IP-Adresse:: Adresse dieses Servers z.B. +192.168.1.50+

Netzmaske:: Netzmaske dieses Servers z.B. +255.255.255.0+

Windows Domain:: Name der Windows Domain (nicht DNS-Domain)

Gateway::	IP-Adresse des Internetgateways, z.B. +192.168.1.1+

Proxy::	Soweit zum Internetzugriff benötigt, die Angaben zum Proxy: z.B. `http://myuser:mypass@192.168.1.5:8080`

DNS-Server::	IP-Adresse des Nameservers, z.B. +192.168.1.1+

Mailrelay::	IP-Adresse des Mailservers z.B. +192.168.1.1+

Tftpserver::	Als 'TFTP server' geben Sie in der Regel die IPv4-Adresse des Servers (='IP-Adresse') ein.

Passwort für root::	Das Passwort für den lokalen Administrator-Benutzer.

Passwort für adminuser::	Das Passwort für den lokalen opsi-Administrator.

Nach Abschluss des Programms `1stboot.py` wird die virtuelle Maschine, sofern Sie automatisch gestartet war, auch automatisch neu gebootet.


[[opsi-getting-started-installation-base-vm-second-start]]
===== Zweiter Start

Nach dem Neustart bzw. nach Fertigstellen der Netzwerkkonfiguration melden Sie sich als Benutzer +adminuser+ mit dem von Ihnen vergebenen Passwort an.

Sie befinden sich direkt auf der graphischen Oberfläche des '{opsi-server}s' (für diese wird ein Ressourcen schonender Windowsmanager verwendet).
Zur Begrüßung erscheint ein „Firefox“-Browser-Fenster mit dem Verweis auf das vorliegende Handbuch und weiteren Hinweisen.

Wenn die Meldung erscheint, dass keine Netzwerkverbindung verfügbar ist, kann dies mit der speziellen Start-Konfiguration der virtuellen Appliance zusammenhängen.
Vor einer weiteren Fehlersuche sollten Sie zunächst probieren, den Server nochmals zu rebooten (z.B. mit dem Ausschaltknopf in der Bedienleiste unten auf der graphischen Oberfläche).

.Graphische Startoberfläche des opsiservers
image::opsiserver_start_gui.png["Screenshot: Graphische Startoberfläche des opsiservers", pdfwidth=90%]

Sobald die Netzwerkkonfiguration funktioniert, können Sie auch remote auf den {opsi-Server} zugreifen:

* Verwenden Sie 'ssh' in der Befehlszeile, um auf den Server zuzugreifen (in Linux-Systemen stets vorhanden, unter Windows mit link:https://www.chiark.greenend.org.uk/~sgtatham/putty/[putty]) +
Als Benutzernamen verwenden Sie root, Sie authentifizieren sich mit dem Root-Passwort.

[[opsi-getting-started-installation-base-vm-term]]
===== Terminalfenster

Im Folgenden müssen einige Befehle auf der Kommandozeile eingegeben werden. Die Verwendung der Kommandozeile ist möglicherweise der einfachste Weg, um diese Anweisungen durchzuarbeiten.

Ein Fenster zur Text-Eingabe von Befehlen, d.h. ein Terminalfenster, erhält man auf verschiedenen Wegen:

* Remotezugriff per ssh auf den {opsi-Server} (s. vorheriger Abschnitt)

* Öffnen eines Terminalfensters in der graphischen Oberfläche (direkt auf dem {opsi-Server}) durch Klicken auf das Terminal-Icon in der Icon-Leiste der graphischen Oberfläche.

* Öffnen eines Terminalfensters in der graphischen Oberfläche (direkt auf dem {opsi-Server}) durch Rechtsklick in der Fläche und Auswahl von "Terminal".
Dazu hilfreich: die graphische Oberfläche hat mehrere Arbeitsflächen, erreichbar durch die Auswahl-Schaltflächen in der linken oberen Bildschirmecke.

Besonders vorteilhaft ist es, Befehle aus den Anleitungen, z.B. diesem Handbuch, direkt  per Kopieren & Einfügen in ein Terminalfenster zu übertragen, soweit die entsprechende Anwendungsumgebung dies unterstützt.

Beispiele aus Konfigurationsdateien sind in den Dokumentationen wie folgt formatiert:
[source,configfile]
----
depoturl = smb://smbhost/sharename/path
----

Befehle sind folgendermaßen hervorgehoben:
[source,prompt]
----
cd /tmp
ls -l
----

In '<spitzen Klammern>' werden Namen dargestellt, die durch ihre Bedeutung ersetzt werden müssen. +
Beispiel: Der Fileshare, auf dem die opsi Softwarepakete liegen, wird '<opsi-depot-share>' genannt und liegt auf einem realen Server in der Regel in '/var/lib/opsi/depot'. +
Das Softwarepaket: `<opsi-depot-share>/ooffice` liegt dann tatsächlich unter `/var/lib/opsi/depot/ooffice`.

[[opsi-getting-started-installation-base-vm-network]]
===== Überprüfen und ggf. korrigieren der Netzwerkanbindung

Wenn die Netzwerkkonfiguration korrekt ist und der Rechner Anbindung an das Internet hat, können Sie mit dem Browser im Startfenster bereits auf eine beliebige Adresse im Internet zugreifen.

Sofern nicht alles funktioniert, öffnen Sie am besten ein Terminalfenster (möglicherweise geht es dann noch nicht remote, sondern nur auf der Server-Oberfläche), und prüfen die Netzwerkanbindung mit den üblichen, hier nicht zu erklärenden Checks.

Sie können im Terminalfenster auch das Kommando aufrufen und die Netzwerkkonfiguration neu eingeben:
[source,prompt]
----
1stboot.py
----

Ein Systemneustart wird dann durch den Befehl erzwungen:
[source,prompt]
----
reboot
----

Wenn die Netzwerkanbindung funktioniert, setzen Sie die Konfiguration des {opsi-Server}s fort, um dann mit ersten Installationstest beginnen zu können.

[[opsi-getting-started-installation-base-vm-update-server]]
===== Aktualisierung des opsi-Servers

Bringen Sie den opsi-Server auf den aktuellen Stand, indem Sie das Icon 'Update OS' auf dem Desktop doppelt klicken. Geben Sie das Passwort für den adminuser ein und bestätigen gegebenfalls mit 'Y' falls erforderlich.

include::opsi-getting-started-apt-proxy-config.asciidoc[]


[[opsi-getting-started-installation-base-vm-update-opsi-product]]
===== Installieren der Standard opsi-Produkte

Installieren Sie die Standard opsi-Produkte durch Doppelklick auf das Icon 'First package installation'. Bitte geben Sie das Passwort für den +adminuser+ ein.
Hierdurch werden automatisiert die aktuellen opsi-Pakete, incl. Templates für Betriebssysteminstallationen, aus den opsi-Repositories geholt und auf dem Server installiert.

Für weitere Informationen siehe auch <<opsi-getting-started-installation-config-get-essential-products>>.


[[opsi-getting-started-installation-base-vm-start-configed]]
===== Start der Management-Oberfläche

Die Management-Oberfläche können Sie durch einen Doppelklick auf das Icon 'opsi Management GUI' aufrufen.
Zur Beschreibung der Management-Oberfläche gehen Sie zu <<firststeps-software-deployment-configed-start>>.

Damit ist die grundlegende Server-Konfiguration beendet.

Sie können nun fortfahren mit:

* <<firststeps-software-deployment-client-integration>>

* <<firststeps-osinstall,Betriebssysteminstallation>>

// include quickinstall chapter
:leveloffset: 2
include::../common/opsi_manual_quickinstall.asciidoc[]
:leveloffset: 0

[[opsi-getting-started-installation-base-prerequires]]
==== Vorbedingung für eine Installation auf einem Server

Der opsi-Server benötigt ab Version 4.2 Zugriff auf eine Redis- und eine Grafana-Instanz.
Sollen diese Dienste ebenfalls auf dem opsi-Server bereitgestellt werden, empfehlen wir das Paket _opsi-server-full_ für die Installation zu nutzen. Dieses Paket installiert und konfiguriert alles notwendige auf dem opsi-Server (im folgenden wird dies als Single-Server-Setup beschrieben). Diese Empfehlung gilt für alle unterstützten Betriebssysteme, außer bei Univention UCS. Auf diesen Systemen sollte nach wie vor das opsi4ucs Paket installiert werden.

NOTE: Das _opsi-server-full_-Paket installiert alle benötigten Komponenten zum Betrieb von opsi auf einem Server. +
Sollen gewisse Komponenten nicht installiert werden, beispielsweise wenn Redis, MySQL oder Grafana auf einem anderen Server laufen sollen, +
können stattdessen die Pakete _opsi-server_ oder _opsi-server-expert_ verwendet werden.

Wir empfehlen für Grafana die offiziellen Grafana-Repositories zu nutzen:


===== Debian/Ubuntu/UCS:

[source,bash]
----
sudo mkdir -p /usr/local/share/keyrings
REPO_URL=https://packages.grafana.com
REPO_KEY=/usr/local/share/keyrings/grafana.gpg
sudo apt install -y apt-transport-https software-properties-common curl gpg
curl -fsSL ${REPO_URL}/gpg.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/oss/deb stable main" > /etc/apt/sources.list.d/grafana.list
----

===== RHEL/CentOS/Alma/Rocky:

[source,bash]
----
yum install wget
cd /etc/yum.repos.d
cat <<EOF > grafana.repo
[grafana]
name=grafana
baseurl=https://packages.grafana.com/oss/rpm
repo_gpgcheck=1
enabled=1
gpgcheck=1
gpgkey=https://packages.grafana.com/gpg.key
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
EOF
----

===== openSUSE/SLES:

[source,bash]
----
zypper install wget
cd /etc/zypp/repos.d
cat <<EOF > grafana.repo
[grafana]
name=grafana
baseurl=https://packages.grafana.com/oss/rpm
repo_gpgcheck=1
enabled=1
gpgcheck=1
gpgkey=https://packages.grafana.com/gpg.key
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
EOF
----

NOTE: Möchten Sie statt `mariaDB` mysql verwenden, dann muss bei `opsi-setup --configure-mysql` ein Benutzer mit `mysql_native_password` angegeben werden. 

Um mysql_native_password bei dem Benutzer root zu aktivieren sind folgende Schritte notwendig: 

* `skip-grant-tables` in der mysql Konfiguration unter `[mysqld]` eintragen
* mysql Service neustarten
* als root mit mysql -u root -p einlogen
* `flush privileges;` und
* `ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'NewPassword';` ausführen.
* `skip-grant-tables` wieder entfernen und Service neustarten



[[opsi-getting-started-installation-base-deb]]
==== Installation auf einem Debian / Ubuntu System

In diesem Abschnitt wird davon ausgegangen, dass Sie mit dem Debian-Paketsystem vertraut sind (Informationen zu diesem Thema finden Sie in den einschlägigen Büchern, in den man-pages oder unter link:https://www.debiananwenderhandbuch.de/[debiananwenderhandbuch.de]).

IMPORTANT: Beachten Sie unbedingt die <<opsi-getting-started-requirements,Voraussetzungen>> und <<opsi-getting-started-installation-base-prerequires,Vorbereitung>>!

Wir empfehlen zunächst folgende Installationen:

[source,bash]
----
apt install host pigz apt-transport-https software-properties-common curl gpg
mkdir -p /usr/local/share/keyrings
----

Weiterhin muss Samba installiert sein:

[source,bash]
----
apt install samba samba-common smbclient cifs-utils
----

Um nun opsi zu installieren muss das opsi-Repository für apt eingetragen werden:

*Ubuntu 20.04 LTS _Focal Fossa_:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/xUbuntu_20.04
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----

*Ubuntu 18.04 LTS _Bionic Beaver_:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/xUbuntu_18.04
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----

*Debian 11 _Bullseye_:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/Debian_11
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----

*Debian 10 _Buster_:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/Debian_10
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----

*Debian 9 _Stretch_:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/Debian_9
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----

Prüfen Sie ob der Import erfolgreich war:
[source,bash]
----
gpg /usr/local/share/keyrings/opsi.gpg 2>/dev/null
----

sollte unter anderem enthalten:
[source,bash]
----
pub   rsa2048 2017-09-30 [SC] [expires: 2023-11-09]
      2E98F7B5A5B2C8FE7F609705D1F933E6D8361F81
uid           home:uibmz:opsi OBS Project <home:uibmz:opsi@build.opensuse.org>
----

include::opsi-getting-started-apt-proxy-config.asciidoc[]


Stellen Sie vor Installation der opsi-Pakete sicher, dass ihr Server einen gültigen FQDN besitzt:
[source,prompt]
----
hostname -f
----

Der ausgegebene FQDN muss mindestens zwei Punkte enthalten (siehe: <<opsi-getting-started-requirements-software-dns-domainname>>).


Führen Sie nun folgende Befehle aus um opsi auf dem Server zu installieren:

*Single-Server-Setup:*
[source,prompt]
----
apt update
apt install opsi-server-full
----

*Manuelles Setup:*
[source,prompt]
----
apt update
apt install redis-server redis-timeseries grafana mariadb-server
systemctl daemon-reload
systemctl enable grafana-server
systemctl start grafana-server
apt install opsi-server
apt install opsi-windows-support
----

Falls Sie bei der Installation von opsi-tftp-hpa nach dem Tftp-Basisverzeichnis gefragt werden, beantworten Sie diese Frage mit _/tftpboot_.

Da Sie opsi auf einer existierenden Maschine eingespielt haben, gehen wir davon aus, dass Ihre Netzwerkkonfiguration korrekt ist. +
Machen Sie daher mit dem Punkt <<opsi-getting-started-installation-config>> weiter.


[[opsi-getting-started-installation-base-ucs]]
==== Installation auf einem Univention Corporate Server (UCS)


IMPORTANT: Beachten Sie unbedingt die <<opsi-getting-started-requirements,Voraussetzungen>> und <<opsi-getting-started-installation-base-prerequires,Vorbereitung>>!

Die Installation auf einem Univention Corporate Server ist sowohl über das dort vorhandene App Center als auch auf klassischem Wege über die von uib gepflegten Repositories möglich.

Beides sind gleichwertige Installationsmöglichkeiten. Wir empfehlen pro Server nur jeweils eine davon zu verwenden.
Werden neue Betriebssystempakete veröffentlicht, so stehen diese bei der Verwendung der uib-Repositories schneller zur Verfügung als über das App Center.
Bei der Verwendung des App-Center wird der Wechsel auf eine neue UCS-Version (bspw. von UCS 4.4 nach UCS 5) vom Betriebssystem blockiert, bis alle installierten Apps unter der neuen Betriebssystemversion zur Verfügung stehen.

Im Rahmen von opsi 4.2 wurde der UCS-Support den anderen Distributionen angepasst. Die Funktion von opsi4ucs übernimmt ab opsi 4.2 das opsi-server Paket und dessen Varianten.
Das opsi4ucs Paket existiert in opsi 4.2 als Transitionpaket, um die Migration von opsi 4.1 Installationen zu vereinfachen. Während des Upgradeprozesses wird das opsi4ucs Paket automatisch durch die opsi-server Pakete ersetzt.

Auf dem ersten {opsi-Server} in einer Umgebung wird das Backend zur Verwendung des vorhandenen MySQL-Servers konfiguriert.
Alle nachfolgenden Server werden in opsi als Depots registriert werden.

////
[[opsi-getting-started-installation-base-ucs-appcenter]]
===== Installation mittels Univention App-Center

Über das Univention App-Center steht eine automatisierte Installation des {opsi-server}s zur Verfügung.
Die Installations-App für opsi befindet sich in der UCS-Management-Oberfläche in der Kategorie 'System'.

Falls Sie ein Update einer vorhandenen opsi-Umgebung durchführen möchten, lesen Sie bitte auch das darauf folgende Kapitel.

Zur Installation des {opsi-server}s werden automatisch weitere Pakete installiert: 'opsi-tftpd-hpa', 'opsi-windows-support', 'univention-mariadb' bzw. 'univention-mysql'.

Falls ein existierender {opsi-server} entdeckt wird, so wird 'opsi-package-updater' so konfiguriert, dass er die Pakete von diesem Server bezieht.
Der 'opsi-package-updater' wird bei der Installation - nicht bei einer Aktualisierung - zum Einspielen der minimalen opsi-Produkte aufgerufen.
Im Rahmen eines Major- oder Minor-Update werden Paketaktualisierungen eingespielt.

Bitte beachten Sie, dass anschließend kein automatischer Transfer von Clients nach opsi stattfindet.
Mehr Informationen unter <<opsi-getting-started-installation-base-ucs-listener>>.

Die opsi-Installation auf einem UCS-Server über das Univention App-Center ist damit abgeschlossen.
Weiter geht es mit <<firststeps-software-deployment-client-integration>>


[[opsi-getting-started-installation-upgrade-appcenter]]
===== Update vorhandener opsi-Installation von einem UCS 3 auf UCS 4 (über App-Center)

Eine der wichtigsten Änderungen, die mit dem Update für opsi 4.0.5 gekommen ist, ist die Unterstützung der Gruppe 'opsifileadmins'. Diese Gruppe ersetzt in UCS zukünftig die Gruppe 'pcpatch'.
'Opsifileadmins' wurde zwar schon mit der Unterstützung von UCS 3.0 eingeführt, es wurde allerdings nur auf Installationen eingerichtet, die mit Samba 4 und den Univention Directory Services (Samba4-AD) installiert wurden.
Auf allen anderen Varianten und Rollen, wurde bisher die Gruppe als 'pcpatch' angelegt. +
Da dieser Umstand nicht nur im Installationshandling ein Problem darstellt, sondern auch Probleme bei möglichen Migrationen (besonders von Samba3 auf Samba4) verursachen kann, wird seit opsi 4.0.5 die Gruppe 'pcpatch' als 'opsifileadmins' angelegt.

WARNING: Um diese Anforderungen sauber in das Integrationspaket implementieren zu können, wird die Gruppe 'pcpatch', falls vorhanden, automatisch über das Integrationspaket in 'opsifileadmins' umbenannt.
Dies geschieht über das join-Skript. Falls Ihr Configserver auf einem 'Master' oder 'Backup' betrieben wird, wird das Join-Skript automatisch ausgeführt. +
 +
Der Hauptgrund für diese drastische Maßnahme ist, dass die manuelle Umbenennung dieser Gruppe nicht trivial ist, da es sich um eine primäre Gruppe handelt. Wir empfehlen vor dem Einspielen dieses Updates zu überprüfen, ob Ihre Gruppe noch 'pcpatch' heißt. Wenn dem so ist, sollte das Update - angefangen beim Configserver - auf allen Depotservern zeitnah eingespielt werden, da ansonsten der Betrieb der Multidepot Umgebung gestört wird. Wenn Ihre Gruppe schon 'opsifileadmins'
heißt, sollten keine Beeinträchtigungen auftreten. Dennoch wird empfohlen, nach dem Einspielen der Updates alle opsi-Server auf Funktion zu überprüfen.
////

[[opsi-getting-started-installation-base-ucs-manually]]
===== Manuelle opsi-Installation unter UCS (ohne App-Center)

IMPORTANT: Beachten Sie unbedingt die <<opsi-getting-started-requirements,Voraussetzungen>> und <<opsi-getting-started-installation-base-prerequires,Vorbereitung>>!

Notwendige Vorbereitungen:

* Samba muss konfiguriert sein. Für den Einsatz auf einem Server in der Rolle 'Member' muss `univention-samba` anstatt `univention-samba4` zum Einsatz kommen.

* `univention-mariadb` oder `univention-mysql` muss installiert sein

* Soll die Maschine auch als DHCP-Server eingesetzt werden, muss der Daemon dhcpd konfiguriert und am Laufen sein.

Die Installation von opsi ist möglich auf den Rollen 'Master', 'Backup', 'Slave' und 'Member'.
Für die Installation auf einem 'Member' beachten Sie unbedingt <<opsi-getting-started-installation-base-ucs-member>>!

Die folgende Dokumentation geht von einer Installation auf der Rolle 'Master' mit Samba 4 aus.

CAUTION: Wird die Installation auf einem 'Slave' ausgeführt, muss dieser bereits gegenüber dem 'Master' gejoint und während der Grundinstallation Samba 4 installiert worden sein. +
Die UCS-Konfiguration wird überlicherweise auf dem 'Master' vorgenommen, während die Installation und Konfiguration von opsi auf dem 'Slave' geschieht.

Die klassischen Installationsvariante mit dem Benutzer: 'pcpatch' mit der primären Gruppe 'pcpatch' kann unter UCS nicht eingehalten werden. Da Samba4 den grundlegenden Restriktionen von Active-Directory unterliegt, sind Gruppen mit der gleichen Bezeichnung wie User (wie in Unix/Linux üblich) nicht mehr erlaubt.
Aus diesem Grund wurde für UCS 3 die neue Konfigurationsdatei `/etc/opsi/opsi.conf` eingeführt, über welche gesteuert wird, wie die Gruppe für den Samba-Zugriff auf die Freigaben bestimmt wird. Seit UCS 3 wird über diese Datei der Gruppenname 'pcpatch' umbenannt und heißt von nun an: 'opsifileadmins'.
Das bedeutet, dass die User, die Zugriffsrechte für die Freigaben von opsi erhalten müssen (opsi-Paketierer) nicht Mitglied der Gruppe 'pcpatch', sondern Mitglied der Gruppe 'opsifileadmins' sein müssen. Diese Besonderheit gilt nur für UCS und unterscheidet sich von den anderen Distributionen und in weiterführenden Kapiteln der opsi-Dokumentationen. Unter UCS wird der User 'pcpatch' als vollwertiger Domänenbenutzer angelegt.
Nähere Informationen über diese neue Konfigurationsdatei können Sie dem Handbuch entnehmen.

* Um opsi zu installieren, tragen Sie das entsprechende Repository ein:

*Univention UCS 4.4:*
[source,bash]
[subs="attributes"]
----
REPO_URL=https://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/{release}/Univention_4.4
REPO_KEY=/usr/local/share/keyrings/opsi.gpg
echo "deb [signed-by=${REPO_KEY}] ${REPO_URL}/ /" > /etc/apt/sources.list.d/opsi.list
curl -fsSL ${REPO_URL}/Release.key | gpg --dearmor | sudo tee ${REPO_KEY} > /dev/null
----


Für die Installation führen Sie nun folgende Befehle aus:

*Single-Server-Setup:*
[source,bash]
----
univention-install opsi-server-full
----

*Manuelles Setup:*
[source,bash]
----
univention-install redis-server redis-timeseries grafana
systemctl daemon-reload
systemctl enable grafana-server
systemctl start grafana-server
univention-install opsi-server
----

Ist die Rolle des Zielsystems eine andere als 'Master' oder 'Backup', muss nun noch das opsi4ucs Join-Skript ausgeführt werden:

[source,bash]
----
univention-run-join-scripts
----

Unter der URL `https://<servername>:4447` finden Sie nun einen Link zur opsi Management Oberfläche.

Um den opsi-Konfigurations-Editor verwenden zu können, muss ein Benutzer Mitglied der Gruppe {opsi-admin-group} sein. Die Gruppenzugehörigkeit eines Users kann über Univention-Admin bearbeitet werden. Der Benutzer Administrator wird während der Installation automatisch in diese Gruppe aufgenommen.

Abschliessend muss noch im UDM unter dem Punkt Freigaben für die 'opsi_depot' -Freigabe unter Erweiterte Einstellungen -> Erweiterte Samba-Einstellungen: Die Option: 'follow symlinks' auf 'yes' gesetzt werden. Das gleiche sollte man am besten auch für die 'opsi_depot_rw' -Freigabe erledigen, damit später die Treiberintegration keine Probleme verursacht. Sollte sich das `/var/lib/opsi/depot` -Verzeichnis auf einer extra Partition oder Festplatte befinden, muss man noch zusätzlich für diese Freigaben die Option wide links auf 'yes' setzen.

Um sicher zu stellen, dass alle Einstellungen von opsi nun korrekt übernommen wurden, sollte man noch folgende Befehle ausführen:

[source,bash]
----
opsi-setup --init-current-config
opsi-set-rights
systemctl restart opsiconfd.service
systemctl restart opsipxeconfd.service
----

Bei samba4 handelt es sich um einen zentralen Dienst, daher wird dieser nicht automatisch vom Paket neugestartet, sondern muss nachträglich manuell durchgeführt werden. Nach dem Neustart von samba kann es zu einer kleinen Verzögerung beim Zugriff auf die neuen Freigaben kommen, wir bitten dies zu berücksichtigen.

Da es keinen direkten Kontakt zwischen Univention-LDAP und dem opsi-Backend gibt, müssen alle Clients erst im LDAP über udm angelegt werden und danach nochmal mit opsi im opsi-System mit allen Informationen (insbesondere der MAC-Addresse) angelegt werden. Das Löschen des Clients im Univention-LDAP sorgt nicht dafür, dass der Client unter opsi auch gelöscht wird.
Dieses Problem wird in  <<opsi-getting-started-installation-base-ucs-listener>> genauer beleuchtet.

Da Sie opsi auf einer existierenden Maschine eingespielt haben, gehen wir davon aus, dass Ihre Netzwerkkonfiguration korrekt ist. +
Machen Sie daher mit dem Punkt <<opsi-getting-started-installation-config>> weiter.

WARNING: Die verwendeten Unix-Befehle in den folgenden Kapiteln beziehen sich auf Debian-Systeme, Sie müssen sie evtl. durch die entsprechenden UCS-Befehle ersetzen.

[[opsi-getting-started-installation-base-ucs-member]]
===== Hinweise zur opsi-Installation auf einem UCS-Server in der Rolle 'Member'

Die Installation von opsi auf einem Server in der Rolle 'Member' ist möglich.

Nach einer Installation muss sicher gestellt werden, dass der für den Depotzugriff verwendete Benutzer mitsamt Domäne aufgeführt ist.
Dazu muss der Hostparameter `clientconfig.depot.user` kontrolliert werden.
Ist die Domäne `backstage`, so muss der Wert `backstage\pcpatch` lauten. Lautet er `memberserver\pcpatch`, so muss der Wert korrigiert werden.

Das Setzen des Kennworts für den Benutzer `pcpatch` über `opsi-admin` scheitert auf Grund der fehlenden AD-Schreibberechtigungen eines 'Member'-Servers.
Daher muss die Änderung des Kennworts des technischen Benutzers `pcpatch` *zusätzlich* auf einem Server mit Schreibrechten im AD vorgenommen werden - ein 'Master', 'Backup' oder 'Slave'.


[[opsi-getting-started-installation-base-ucs-pxepolicy]]
===== Konfiguration des PXE-Boot für Betriebssysteminstallationen

Wenn der PXE-Boot für die Betriebssysteminstallation eingesetzt werden soll, muss der DHCP-Dienst auf dem entsprechenden UCS-System umkonfiguriert werden. Hier gibt es zwei Besonderheiten, die UCS von den anderen unterstützten Distributionen unterscheidet.

* Die Konfiguration wird nicht automatisch vorgenommen, da bei einer Installation von opsi in eine produktive UCS-Infrastruktur in der Regel schon diese Konfigurationen existieren.
* Ist der opsi-tftpd-hpa so konfiguriert, dass er nicht wie sonst das Verzeichnis `/tftpboot` als Basisverzeichnis nutzt, sondern `/var/lib/univention-client-boot`. Alle wichtigen Dateien vom {opsi-linux-bootimage} werden deshalb vom `/tftpboot` in das Basisverzeichnis verschobem. Dies hat den Nebeneffekt, dass die DHCP-Option: Filename `pxelinux.0` statt `linux/pxelinux.0` lauten muss.

Um die oben genannte Konfigurationen um zu setzen, muss im UCS-System eine Richtlinie erstellt werden. Diese Einstellung ist abhängig von den schon vorhandenen Richtlinien und müssen entsprechend umgesetzt werden. Wenn opsi auf einem UCS-Testsystem installiert wurde und keine Richtlinien entsprechend existieren, sollte erst geprüft werden ob der DHCP-Dienst installiert ist, wenn nicht muss das noch nachgeholt werden. Wenn der DHCP-Dienst schon installiert wurde, ist der einfachste Weg die Richtlinie in der UMC-Webschnittstelle (Univention Management Console) vom UCS-Server zu erstellen. Dazu wählt man den die Kategorie "Domäne" und darunter das Modul DHCP-Server. Als nächstes muss man den Service wählen (Bei einem Testsystem gibt es in der Regel nur einen Eintrag). In der folgenden Detailansicht wählt man den Menüpunkt Richtlinien. Die Richtlinie, die hier benötigt wird ist eine DHCP-Boot Richtlinie. Bei der Richtlinienkonfiguration wählt man nun den Defaulteintrag `cn=default-settings` (sollte der einzige Eintrag sein) und wählt bearbeiten. Unter Grundeinstellungen - DHCP Boot für die Option Bootserver die IP vom {opsi-server} ein und bei Boot-Dateiname muss `pxelinux.0` eingetragen werden.

WARNING: Wenn man die Richtlinie wie oben beschrieben setzt, gilt das für jedes Gerät, welches per DHCP von diesem Server bedient wird. Deshalb noch mal der Hinweis, dass diese Beschreibung nur für Evaluierer gedacht ist, die im Zuge von opsi auch ucs Testen. Bei Installationen in produktive UCS-Umgebungen sollte man diese Richtlinie nicht auf diese Weise setzen.

Optional lassen sich diese Einstellungen auch auf der Konsole mit dem udm-Kommando erledigen. Nähere Informationen dazu entnehmen Sie bitte der entsprechenden UCS-Dokumentation.


[[opsi-getting-started-installation-base-ucs-listener]]
===== LDAP-Daten nach opsi überführen

In einer opsi4ucs-Installation müssen die Windows-Clients erst im UDM angelegt werden und können erst im folgenden Schritt im {opsi-configed} erstellt werden.
Änderungen von Clients im UDM werden nicht an opsi weitergegeben.
Wenn ein Client zum Beispiel im LDAP eine neue Mac-Addresse bekommt, wird dies im opsi-System nicht bemerkt. Wenn man nun versucht ein Netboot-Produkt für diesen Client auf setup zu setzen, würde opsi die Bootkonfiguration mit der falschen Mac-Addresse im Bootsystem hinterlegen.

Die Lösung hierzu ist die Erweiterung 'opsi-directory-connector'.
Weitere Informationen hierzu enthält das Handbuch.


[[opsi-getting-started-installation-base-opensuse-sles]]
==== Installation auf openSUSE oder Suse Linux Enterprise Server (SLES)

IMPORTANT: Beachten Sie unbedingt die <<opsi-getting-started-requirements,Voraussetzungen>> und <<opsi-getting-started-installation-base-prerequires,Vorbereitung>>!


Notwendige Vorbereitungen:

* Samba muss installiert und konfiguriert sein.

* `mariadb-server` muss installiert sein.

* Soll die Maschine auch als DHCP-Server eingesetzt werden, muss der Daemon dhcpd konfiguriert und am Laufen sein.

Hinzufügen des opsi-Repositories per zypper:

*openSUSE Leap 15.1:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/openSUSE_Leap_15.1/home:uibmz:opsi:4.2:{release}.repo
----

*openSUSE Leap 15.2:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/openSUSE_Leap_15.2/home:uibmz:opsi:4.2:{release}.repo
----

*openSUSE Leap 15.3:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/openSUSE_Leap_15.3/home:uibmz:opsi:4.2:{release}.repo
----

*SLES 15SP1:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/SLE_15_SP1/home:uibmz:opsi:4.2:{release}.repo
----

*SLES 15SP2:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/SLE_15_SP2/home:uibmz:opsi:4.2:{release}.repo
----

*SLES 15SP3:*
[source,prompt]
[subs="attributes"]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/SLE_15_SP3/home:uibmz:opsi:4.2:{release}.repo
----



Nach dem Hinzufügen der Repositories kann die Installation gestartet werden:

*Single-Server-Setup:*
[source,prompt]
----
zypper refresh
  Wollen Sie den Schlüssel (a)bweisen, ihm (t)emporär oder (i)mmer vertrauen? [a/t/i/?] (a): i
zypper -v install opsi-server-full
----

*Manuelles Setup:*
[source,prompt]
----
zypper refresh
zypper install redis-server redis-timeseries grafana
systemctl daemon-reload
systemctl enable grafana-server
systemctl start grafana-server
zypper -v install opsi-server
zypper -v install opsi-windows-support
----

Bitte stellen Sie sicher, daß Ihre Firewall-Konfiguration die folgenden Ports erlaubt:

* tftp: 69/UDP
* opsi: 4447/TCP und 4441/TCP

Falls Sie die Netzwerkkonfiguration mit Hilfe der Tools yast oder autoyast vorgenommen haben kann es sein, dass dieses Tool einen Eintrag in die Datei `/etc/hosts` einen Eintrag nach folgendem Muster angelegt hat:
[source,configfile]
----
127.0.0.2 <fqdn> <hostname>
----

Falls Sie opsi die Konfiguration des DHCP Servers überlassen wollen muss dieser Eintrag auf die öffentliche IP-Adresse geändert werden, über die der Server erreichbar ist.

Machen Sie mit dem Punkt <<opsi-getting-started-installation-config>> weiter.

WARNING: Die verwendeten Unix-Befehle in den folgenden Kapiteln beziehen sich auf Debian-Systeme. Sie müssen sie durch die entsprechenden Suse-Befehle ersetzen.


[[opsi-getting-started-installation-base-centos-rhel]]
==== Installation auf CentOS oder Red Hat Enterprise Linux (RHEL)

Die Installation von opsi auf CentOS, Red Hat Enterprise Linux (RHEL), Alma Linux oder Rocky Linux unterscheidet sich nur durch das verwendete Repository.


IMPORTANT: Beachten Sie unbedingt die <<opsi-getting-started-requirements,Voraussetzungen>> und <<opsi-getting-started-installation-base-prerequires,Vorbereitung>>!

Im Fall von Red Hat Enterprise Linux müssen Sie sich beim Red Hat Network registrieren, um Zugriff auf alle benötigten Pakete in den Repositories von Red Hat zu haben:

[source,prompt]
----
subscription-manager register
subscription-manager attach --auto
----

Notwendige Vorbereitungen:
////
* Wget installieren und MariaDB-Repository eintragen, da die Version in den offiziellen Repos stark veraltet ist.
+
[source,prompt]
----
yum install wget
cd /etc/yum.repos.d/
cat <<'EOF' > mariadb.repo
[mariadb-main]
name = MariaDB Server
baseurl = https://downloads.mariadb.com/MariaDB/mariadb-10.5/yum/rhel/$releasever/$basearch
gpgkey = file:///etc/pki/rpm-gpg/MariaDB-Server-GPG-KEY
gpgcheck = 1
enabled = 1
EOF
cd /etc/pki/rpm-gpg
wget https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
yum makecache
----
////

* Samba und Datenbankserver installieren:
+
[source,prompt]
----
yum install mariadb-server samba samba-client
----

* Samba und Datenbankserver konfigurieren:
+
[source,prompt]
----
systemctl start smb.service
systemctl start nmb.service
systemctl start mariadb.service
systemctl enable smb.service
systemctl enable nmb.service
systemctl enable mariadb.service
mysql_secure_installation
----

* Soll die Maschine auch als DHCP-Server eingesetzt werden, muss der Daemon dhcpd konfiguriert und am Laufen sein.

Hinzufügen des Repositories:

*CentOS 8:*
[source,prompt]
[subs="attributes"]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/CentOS_8/home:uibmz:opsi:4.2:{release}.repo
yum makecache
----

*RHEL 8:*
[source,prompt]
[subs="attributes"]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/RHEL_8/home:uibmz:opsi:4.2:{release}.repo
yum makecache
----

*Alma 8:*
[source,prompt]
[subs="attributes"]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/AlmaLinux_8/home:uibmz:opsi:4.2:{release}.repo
yum makecache
----

*Rocky 8:*
[source,prompt]
[subs="attributes"]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.2:{release}/RockyLinux_8/home:uibmz:opsi:4.2:{release}.repo
yum makecache
----


Nach dem Hinzufügen der Repositories kann die Installation gestartet werden:

*Single-Server-Setup:*
[source,prompt]
----
yum install opsi-server-full
----

*Manuelles Setup:*
[source,prompt]
----
yum makecache
yum install redis-server redis-timeseries grafana
systemctl daemon-reload
systemctl enable grafana-server
systemctl start grafana-server
yum install opsi-server
yum install opsi-windows-support
----


Es kann vorkommen, dass eine Nachfrage zum Importieren des GPG-Schlüssel des Repositories angezeigt wird.
Die Meldung ähnelt der folgenden:
[source,prompt]
----
   Importing GPG key 0xD8361F81 "home:uibmz OBS Project <home:uibmz@build.opensuse.org>" from http://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.2:/stable/CentOS_8/repodata/repomd.xml.key
   Is this ok [y/N]: y
----
Bitte beantworten Sie diese Nachfrage mit 'y'.

Bitte stellen Sie sicher, dass Ihre iptables- und SELinux-Konfiguration die folgenden Ports erlaubt:

* tftp: 69/UDP
* opsi: 4447/TCP und 4441/TCP

Da Sie opsi auf einer existierenden Maschine eingespielt haben, gehen wir davon aus, dass Ihre Netzwerkkonfiguration korrekt ist. +
Machen Sie daher mit dem Punkt <<opsi-getting-started-installation-config>> weiter.

WARNING: Die verwendeten Unix-Befehle in den folgenden Kapiteln beziehen sich auf Debian-Systeme. Sie müssen sie durch die entsprechenden CentOS-/RHEL-/Alma-/Rocky-Befehle ersetzen.


[[opsi-getting-started-installation-config]]
=== Konfigurieren des {opsi-Server}s

In diesem Kapitel wird der installierte {opsi-Server} konfiguriert.

[[opsi-getting-started-installation-config-proxy]]
==== Proxy-Eintrag in apt-Konfiguration

Sofern für Ihren Internet-Zugang erforderlich, passen Sie die Datei `/etc/apt/apt.conf` an Ihre Netzwerkgegebenheiten an (richtigen Proxy eintragen oder Zeile auskommentieren / löschen). Eine Datei können Sie editieren z. B. mithilfe des Programms „midnight commander“:

[source,prompt]
----
mcedit /etc/apt/apt.conf
----

[[opsi-getting-started-installation-config-update]]
==== Aktualisierung des {opsi-Server}s

Bringen Sie den {opsi-Server} auf den letzten Stand, in dem Sie nacheinander in einem Terminalfenster die folgenden Kommandos aufrufen:

[source,prompt]
----
apt update
apt upgrade
----

TIP: Sollte beim Update nachgefragt werden, ob die `smb.conf` überschrieben werden soll, muss man dies bestätigen. Sollte die `smb.conf` vorher schon geändert worden sein, sollte man den default beibehalten und später die Dateien miteinander abgleichen. Sollte diese Nachfrage schon mit Nein beantwortet worden sein, kann man dies später auf dem {opsi-Server} durch ausführen von `opsi-setup --auto-configure-samba` nachholen.


[[opsi-getting-started-installation-config-backend]]
==== Backend-Konfiguration

Opsi unterstützt zur Datenhaltung unterschiedliche Backends.

Im Wesentlichen sind dies:

* *file* - Datenhaltung in Dateien
* *mysql* - Datenhaltung in einer MySQL-Datenbank

Daneben gibt es noch für spezielle Zwecke die Backends:

* *opsipxeconfd* - der Dienst für den Netzwerkboot mit opsi
* *dhcpd* - zur Kommunikation mit dem dhcp-Server auf dem {opsi-server}
* *jsonrpc* - zur Weiterleitung aller Anfragen an einen anderen Server


Standardmäßig wird das {mysql-Backend} für die Inventarisierung verwendet.
Die Verwendung des {file-Backend}s für Inventurdaten ist möglich, aber deutlich langsamer und deshalb nicht empfohlen.

NOTE: Die Verwendung des {mysql-Backend} für Inventariserungsdaten ist kostenlos. +
Mehr Informationen zur Freischaltung finden Sie im opsi-Handbuch.

NOTE: Einige Distributionen verwenden _MariaDB_ anstatt _MySQL_. +
Das _mysql_-Backend funktioniert auch mit MariaDB.

Nachfolgend wird das {mysql-Backend} zur Verwendung eingerichtet.
Es wird davon ausgegangen, dass ein MySQL-Server eingerichtet wurde und die Zugangsdaten eines Datenbank-Administrators bekannt sind.
Gezielte Informationen zu Installation und Einrichtung entnehmen Sie bitte den Handbüchern Ihrer Distribution.

Für die initiale Konfiguration des {mysql-Backend}s nutzen Sie den Befehl:
[source,prompt]
----
opsi-setup --configure-mysql
----

Der Befehl wird nach den Zugangsdaten zum Datenbanksystem fragen, um eine Datenbank und einen Benutzer mit entsprechenden Berechtigungen für diese Datenbank für opsi anzulegen.

Eine Beispiel-Sitzung:

.opsi-setup --configure-mysql: Eingabemaske
image::mysql-config-input-mask.png["opsi-setup --configure-mysql: Eingabemaske", pdfwidth=90%]

.opsi-setup --configure-mysql: Ausgabe
image::mysql-config-output.png["opsi-setup --configure-mysql: Ausgabe", pdfwidth=90%]

Bei den Abfragen können außer beim 'Database Admin Password' alle Vorgaben mit Enter bestätigt werden.
Das 'Database Admin Password' ist auf der opsi-VM `linux123` ansonsten das, was Sie bei der Installation des mysql-servers vergeben haben.

Unterschiedliche Daten können in unterschiedlichen Backends gehalten werden.
Über bestimmte Vorgänge müssen mehrere Backends informiert werden.
Hierzu werden die opsi-Methoden den Backends zugeordnet.
Dies geschieht in der Datei `/etc/opsi/backendManager/dispatch.conf`.

Hier ein Beispiel:
[source,configfile]
----
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# =      backend dispatch configuration                                     =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
#
# This file configures which methods are dispatched to which backends.
# Entries has to follow the form:
# <regular expression to match method name(s)> : <comma separated list of backend name(s)>
#
# Backend names have to match a backend configuration
# file basename <backend name>.conf beneath /etc/opsi/backends.
# For every method executed on backend dispatcher
# the first matching regular expression will be decisive.

# Recommended standard configuration (dhcpd not at the opsi server)
#    file as main backend, mysql as hw/sw invent
#     and license management backend and opsipxeconfd backend:
backend_.*         : file, mysql, opsipxeconfd
host_.*            : file, opsipxeconfd
productOnClient_.* : file, opsipxeconfd
configState_.*     : file, opsipxeconfd
license.*          : mysql
softwareLicense.*  : mysql
audit.*            : mysql
.*                 : file
----

In dieser Datei sind oben Erläuterungen und Beispielkonfigurationen angegeben.
In den nicht auskommentierten Zeilen steht vorne der Name der opsi-Methoden (mit wildcard `.*`) und nach einem Doppelpunkt die hierfür zuständigen Backends.
Bei jedem Methodenaufruf wird anhand dieser Liste geprüft, welche Backends aufgerufen werden müssen.
Dabei wird die erste Zeile genommen die zu dem Methoden Namen passt.
Die letzte Zeile (`.*`) passt auf jeden Methoden Namen.

Die Standardeinstellung bei der Installation von opsi die Verwendung  des {file-Backend}s als Haupt-Backend und Verwendung des {mysql-Backend} für Lizenzmanagement- und Inventur-Daten.

CAUTION: Achten Sie darauf, dass alle verwendeten Backends in der Zeile beginnend mit `backend_.*` aufgeführt werden.

Wann immer Sie die Datei `dispatch.conf` angepasst haben, führen Sie die folgenden Befehle aus.
Auch wenn Sie bei der Inbetriebnahme des Servers die Datei nicht geändert haben, führen Sie diese Befehle jetzt aus.

[source,prompt]
----
opsi-setup --init-current-config
opsi-set-rights
systemctl restart opsiconfd.service
systemctl restart opsipxeconfd.service
----


[[opsi-getting-started-installation-config-passwords]]
==== Samba-Konfiguration anpassen und Ändern von Passwörtern

Um sicherzustellen, dass die für opsi erforderlichen Samba-Shares verfügbar sind, führen Sie bitte den folgenden Befehl aus:

[source,prompt]
----
opsi-setup --auto-configure-samba
----

Anschließend sollten die Samba-Dienste neu gestartet werden:

[source,prompt]
----
systemctl restart smbd.service
systemctl restart nmbd.service
----


TIP: Sollte beim Update des Servers nachgefragt werden, ob die Datei `smb.conf` überschrieben werden soll, muss man dies bestätigen. +
Sollte die `smb.conf` vorher schon geändert worden sein, sollte man den default beibehalten und später die Dateien miteinander abgleichen. +
Sollte diese Nachfrage schon mit Nein beantwortet worden sein, kann man dies später auf dem {opsi-Server} durch ausführen von `opsi-setup --auto-configure-samba` nachholen.


Auf dem System ist ein Pseudo-User 'pcpatch' eingerichtet. Die PCs melden sich zwecks Installation von Softwarepaketen als dieser User an und haben dann Zugriff auf die Installationsdateien auf den hierfür vorgesehenen Shares. Der User 'pcpatch' muss mit korrektem Passwort – gleichzeitig als System-User, als Samba-User und als opsi-User – eingerichtet werden.

Rufen Sie in einem Terminalfenster das Programm '{opsi-admin}' mit der Option zum Setzen des pcpatch-Passwortes (in einem für opsi, Unix und Samba).

[source,prompt]
----
opsi-admin -d task setPcpatchPassword
----

Nach "Abschicken" des Befehls werden Sie zur Passworteingabe aufgefordert.


[[opsi-getting-started-installation-config-users-and-groups]]
==== User einrichten und Gruppen opsiadmin und opsifileadmins pflegen

Die Administration von opsi ist nur Benutzern gestattet, die Mitglied der Unix-Gruppe '{opsi-admin-group}' sind.

Im folgenden wird als Beispiel der neue Benutzer 'adminuser' so eingerichtet, wie Sie ihn sich einrichten sollten.

Zunächst wird der User erstellt:

[source,prompt]
----
useradd -m -s /bin/bash adminuser
----

Wir vergeben nun Passwörter für Unix:

[source,prompt]
----
passwd adminuser
----

und für Samba:

[source,prompt]
----
smbpasswd -a adminuser
----

CAUTION: Verwenden Sie in den Passwörtern kein '§' da dies bei der Verbindung zum opsi-Service nicht erlaubt ist.

Nun wird die Gruppenmitgliedschaft eingerichtet und getestet mit der Befehlsfolge:

[source,prompt]
----
usermod -aG opsiadmin adminuser
getent group opsiadmin
----

Der getent-Befehl sollte dann so etwas ausgeben wie:
[source,prompt]
----
opsiadmin:x:1001:opsiconfd,adminuser
----

NOTE: Wenn 'root' nicht Mitglied von {opsi-admin-group} ist, kann er unter Umständen nicht alle opsi-Administrationskommandos ausführen! +

Für alltägliche Arbeiten auf Ihrem opsi-Server ist es in der Regel nicht notwendig als 'root' zu arbeiten.
Unsere Empfehlung ist es einen normalen Benutzer zu nutzen und `sudo` zu verwenden, wann immer administrative Privilegien benötigt werden.

Alle User, die Produkte packen (`opsi-makepackage`), installieren (`opsi-package-manager`) oder Konfigurationsdateien manuell bearbeiten wollen, müssen zusätzlich in der Gruppe '{opsi-file-admin-group}' sein:

[source,prompt]
----
usermod -aG opsifileadmins adminuser
----

Der Test

[source,prompt]
----
getent group opsifileadmins
----
ergibt +
'opsifileadmins:x:998:adminuser'

Damit Mitglieder der Gruppe '{opsi-file-admin-group}' den Befehl `sudo opsi-set-rights` nutzen können führen Sie bitte aus:
[source,prompt]
----
opsi-setup --patch-sudoers-file
----

Dann kann `opsi-set-rights` (macht das selbe wie `opsi-setup --set-rights`), nicht nur als root, sondern auch per sudo von Mitgliedern der Gruppe '{opsi-file-admin-group}' aufgerufen werden.:

Beispiel: +
[source,prompt]
----
sudo opsi-set-rights .
----


[[opsi-getting-started-installation-config-dhcp]]
==== DHCP-Konfiguration

Eine korrekt funktionierende Namensauflösung und DHCP ist für das Funktionieren von opsi essentiell.
Um die Installation zu vereinfachen, ist die von uib bereitgestellte VM schon mit einem DHCP-Server ausgestattet.
Auf der anderen Seite ist in vielen Umgebungen in der Regel bereits ein DHCP-Server schon vorhanden, der weiter genutzt werden soll.
Daher werden im folgenden beide Alternativen beschrieben.


[[opsi-getting-started-installation-config-dhcp-at-opsi]]
===== Alternative: DHCP auf dem {opsi-Server}

.Vorkonfigurierte VM:
In der vorkonfigurieren opsi VM ist bereits ein DHCP-Server installiert. +
Der DHCP-Server auf der {opsi-Server} VM ist so konfiguriert, das er keine freien leases hat, also keine IP-Nummern an unbekannte Rechner vergibt.
Wenn Sie im {opsi-configed} einen Client erzeugen, müssen Sie daher IP-Nummer und MAC-Adresse angeben, da diese in die `/etc/dhcp/dhcpd.conf` eingetragen und danach der DHCP Dienst neu gestartet wird.

.Eigene Installation:
Wenn Sie den opsi-Server als DHCP-Server verwenden möchten, müssen Sie daher das entsprechende Paket manuell nachinstallieren

z.B. mit
[source,prompt]
----
apt install isc-dhcp-server
----

Nach der Installation muss die Konfigurationsdatei noch angepasst werden mit dem Befehl:
[source,prompt]
----
opsi-setup --auto-configure-dhcpd
----
Um den DHCP Server neu zu starten, so wie in `/etc/opsi/backends/dhcpd.conf` beschrieben, ist ein entsprechender Eintrag in der `/etc/sudoers` notwendig. Dieser wird mit folgendem Befehl erstellt.
[source,prompt]
----
opsi-setup --patch-sudoers-file
----
Die Rechte der `/etc/dhcp/dhcpd.conf` sollten wie folgt aussehen.
[source,prompt]
----
-rw-r--r-- 1 opsiconfd opsiadmin 80174 Dec 22 14:37 /etc/dhcp/dhcpd.conf
----


[[opsi-getting-started-installation-config-at-other-server]]
===== Alternative: externer DHCP-Server

.Vorkonfigurierte VM:
Wenn Sie die opsi-VM verwenden dann können Sie den DHCP-Server deinstallieren.

Dazu führen Sie den folgenden Befehl aus:
[source,prompt]
----
apt remove isc-dhcp-server
----

.Eigene Installation:
Bei einer eigenen Installation wird seit opsi 4.0.3 nicht mehr automatisch ein DHCP-Server installiert.

Nun müssen Sie den externen DHCP-Server so konfigurieren, dass er ein PXE-Boot über den {opsi-Server} ermöglicht. Wenn Ihr DHCP-Server auf einem Linux läuft, sind folgende Einträge in der Konfigurationsdatei des dhcpd (z.B. `/etc/dhcp/dhcpd.conf`) für die Clients notwendig:

[source,configfile]
----
next-server <ip of opsi-server>;
filename "linux/pxelinux.0";
----

Wobei '<ip of opsi-server>' durch die IP-Adresse des {opsi-Server}s zu ersetzen ist.

Läuft der opsi-Server auf openSUSE oder SLES, so ist `filename=opsi/pxelinux.0`. +
Läuft der opsi-Server auf UCS, so ist `filename=pxelinux.0`.

Bei einem Windows-Server sind die entsprechenden Einträge 'Startserver (Option 66)' und 'Startfile (Option 67)'.

Wenn Sie im {opsi-configed} einen Client erzeugen, müssen Sie die MAC-Adresse angeben, aber keine IP-Nummer.


[[opsi-getting-started-installation-config-dhcp-backend]]
===== Überprüfung/Anpassung Backendkonfiguration für DHCP-Nutzung

Je nachdem ob der interne oder ein externer DHCP-Server verwendet wird, muss die Konfiguration von opsi angepasst werden.

In der Datei `/etc/opsi/backendManager/dispatch.conf` ist festgelegt, welche Backends von opsi zum Einsatz kommen (bspw. 'file', 'mysql').

In den Zeilen `backend_.*` und `host_.*` wird u.a. gesteuert, ob der {opsi-Server} auch die lokale DHCP-Konfiguration – also die Zuweisung von Internet-Adressen zu den Hardware-Adressen der Netzwerkkarten – mit übernimmt.
Dies muss so eingerichtet sein, wenn für die {opsi-Client}s die DHCP-Einträge durch die opsi-Konfigurationsaufrufe erzeugt werden sollen. Der entsprechende Eintrag mit `file` Backend muss dann z.B. lauten:
[source,configfile]
----
backend_.*         : file, opsipxeconfd, dhcpd
host_.*            : file, opsipxeconfd, dhcpd
----

Wenn der {opsi-Server} den DHCP-Dienst nicht bereitstellen soll (weil ein anderer Server im lokalen Netz diese Aufgabe übernimmt und auch für die {opsi-Client}s gepflegt wird), so wird das Backend `dhcpd` nicht benötigt:

[source,configfile]
----
backend_.*         : file, opsipxeconfd
host_.*            : file, opsipxeconfd
----

Nach Anpassung der Backendkonfiguration muss die Konfiguration initialisiert und der {opsiconfd} neu gestartet werden:

[source,prompt]
----
opsi-setup --init-current-config
opsi-set-rights
systemctl restart opsiconfd.service
systemctl restart opsipxeconfd.service
----


[[opsi-getting-started-installation-config-nameresolution]]
==== Konfiguration der Namensauflösung

Für die Installation der Software auf den Clients vor dem Login müssen allgemein nur die Clients wissen, wie sie den {opsi-Server} erreichen.

opsi kennt inzwischen allerdings auch eine Reihe von 'Push' Funktionalitäten wie z.B. 'on_demand' Installationen, Nachrichten versenden, Remote-Control Software starten, Session Informationen abrufen.

Für all diese Funktionen muss der Server die Clients erreichen können und dazu muss er die gültige IP-Nummer des Clients zu ermitteln. Wie dies am besten geschieht hängt von der konkreten Konfiguration von DNS und DHCP ab. Die Zahl der möglichen Varianten ist hier sehr groß.

Daher seien hier zwei typische Extreme aufgeführt:

. Die Clients sind nicht im DNS und haben dynamisch zugewiesene wechselnde IP-Nummern.

. Die IP-Nummern aller laufenden Clients lassen sich immer korrekt beim DNS abfragen.

Um den opsi-server nun an die unterschiedlichen Gegebenheiten anpassen zu können gibt es zwei Konfigurationen die Sie ändern können:

* Der Eintrag +resolveHostAddress+ in der Datei `/etc/opsi/backends/hostcontrol.conf` +
Steht diese Option auf 'True', wird bei einem Verbindungsaufbau vom {opsi-server} zu einem opsi-client die IP-Adresse des Clients bevorzugt über die Namensauflösung ermittelt. Um die im Backend von opsi hinterlegte IP-Adresse zu bevorzugen ist die Option auf 'False' zu setzen.

* Der Eintrag +update-ip+ in der Datei `/etc/opsi/opsiconfd.conf` +
Steht dieser Eintrag auf 'true', so wird wann immer der opsi-server von einem Client eine IP-Adresse empfängt (z.B. bei jedem Kontakt die der Client aufnimmt) die IP-Datenbank des opsi-servers aktualisiert. Der Default ist 'true'.

Für die oben aufgeführte Variante 1, ist es sinnvoll +resolveHostAddress+ auf 'False' und +update-ip+ auf 'true' zu setzen.

Für die oben aufgeführte Variante 2, ist die bessere Konfiguration  +resolveHostAddress+ auf 'True' zu setzen und +update-ip+ auf 'false'.

Welche Kombination bei Ihnen am besten passt, müssen Sie anhand Ihrer Gegebenheiten selbst ermitteln.

Wenn Sie an diesen Konfigurationen etwas geändert haben, so starten Sie den opsiconfd neu:

[source,prompt]
----
systemctl restart opsiconfd.service
----


[[opsi-getting-started-installation-config-get-essential-products]]
=== Einspielen der minimalen opsi-Produkte

Zur Verteilung von Software mit opsi stehen fertige Produkte zur Installation bereit.
Diese beinhalten unter anderem den Agent ('opsi-client-agent'), welcher für das Management auf Clients installiert werden muss.

Es gibt eine automatische und manuelle Möglichkeit dies zu tun.
Der automatisierte Weg wird empfohlen.

[[opsi-getting-started-installation-config-get-essential-products-automatic]]
==== Automatisches Einspielen der minimalen opsi-Produkte

Zur automatischen Installation der opsi-Produkte gibt es das Werkzeug `opsi-package-updater`, welches wie in '/etc/opsi/opsi-package-updater.conf' konfiguriert, automatisch die aktuellen Pakete vom opsi Repository holt und auf dem Server installiert.

[source,prompt]
----
opsi-package-updater -v install
----

Muss für den Zugriff auf das Internet die Verbindung über einen Proxy geleitet werden, so muss dieser in den `.repo`-Konfigurationsdateien unter `/etc/opsi/package-updater.repos.d/` als Wert für `proxy` eingetragen werden.
Ab Version 4.1.1.33 von opsi-utils kann ein globaler Proxy in `/etc/opsi/opsi-package-updater.conf` konfiguriert werden.

[source,configfile]
----
[repository_uib_windows]
…
proxy =
----

Sollen später installierte Pakete aktualisiert werden, so kann dies mit dem folgenden Befehl gemacht werden:
[source,prompt]
----
opsi-package-updater -v update
----

Weitere Informationen zum `opsi-package-updater` können im Handbuch gefunden werden.

NOTE: Bitte beachten Sie, dass OS-Installationsprodukte wie z.B. {opsi-client-os}, nach der Installation nicht sofort einsatzbereit sind. Die Installation muss noch durch die Installationsdateien des entsprechenden Installationsmediums ergänzt werden (siehe: <<firststeps-osinstall-fill-base-packages>>).


[[opsi-getting-started-installation-config-get-essential-products-manually]]
==== Manuelles Einspielen der opsi-Produkte

Es gibt außerdem die Möglichkeit manuell die Pakete herunter zu laden und zu installieren.

Holen Sie sich die aktuellen opsi-Pakete im `.opsi`-Paketformat.
Die Pakete finden Sie unter https://download.uib.de/opsi4.2/stable/packages/windows/ in den Verzeichnissen `netboot/`, `localboot/`, für Linux-Clients zusätzlich unter `https://download.uib.de/opsi4.2/stable/packages/linux/`.

Wir empfehlen die .opsi-Dateien unter `/var/lib/opsi/repository` zu speichern.
Zum Sicherstellen, dass opsiconfd auf die Dateien zugreifen kann, sollte `opsi-set-rights /var/lib/opsi/repository` ausgeführt werden.

Nach dem Download müssen Sie die Pakete auf dem Server mit dem Befehl `opsi-package-manager -i <paketname>.opsi` installieren.
Sind die Pakete unter `/var/lib/opsi/repository` abgelegt, so kann für die initiale Installation der folgende Befehl verwendet werden:
[source,prompt]
----
opsi-package-manager --install /var/lib/opsi/repository/*.opsi
----

include::../common/firststeps-configed.asciidoc[]

////
[[opsi-getting-started-firststeps-software-deployment-configed]]
== Management-Oberfläche {opsi-configed}

Opsi bietet mit dem {opsi-configed} ein komfortables Management Interface.
Es kommuniziert über HTTPS mit dem opsi-Server und kann daher auf jedem Rechner verwendet werden, der eine entsprechende Verbindung aufbauen kann.


TIP: Achten Sie bei Verwendung einer virtuellen Maschine auf eine ausreichende Auflösung des virtuellen Bildschirms.
Für den {opsi-configed} wird mindestens eine Auflösung von 1024x768 Pixeln benötigt.
Für die Verbesserung der Graphik- und Maustreiberintegration bei einer höheren Auflösung, hilft es, die 'VMware Tools' bei einer VMware-Maschine bzw. die Gasterweiterungen bei einer VirtualBox-Maschine zu installieren.


[[opsi-getting-started-firststeps-software-deployment-configed-installation]]
=== Installation der Management-Oberfläche {opsi-configed}

Das Management Interface wird als lokale Anwendung auf den Administrations-PCs installiert.
Rufen Sie in Ihrem Browser die Adresse `https://<opsidepotserver>:4447/` auf.
Dort finden Sie Links zu Installern für unterschiedliche Betriebssysteme.

Alternativ finden Sie entsprechende Installer unter link:https://download.uib.de/opsi4.2/misc/helper/[].

IMPORTANT: Der Windows-Installer muss mit administrativen Rechten ausgeführt werden.
Dazu öffnen Sie mit Rechtsclick das Contextmenü des Installers und wählen dort 'Als Administrator ausführen'.

Ist erstmal ein PC mit dem Management Interface ausgestattet, so können weitere PCs später einfach über das Localboot-Produkt *opsi-configed* mit dem Interface <<opsi-getting-started-firststeps-software-deployment-product-tests-configed,ausgestattet werden>>, sofern auf diesen bereits der <<opsi-getting-started-adding-clients,opsi Agent>> installiert ist.


[[opsi-getting-started-firststeps-software-deployment-configed-start]]
=== Start der Management-Oberfläche {opsi-configed}

Starten Sie {opsi-configed} über die Verknüpfung in Ihrem Startmenü.

Loggen Sie sich als ein User ein, der Mitglied der Gruppe {opsi-admin-group} ist.

Die Bedienung des Management-Interfaces ist weitgehend selbsterklärend.
Sie finden eine ausführliche Anleitung im opsi-Handbuch.

NOTE: Änderungen im opsi-Management Interface müssen gespeichert werden, bevor Sie wirksam werden und Veränderungen der Daten müssen vom Server über 'Daten neu laden' geholt werden.
////

include::../common/firststeps-adding-clients.asciidoc[]

include::../common/firststeps-win-client-integration.asciidoc[]

[[firststeps-software-deployment-product-tests]]
== Rollout existierender Produkte

Für den Rollout von Software auf Clients muss auf diesen der 'opsi-client-agent' installiert sein.
Dieser kann auf <<firststeps-software-deployment-client-integration,bestehende Rechner>> ausgerollt werden.
Bei einer <<firststeps-osinstall,Betriebssysteminstallation>> über opsi wird der 'opsi-client-agent' automatisch installiert.

Nachfolgend wird die Management-Oberfläche <<firststeps-software-deployment-configed,{opsi-configed}>> verwendet, um Software auf Clients zu verteilen.


include::../common/firststeps-swdp-product-tests-configed.asciidoc[]

include::../common/firststeps-swdp-product-tests-inventory.asciidoc[]

////
[[opsi-getting-started-firststeps-software-deployment-product-tests-inventory]]
=== Inventarisierung mit dem localboot-Produkten hwaudit und swaudit

Wählen Sie im '{opsi-configed}', Modus 'Client-Konfiguration', unter dem Reiter 'Clients' den betreffenden Client aus.

Wenn noch nicht geschehen, aktualisieren Sie den Datenbestand des {opsi-configed}s mittels 'Datei/Daten neu laden' bzw. Anklicken des entsprechenden Icons.

Wechseln Sie zum Reiter 'Produktkonfiguration', klicken Sie in die Spalte 'Angefordert' für das Produkt +hwaudit+, daraufhin öffnet sich eine Liste/Dropdown-Menü und dort wählen Sie die Aktion 'setup'. Wiederholen Sie das für das Produkt +swaudit+.

Der Haken in der Icon-Menüleiste sollte seine Farbe auf Rot wechseln. Wenn Sie ihn anklicken, werden die neuen Einstellungen zum {opsi-Server} übermittelt, im Anschluss ist seine Farbe wieder grün.

Starten Sie dann den Client (neu).
Er sollte jetzt den +opsi-client-agent+ starten und die Produkte +hwaudit+ und +swaudit+ installieren.
Bei +hwaudit+ und +swaudit+ werden Hard- bzw. Softwareinformationen erhoben und zum {opsi-Server} übermittelt.
Die gesammelten Informationen werden unter den Tabs 'Hardwareinformationen' bzw. 'Software-Inventur' angezeigt.
////

[[firststeps-software-deployment-product-tests-hwinvent]]
[[firststeps-osinstall-tests-hwinvent]]
=== Hardware-Inventarisierung mit dem netboot-Produkt hwinvent

Sofern auf Ihrem opsi-Server das Produkt 'hwinvent' bereits installiert ist und Sie einen Client <<firststeps-osinstall-create-client,aufgenommen>> haben, welcher für den Boot über das Netzwerk konfiguriert ist, können Sie etwas weiteres Nützliches tun: Hardware-Inventarisierung ohne installiertes Betriebssystem.

Wählen Sie im {opsi-configed}, Modus 'Client-Konfiguration', unter dem Reiter Client-Auswahl den betreffenden Client aus.
Wenn noch nicht geschehen, aktualisieren Sie den Datenbestand des {opsi-configed}s mittels +Datei/Daten neu laden+ bzw. Anklicken des entsprechenden Icons.
Wechseln Sie zum Reiter 'Netboot-Produkte', gehen Sie in das Feld +Anstehende Aktion+ des Produkts +hwinvent+ und wählen Sie in der dort angebotenen Liste die Aktion 'setup'.
Der Haken in der Icon-Menüleiste sollte seine Farbe auf Rot wechseln.
Wenn Sie ihn anklicken, werden die neuen Einstellungen zum {opsi-Server} übermittelt und die Farbe des Hakens wechselt im Anschluss wieder zu grün.

Starten Sie dann den Client (neu). Er sollte jetzt per PXE über das Netz ein Linux-Image ziehen, das die Hardware des PCs scannt und dann den Rechner rebootet. Wenn der Rechner nicht ansonsten schon eingerichtet war, kommt im Anschluss korrekterweise die Meldung, dass auf der Platte kein Betriebssystem installiert ist.

Das Ergebnis des Hardware-Scans hat der PC zum {opsi-Server} übermittelt. Es ist unter dem Reiter "Hardware-Informationen" einzusehen.

NOTE: Sollte nach dem Laden des bootimages der Bildschirm schwarz bleiben oder die Netzwerkkarte nicht (korrekt) funktionieren, so muss für diese konkrete Hardware evtl. die Startparameter des bootimages angepasst werden. +
Dies können Sie im '{opsi-configed}' im Tab 'Hostparameter' am Eintrag 'opsi-linux-bootimage.append' tun. +
Details hierzu finden Sie im opsi Handbuch im Kapitel 'Netboot Produkte'.


include::../common/firststeps-osinstall_win.asciidoc[]

include::../common/opsi-packaging-tutorial-windows.asciidoc[]


[[opsi-getting-started-more-info]]
== Weitere Informationen

Das link:https://download.uib.de/opsi_stable/doc/opsi-handbuch-stable-de.pdf[opsi-Handbuch] enthält eine Fülle von weiteren Informationen, die für den produktiven Betrieb wichtig sind.
Wenn Sie ihren opsi-Server produktiv einsetzen empfehlen wir Ihnen besonders sich mit dem Werkzeug 'opsi-backup' vertraut zu machen, um eine Sicherung Ihrer Daten erstellen zu können.

Wenn Sie dort nicht fündig werden oder Hilfe benötigen, wenden Sie sich an link:https://forum.opsi.org[die opsi Community].

Für produktive Installationen empfehlen wir professionelle Unterstützung durch uib im Rahmen eines link:https://uib.de/de/support-schulung/support/[Pflege- und Supportvertrages].
