////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Revision:  4.1
:doctype:   book

// Include common opsi terms
include::../common/opsi_terms.asciidoc[]

[[opsi-4.1-releasenotes]]
= opsi Version 4.1 Release Notes

// Include common opsi copyright
include::../common/opsi_manual_copyright.asciidoc[]

[[opsi-4.1-releasenotes-overview]]
== Overview of the new features

*Main aspects of this release are:*

* opsi Server
** New tftpd: `opsi-tftp-hpa`
** New tool: `opsi-package-updater`
** Path to the workbench can now be configured
** The tool `opsi-makeproductfile` has been renamed to `opsi-makepackage`
** The package `opsi-depotserver` has been renamed to `opsi-server`
** Configurable ports for Wake-On-LAN
** Changed defaults
** Python version 2.7 required
** systemd as the sole supported init system
* Windows operating system installation (netboot products) (also for opsi 4.0)
** Multidiskmode: Supports the installation on systems with several hard disks drives
** Ability to install specifically on the the first SSD tray
** Assignment of Administrator password via property
* New opsi extension 'opsi-vhd-reset' which is designed for schools or other kinds of classrooms.
** This extension is available for opsi 4.0 as well as for opsi 4.1.
** Like the already known opsi-local-image extension, 'opsi-vhd-reset' also tackles the issue of fast recoveries on computers between two different training sessions.
** Installation of a windows 10 into a vhd container
** Snapshot of the original installation by creating a child vhd, which records any future changes.
** Fast recovery by replacing the old child vhd by a new empty one.
** This extension is liable to fees.
** Also it's bundled with 'opsi-local-image' which means that in order to use it you need an activation for the 'opsi-local-image'.
If you have one, you may use it without any additional costs.


[[opsi-4.1-releasenotes-important]]
== Important considerations - Please pay attention

opsi 4.1 is an independent release and thus has it's own package repositories.
These must be added into the system you want to update before installation.

For an update from opsi 4.0 the packages need to be the latest version available on the stable repositories.
Other packages - such as MySQL server - should also be up-to-date.
Otherwise problems are to be expected during the update.

The replacement of `opsi-product-updater` through `opsi-package-updater` brings along a new configuration file that has to be migrated.
The <<opsi-releasenotes-4.1-changes-opsi-package-updater-configfile,migration of the configuration>> is described lat-er in this document.

In the case that you want to automatize the `opsi-product-updater` - For example with a regular Cronjob - or execute a Script, make sure that you switch to `opsi-package-updater`

It is also recommended that 'opsi-winst', 'opsi-client-agent' or 'opsi-linux-client-agent' be updated to the latest version of opsi 4.0 before updating on the clients.

If a message appears after the migration like 'Your hostcontrol backend configuration uses the old format for broadcast addresses...' please check which configuration adjustments are needed in this case at <<opsi-releasenotes-4.1-changes-wake-on-lan-ports, Configurable ports for Wake-On-LAN>>.


[[opsi-4.1-releasenotes-important-dispatch-and-acl.conf]]
=== New behavior of dispatch.conf and acl.conf

opsi 4.1 introduces also changes in the server configuration. In opsi 4.0.x the two files *dispatch.conf* and *acl.conf* under `/etc/opsi/backendManager` have been a symbolic link to the '*.default' files.

[source,prompt]
----
cd /etc/opsi/backendManager
ls -la
dispatch.conf -> dispatch.conf.default
acl.conf -> acl.conf.default
----

With opsi 4.1 these two files are no longer created as symbolic links. The opsi 4.1 packages try to solve such situation automatically before the upgrade is performed.

If both or one of these files exists, the link is tracked and the target file is copied instead of the symbolic link.

Both '*.default' files have been renamed to '*.example' and are now always copied to the usual directory and should only be used as a reference. Otherwise they have no significance.

Thus, after upgrading to 4.1, the system should continue running without problems with the old *dispatch.conf* and *acl.conf* configuration. Nevertheless, we recommend to check these two files again after the upgrade is done.


[[opsi-4.1-releasenotes-installation]]
== Installation notice

For your own safety, we strongly suggest to create a backup of your backends with {opsi-backup} before updating:
[source,prompt]
----
opsi-backup create
----

The products contained in this release depend on each other in many cases.
Do not try to install just parts of this update.

We recommend to first update the server, and then update the opsi products.

In a multi-depot environment it is recommended to first update the configserver before updating the depots.

To make sure that permissions are applied correctly
we recommend to run `opsi-setup --set-rights` after the installation.
Please be aware that the execution of latter can take several minutes.


[[opsi-4.1-releasenotes-installation-systempackages]]
=== Advice for updating the operating system packages

Please make sure that at the time of the update you are using the latest packages from opsi 4.0 from the stable branch.

Due to the fact that this update also brings changes to the data structure on the backend
it is required to first migrate the backends after the update.

On UCS the backend is migrated as part of the join script and a manual migration is not required.

The 'opsi-tftpd-hpa' package replaces the 'opsi-atftpd' package.

IMPORTANT: The tftpd line from '/etc/inetd.conf' or '/etc/default/atftpd' needs to be deleted and the inetd service stopped.


[[opsi-4.1-releasenotes-installation-opsipackages]]
=== Notes for updating opsi-packages

opsi-packages are usually compatible to opsi 4.0 and opsi 4.1.

opsi 3 packages are not compatible since support for them has been removed.

The official opsi 4.1 repositories at _download.uib.de_ contain packages that are compatible with opsi 4.1.
Please note that these packages not necessarily contain `4.1` in the version to be compatible.


[[opsi-4.1-releasenotes-installation-migration]]
=== Migration of an opsi 4.0 server

It is possible to migrate an existing opsi 4.0 installation to opsi 4.1 on supported operating systems.

If you manage your opsi servers through opsi than the migration can be done with the package `l-opsi-server-migrate`.


[[opsi-4.1-releasenotes-installation-migration-repositories]]
==== Changing to the new repositories

First the opsi 4.1 package repositories have to be added to the systems package manager.

The following commands will add the repositories and add the new repository key if required.
These commands require 'root' rights.


*Ubuntu 16.04 LTS _Xenial Xerus_:*
[source,prompt]
----
echo "deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.1:/stable/xUbuntu_16.04/ /" > /etc/apt/sources.list.d/opsi.list
wget -nv https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/xUbuntu_16.04/Release.key -O Release.key
apt-key add - < Release.key
----

*Debian 9 _Stretch_:*
[source,prompt]
----
echo "deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.1:/stable/Debian_9.0/ /" > /etc/apt/sources.list.d/opsi.list
wget -nv https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/Debian_9.0/Release.key -O Release.key
apt-key add - < Release.key
----

*Debian 8 _Jessie_:*
[source,prompt]
----
echo "deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.1:/stable/Debian_8.0/ /" > /etc/apt/sources.list.d/opsi.list
wget -nv https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/Debian_8.0/Release.key -O Release.key
apt-key add - < Release.key
----

*UCS 4.2:*
[source,prompt]
----
echo "deb http://download.opensuse.org/repositories/home:/uibmz:/opsi:/4.1:/stable/Univention_4.2/ /" > /etc/apt/sources.list.d/opsi.list
wget -nv https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/Univention_4.2/Release.key -O Release.key
apt-key add - < Release.key
----

*openSUSE Leap 42.3:*
[source,prompt]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/openSUSE_Leap_42.3/home:uibmz:opsi:4.1:stable.repo
----

*SLES 12SP3:*
[source,prompt]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/SLE_12_SP3/home:uibmz:opsi:4.1:stable.repo
----

*SLES 12SP2:*
[source,prompt]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/SLE_12_SP2/home:uibmz:opsi:4.1:stable.repo
----

*SLES 12SP1:*
[source,prompt]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/SLE_12_SP1/home:uibmz:opsi:4.1:stable.repo
----

*SLES 12:*
[source,prompt]
----
zypper addrepo http://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/SLE_12/home:uibmz:opsi:4.1:stable.repo
----

*RHEL 7:*
[source,prompt]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/RHEL_7/home:uibmz:opsi:4.1:stable.repo
----

*CentOS 7:*
[source,prompt]
----
cd /etc/yum.repos.d/
wget https://download.opensuse.org/repositories/home:uibmz:opsi:4.1:stable/CentOS_7/home:uibmz:opsi:4.1:stable.repo
----

TIP: Disable the  opsi 4.0 repositories on the same machine

----
Debian/Ubuntu/UCS : in /etc/apt/sources.list

CentOS / Redhat : in /etc/yum.repos.d

OpenSuse / SLES : in /etc/zypp/repos.d

----




[[opsi-4.1-releasenotes-installation-migration-migrate]]
==== Upgrading OS packages

After adding the new package repositories the system can be migrated.


IMPORTANT: For RPM-based distributions, existing configuration files are replaced by new ones during the migration. Please refer to the notes under the corresponding distributions.

Debian and Ubuntu are updated to opsi 4.1 with the following steps:
[source,prompt]
----
update-inetd --remove tftp
apt update
apt install opsi-tftpd-hpa
apt upgrade
apt install opsi-server
----

RedHat and CentOS systems need these steps to upgrade to opsi 4.1:
[source,prompt]
----
yum makecache
yum install opsi-server
----

To migrate SLES and OpenSUSE please perform the following:
[source,prompt]
----
zypper refresh
zypper dup --from home_uibmz_opsi_4.1_stable
----

This may result in the following warnings:
[source,prompt]
----
warning: /etc/opsi/backends/hostcontrol.conf created as /etc/opsi/backends/hostcontrol.conf.rpmnew
warning: /etc/opsi/opsiconfd.conf created as /etc/opsi/opsiconfd.conf.rpmnew
warning: /etc/opsi/opsi/opsi-product-updater.conf saved as /etc/opsi/opsi-product-updater.conf.rpmsave
----
which cause a verification of `dispatch.conf`, `hostcontrol.conf` and `opsiconfd.conf`.
The changed name of the original `opsi-product-updater.conf` will be used when calling the migration script.

On UCS you can update with the following command:
[source,prompt]
----
univention-install opsi-tftpd-hpa
univention-upgrade
----


[[opsi-4.1-releasenotes-installation-migration-backends]]
==== Migrating the backends

Now the backends must be updated, the current configuration applied and the services restarted.


[source,prompt]
----
# If you are using a only-MySQL backend configuration
opsi-setup --update-mysql
opsi-setup --init-current-config
systemctl restart opsiconfd.service
systemctl restart opsipxeconfd.service

# If using you are the a mixed backend (mysql & file) configuration
opsi-setup --update-mysql
opsi-setup --update-file
opsi-setup --init-current-config
systemctl restart opsiconfd.service
systemctl restart opsipxeconfd.service
----


[[opsi-4.1-releasenotes-installation-migration-opsi-packages]]
==== Updating opsi packages

The last step is to update to the latest opsi packages. The classic `opsi-product-updater` is now replaced in opsi 4.1 by the new `opsi-package-updater`. It should be noted that in addition to the new extended functions, there has been also significant changes in the configuration. The general description of the new `opsi-package-updater` can be found in the opsi manual. In the following, only the necessary adjustments within the scope of the migration are described.

In case you haven't made any changes to the `opsi-product-updater.conf` you can go directly to the chapter <<opsi-4.1-releasenotes-installation-migration-opsi-packages-standard, Application of a standard configuration>>

IMPORTANT: If you changed the configuration file of `opsi-product-updater`, i.e. when using additional repositories (Update subscriptions) or because you are synchronising your products from another opsi server, please proceed as described in chapter <<opsi-4.1-releasenotes-installation-migration-opsi-packages-others, Migration with customized configuration>> before updating the packages.

[[opsi-4.1-releasenotes-installation-migration-opsi-packages-standard]]
===== Use of the standard configuration

If you have not made any changes to the standard distributed `opsi-product-updater.conf`, you will recognize after the migration to 4.1 that your `/etc/opsi/opsi-product-updater.conf` is no longer available and is completely removed and was replaced by the repositories files under `/etc/opsi/package-updater.repos.d/`.
In this case, you can update the opsi packages directly using the specified call:
[source, prompt]
----
opsi-package-updater -v update
----

After these steps, your opsi 4.0 server is migrated to 4.1 and ready to use.

[[opsi-4.1-releasenotes-installation-migration-opsi-packages-others]]
===== Migration with changed configuration

To ease the migration process with additional repositories or other changes to the `opsi-product-updater.conf`, we provide a migration script: `opsi-migrate-product-updater-configuration`.
The script creates the corresponding repository files from the data of your `opsi-product-updater.conf` under `/etc/opsi/package-updater.repos.d/` and adapts the paths to the 4.1 repositories.
When you execute the script with the following options, only the newly created repository files are activated, which usually is the behavior you want:
[source,prompt]
----
opsi-migrate-product-update configuration --disable-repos
# On RedHat, CentOS, SLES and OpenSUSE
opsi-migrate-product-updater-configuration --configfile /etc/opsi/opsi/opsi-product-updater.conf.rpmsave --disable-repos
----

You can check which repositories are activated after the migration with:
[source,prompt]
----
opsi-package-update list --active-repos
----

An output could look like this:
[source,prompt]
----
Active repositories:
uib: http://download.uib.de
uib_linux: http://download.uib.de
uib_local_image: http://download.uib.de
----

If you are satisfied with the output of the active repositories, you can start the update with:
[source,prompt]
----
opsi-package-updater -v update
----

After these steps, your opsi 4.0 server is migrated to Release 4.1 and ready for use.



Examples of repository files:*

Until now `/etc/opsi/opsi/opsi-product-updater.conf` contained the different sections for the different repositories:

[source,prompt]
----
[repository_abo_mshotfix]
baseUrl = http://download.uib.de
dirs = abo/mshotfix/opsi4/glb
active = false
username = <user>
password = <pass>
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false

[repository_abo_standard]
baseUrl = http://download.uib.de
dirs = abo/standard/opsi4
active = false
username = <user>
password = <pass>
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false

[repository_abo_msoffice]
baseUrl = http://download.uib.de
dirs = abo/msoffice/opsi4
active = false
username = <user>
password = <pass>
autoInstall = false
autoUpdate = true
autoSetup = false
onlyDownload = false

[repository_uib_local_image]
active = true
baseUrl = http://download.uib.de
dirs = opsi4.0/products/opsi-local-image
autoInstall = false
autoUpdate = true
autoSetup = false
Set Proxy handler like: http://10.10.10.1:8080
proxy =
----

For opsi 4.1, the following repository files are created for opsi 4.1 under `/etc/opsi/package-updater.repos.d/`:

abo_mshotfix. repository
[source,prompt]
----
[repository_uib_abo_mshotfix]
description = Updates for Microsoft OS packaged by uib.
active = true
baseUrl = http://download.uib.de
dirs = abo/mshotfix/opsi4
username = <INSERT YOUR USERNAME HERE>
password = <INSERT YOUR PASSWORD HERE>
autoInstall = false
autoUpdate = true
autoSetup = false
Set Proxy handler like: http://10.10.10.1:8080
proxy =
----

abo_standard. repository
[source,prompt]
----
[repository_uib_abo_standard]
description = Packages from uib for standard products.
active = true
baseUrl = http://download.uib.de
dirs = abo/standard/opsi4
username = <INSERT YOUR USERNAME HERE>
password = <INSERT YOUR PASSWORD HERE>
autoInstall = false
autoUpdate = true
autoSetup = false
Set Proxy handler like: http://10.10.10.1:8080
proxy =
----

abo_msoffice. repository
[source,prompt]
----
[repository_uib_abo_msoffice]
description = Updates for Microsoft Office packaged by uib.
active = true
baseUrl = http://download.uib.de
dirs = abo/msoffice/opsi4
username = <INSERT YOUR USERNAME HERE>
password = <INSERT YOUR PASSWORD HERE>
autoInstall = false
autoUpdate = true
autoSetup = false
Set Proxy handler like: http://10.10.10.1:8080
proxy =
----

uib-local_image. repo
[source,prompt]
----
[repository_uib_local_image]
description = opsi Local Image Backup extension
active = false
baseUrl = http://download.uib.de
dirs = opsi4.1/stable/packages/opsi-local-image/localboot/, opsi4.1/stable/packages/opsi-local-image/netboot/
autoInstall = false
autoUpdate = true
autoSetup = false
Set Proxy handler like: http://10.10.10.1:8080
proxy =
----

[[opsi-4.1-releasenotes-installation-migration-cleanup]]
==== Optional cleanup


After a migration it can be that some unrequired files still exist on the server.
The reason for this is that they either have been altered manually or that restoring a backup has brought these files back to the system.

The following files resp. folders can be removed:

* `/etc/opsi/version`
* `/etc/opsi/backendManager/30_configed.conf`
* The folder `/etc/opsi/backendManager/extend.d/configed/` with content
* `/etc/opsi/opsi-product-updater.conf` - please read the advice regarding the <<opsi-releasenotes-4.1-changes-opsi-package-updater-configfile,migration of the configuration file>> before removing this file.


[[opsi-4.1-releasenotes-installation-migration-cleanup-opsi-depotserver]]
===== Debian / Ubuntu: Removal of transitional package

As part of this release the package `opsi-depotserver` has been renamed to `opsi-server`.

For Debian and Ubuntu there is a transition package.
If you want to remove this package after the migration you first have to mark `opsi-server` as manually installed and then remove the transitional package.

This can be done through the following steps:

[source,prompt]
----
apt install opsi-server
apt remove opsi-depotserver
----


[[opsi-4.1-releasenotes-knownbugs]]
== Known Bugs / Known Problems

.KNOWN BUGS:

* During the installation of Windows XP an error message appears because of a missing powershell.exe that has to be manually closed.


.KNOWN PROBLEMS:

* After migrating a server based on the opsi VM the applications on the desktop still refer to `opsi-product-updaters` and therefor don't work anymore.


[[opsi-4.1-releasenotes-eol]]
== Discontinuation

This chapters lists discontinuations.


[[opsi-4.1-releasenotes-eol-opsi3]]
=== Discontinued: Support for opsi 3

With opsi 4.1 support for opsi 3 is discontinued.
This affects packages whose *control*-file still makes use of the opsi 3 syntax.

In addition some methods that were made from opsi 3 and have never been ported to opsi 4 have been removed from the backend extension `20_legacy.conf`.
These methods could be spotted in opsi 4.0 because calling them would result in a _NotImplementedError_.

Affected methods can be taken from the changelog of python-opsi.


[[opsi-4.1-releasenotes-eol_server]]
=== Discontinued: Distributions for opsi-server

These distributions will not be supported anymore for different reasons.

* CentOS 6.x
* Debian 7.x
* openSUSE Leap 42.2
* RedHat Enterprise Linux 6.x
* Suse Linux Enterprise Server 11
* Univention Corporate Server 3.x
* Univention Corporate Server 4.1

Also see separate chapter: <<opsi-4.1-releasenotes-supportmatrix>>.


[[opsi-4.1-releasenotes-supportmatrix]]
== opsi Support Matrix

An overview of the supported platforms for opsi 4.1 servers.

include::supportmatrix-server.asciidoc[]

If you are using an OS version which is not contained in the section above,
we recommend updating the OS before installing opsi v4.1.


[[opsi-releasenotes-4.1-changes-opsi-package-updater]]
== New tool 'opsi-package-updater'

In opsi 4.1 the tool `opsi-product-updater` that is known from previous versions will be replaced by `opsi-package-updater`.

The tasks of the tools are the same but the command line parameters changed and new options are now available.

The new tool opens the possibility to see the packages that will be updated before doing so or before installing any new packages.

An extended description of the new tool can be found in the manual.

IMPORTANT: If you are running `opsi-product-updater` in an automated fashion - i.e. a regular cronjob - or call it in your scripts make sure that you switch to `opsi-package-updater`.


[[opsi-releasenotes-4.1-changes-opsi-package-updater-quickstart]]
=== Quick introduction 'opsi-package-updater'

To show available updates use the following command:
[source,prompt]
----
opsi-package-updater list --updatable-products
----

To update the packages 'firefox' and 'javavm' use the following command:
[source,prompt]
----
opsi-package-updater -v update firefox javavm
----

To update all available packages without any visible information use the following command:
[source,prompt]
----
opsi-package-updater update
----

To get an overview of all the packages available in the different repositories use the following command:
[source,prompt]
----
opsi-package-updater list --products
----

To install the package 'ubuntu' from the repository 'uib_linux' use the following command:
[source,prompt]
----
opsi-package-updater -v --repo uib_linux install ubuntu
----


[[opsi-releasenotes-4.1-changes-opsi-package-updater-configfile]]
=== Using configuration of 'opsi-product-updater'

The configuration files of  `opsi-package-updater` and `opsi-product-updater` are nearly identical.
But only `opsi-package-updater` understands new options.

If you have made changes in `/etc/opsi/opsi-product-updater.conf` it is recommended to transfer these changes into `/etc/opsi/opsi-package-updater.conf`.
For repository sections it is recommended to remove them from the configuration file and place them in separate configuration files with the file extension `.repo` in `/etc/opsi/package-updater.repos.d`.

It is possible to make an automated migration of the configuration file with
the tool `opsi-migrate-product-updater-configuration`.
Executing `opsi-migrate-product-updater-configuration --help` gives more information.
Because it is possible that after an migration a repository is listed in multiple files (once from a migration and once from the `opsi-utils` package) a check of the repository files should be made.

It is possible to re-use a configuration created for `opsi-product-updater`.
For this call `opsi-package-updater` with the additional option `--config /etc/opsi/opsi-product-updater.conf`.

CAUTION: The old configuration file contains opsi 4.0 repositories. Re-using this configuration will lead to not using the latest packages.


[[opsi-releasenotes-4.1-changes-opsi-makepackage]]
== New tool 'opsi-makepackage'

In opsi 4.1 the tool `opsi-makeproductfile` will be replaced through `opsi-makepackage`.

The name change makes the difference between a product and a package more clear.
The previously known command line parameters can still be used.

`opsi-makepackage` will create files containing checksums automatically when creating a package.
The switches `--no-md5` and `--no-zsync` respectively allow to disable this behavior.


[[opsi-4.1-releasenotes-opsi-configed]]
== Update of the management GUI 'opsi-configed'

With the release an extensive update of the configuration editor `{opsi-configed}` is provided as well.
The new version runs with an opsi server of version 4.1 as well as with version 4.0.7.

The new interface contains numerous improvements in terms of usage.
These include new options for depot selection, improved navigation in the client tree, additional support on multiple selections for important client functions (software inventory with batch output of results), and the ability to reset individual client property values to server defaults instead of all values in block.

License management has undergone the most extensive revision.
For all tables a free text search function for faster data set selection is now available.
The assignments between license pool and software ID are equipped with additional structuring options, making it much easier to handle this elementary function.


[[opsi-releasenotes-4.1-changes-workbench]]
== New workbench path

The workbench directory will be placed at `/var/lib/opsi/workbench` per default during installation.
This brings a consistent directory structure across different systems and simplify the backup of whole opsi installations.

The depot attribute `workbenchLocalUrl` can be changed to adjust the used path.

Updating an existing installation will set this attribute to `/home/opsiproducts` for existing depots.
On SUSE-based systems `/var/lib/opsi/workbench` will be set.
Installations using a mix of different operating systems may need a manual adjustment after the update.

There will be no automatic move of existing directory contents from old to new workbench directory.


[[opsi-releasenotes-4.1-changes-wake-on-lan-ports]]
== Configurable ports for Wake-On-LAN

It is now possible to configure the ports used for Wake-On-LAN that each broadcast address uses.

The format for 'broadcastAddresses' in the configuration file `/etc/opsi/backends/hostcontrol.conf` have changed to allow for this.
There are now two variants in which the new format can be added.
Variant 1:
[source,json]
----
"broadcastAddresses": {
  # the format used is: 'address' : [port1, port2, ...]
  "255.255.255.255": [7, 9, 12287],
}
----

Variante 2:
[source,json]
----
"broadcastAddresses": {u'255.255.255.255': (12287,)}
----

If the opsi 4.0 format is used then the opsiconfd logs will hold information how they should look for opsi 4.1.
[source,prompt]
----
Your hostcontrol backend configuration uses the old format for broadcast addresses. The new format allows to also set a list of ports to send the broadcast to.
Please use this new value in the future: ...
----
The configuration file will not be automatically edited.

In the backend an automatic conversion to the new format takes place that will use port 12287.
In opsi 4.0 only port 12287 was used.
The configuration file `/etc/opsi/backends/hostcontrol.conf` has to be edited manually.


[[opsi-releasenotes-4.1-changes-changed-defaults]]
== Changed Defaults

With opsi 4.1 some default settings have been changed to reflect experiences from opsi operations.

This is important if in an already existing environment new opsi servers are to be installed because this may lead to a change in expected behavior.

* For opsiconfd the setting of `update ip` is `yes` by default.
* In the file 'dispatch.conf' the usage of the mysql backend for keeping the inventory is the new default.


[[opsi-releasenotes-4.1-changes-python-27]]
== Python 2.7 as requirement

The use of Python 2.7 is required.
Older versions are not supported anymore.


[[opsi-releasenotes-4.1-changes-systemd]]
== systemd as init-system

opsi 4.1 will support only systemd as init-system.
Other init-systems will not be officially supported anymore.

[[opsi-releasenotes-4.1-changes-tftpd-hpa]]
== opsi-tftpd-hpa is the new TFTP Daemon

opsi 4.1 now uses the `opsi-tftpd-hpa`. This tftpd daemon support *named pipes*, just as the now obsolete `opsi-atftpd`. In addition the `opsi-tftpd-hpa` allows to transfer larger files than 90 MiB.

IMPORTANT: The tftpd line from '/etc/inetd.conf' or '/etc/default/atftpd' needs to be deleted and the inetd service stopped.


[[opsi-releasenotes-4.1-changes-http-headers]]
== HTTP header 'content-type'

Communicating with an opsi 4.0 webservice leads to a HTTP header _content-type_ that does not match the used content encoding.
With opsi 4.0 a https://www.ietf.org/rfc/rfc2616.txt[RFC 2616] compatible behavior is the default.
This behaviour has been optional in opsi 4.0.


[[opsi-releasenotes-4.1-changes-netboot-nt6]]
== Changes at the NT6 netboot products (Win 7 - Win 10)

There are several changes at the Windows NT6 netboot products from 4.0.7.1 to 4.1.0.0.

=== Preconditions

All netboot products with the version  >= '4.1.0.0' require an opsi-winst >= '4.12.0.13' installed on the opsi server. +
The netboot products with the version   '4.1.0.0' also run on opsi 4.0.7.

=== Multidiskmode

Windows OS installations on systems with more than one hard disk are now supported with the new multidiskmode property.
The multidiskmode property allows to select the target disk for the Windows installation by selecting the disk number. It is also possible to select the first SSD by using `prefer_ssd` or to select the first rotational ('classic') disk by `prefer_rotational`

IMPORTANT: By using the multidiskmode on a computer with *MBR BIOS* you have to make sure, that the by multidiskmode selected disk is also the first disk in the BIOS boot sequence. +
On *UEFI BIOS* systems no further actions are necessary, due to the fact that the boot sequence it's controlled by the installation software.

=== New Properties

* `multi_disk_mode` +
This property is used to select the target disk of the Windows installation. +
Possible values are: "0","1","2","3","prefer_ssd","prefer_rotational" +
The values "0","1","2","3" are the index of the hard disks ("0"= 1. harddisk) +
The value "prefer_ssd" selects the first SSD. +
The value "prefer_rotational" selects the first rotational ('classic') disk. +
Default = "0"


* `administrator_password` +
At this property you set the password for the local Administrator. +
Default = 'nt123'

* `winpe_dir` +
This property only is used for debugging +
The value "auto" detects the matching standard winpe directory. These are 'winpe' or 'winpe_uefi' +
Any other value must point to an existing directory inside the product directory on the opsi depot share. +
Default = 'auto'

* `installto` +
This property is not editable. It's used internally to differentiate between standard (disk) installations, opsi-local-image (oli) and opsi-vhd (vhd). +
Please do not try to change it.

=== Removed Properties

* `blockalignment` +
This property was used to decide if the partitions had to be aligned to the disk block limits or not. Now this block alignment is always on.


=== Actions while running inside the Windows PE
The preparation of a Windows installation starts with the opsi-linux bootimage, which select and prepares the hard disk. It also copies a Windows PE to a partition of the hard disk. This Windows PE is booted in order to start the Windows setup. +
Starting with the 4.1.0.0 netboot products we use an opsi-script inside the Windows PE. This has the following advantages:

* Easier and clearer scripts

* The creation of a log file of the actions inside the PE

* Sending of this log file to the opsi server


include::./opsi-vhd.asciidoc[]


[[opsi-4.1-releasenotes-linux]]
== Linux Support

=== Support Matrix

include::supportmatrix-linclient.asciidoc[]

[[opsi-4.1-releasenotes-netboot-windows]]
== opsi Support Matrix Windows Clients

In the following graphic you will find on which Windows platforms opsi can be run as client.

include::supportmatrix-winclient.asciidoc[]

[[opsi-4.1-releasenotes-python-opsi]]
== Changes in python-opsi

=== Discontinuation of versions file

The file `/etc/opsi/version` will not be used anymore.

If Python is used then `OPSI.__version__` has the used version.
This can also be used to check for opsi 4.1 with the following command:

[source,prompt]
----
$ python -c "from OPSI import __version__ as v; print(v)"
----

If opsi 4.0 is used the exit code will be `1`. If opsi 4.1 is used the exit code will be `0`.

Furthermode the backend method 'backend_info' will return the version of the used Python library.

[source,prompt]
----
$ opsi-admin -d method backend_info | grep opsiVersion
"opsiVersion" : "4.1.1.6",
----


[[opsi-4.1-releasenotes-api-changes]]
== API changes

The API has received changes in opsi 4.1.

This affects the API of the webservice, `opsi-admin`, calls made through
`opsiServiceCall` in opsicript among others.


[[opsi-4.1-releasenotes-changed-api-methods]]
=== Changed API methods

 * `getHostId` now raises a `ValueError` if no _hostname_ is given
 * `getOpsiHostKey` now raises a `ValueError` if no _hostId_ is given
 * `setProductActionRequestWithDependencies`: Dropped the previously deprecated `force` parameter
 * new method `backend_getSystemConfiguration`


[[opsi-4.1-releasenotes-deprecated-api-methods]]
=== Deprecation of API methods

The following methods are now considered deprecated.
This means they will be removed with the next major or minor release.

 * `createOpsiBase`
 * `createServer`
 * `deleteClient` - use `host_delete` instead
 * `deleteDepot` - use `host_delete` instead
 * `deleteGroup` - use `group_delete` instead
 * `deleteProductDependency`
 * `setHostLastSeen`


[[opsi-4.1-releasenotes-removed-api-methods]]
=== Removal of API methods

The following API methods have been removed:

* `createServerProduct`
* `deleteNetworkConfig`
* `deleteOpsiBase`
* `deleteProductProperties`
* `deleteProductProperty`
* `filterHostsByHardwareInformation`
* `generateOpsiHostKey`
* `getDefaultNetBootProductId`
* `getServerProductIds_list`
* `getUninstalledProductIds_list`
* `setNetworkConfigValue`
* `setPXEBootConfiguration`
* `softwareInformationToProductInstallationStatus`
* `unsetPXEBootConfiguration`

These methods aren't available anymore.


[[opsi-4.1-releasenotes-misc]]
== Miscellaneous

* `opsi-makeproductfile` becomes `opsi-makepackage`.

* `opsi-makepackage` will automatically create .md5 and .zsync-files during the creation of a new package. This can be suppressed through `--no-md5` and `--no-zsync` respectively.

* `opsi-newprod` will create empty files based on the filenames for the different actions as empty files.


[[opsi-4.1-releasenotes-packages]]
== List of packages

.Server packages:
* opsi4ucs 4.1.1.4-11
* opsiconfd 4.1.1.10-3
* opsipxeconfd 4.1.1.8-1
* opsi-configed 4.0.7.6.34-2
* opsi-linux-bootimage 20180208-1
* opsi-tftpd-hpa 5.2.8-47
* opsi-server 4.1.1.4-9
* opsi-utils 4.1.1.17-2
* opsi-utils-deprecated 4.0.7.18-1
* python-opsi 4.1.1.28-1

.opsi packages localboot Linux:
* l-opsi-server 4.1.1.1-6
* l-opsi-server-migrate 4.1.1-5

.opsi packages netboot Linux:
* opensusel42-3 4.0.7.2-5

.opsi packages opsi-local-image (includes _opsi-vhd-reset_)
* opsi-local-image Win NT6 products in version 4.1.0.0-4
* opsi-local-image-prepare 4.1.0.0-1
* opsi-local-image-backup 4.1.0.0-1
* opsi-local-image-restore 4.1.0.0-1
* opsi-vhd-win10-x64 4.1.0.0-4
* opsi-vhd-control 4.1.0.0-2

.opsi packages localboot Windows:
* opsi-wim-capture 4.1.0.0-1
* opsi-winpe 4.1.0.0-1
* opsi-configed 4.0.7.6.34-1
* opsi-winst 4.12.0.13
* opsi-script-test 4.12.0.13
* opsi-client-agent 4.0.7.24-3

.opsi packages netboot Windows:
* Win NT6 products in version 4.1.0.0-4
* opsi-clonezilla 4.0.7.2-5


NOTE: The updated opsi packages are also made available for opsi 4.0 with this release. The exception for this are `l-opsi-server` and `l-opsi-server-migrate`.

// Changelogs
include::./opsi-v4.1-changelogs.asciidoc[]
