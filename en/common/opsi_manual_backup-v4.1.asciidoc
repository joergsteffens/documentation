////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////


:Author:    uib gmbh
:Email:     info@uib.de
:Date:      19.10.2017
:Revision:  4.1
:toc:
:numbered:
:website: http://opsi.org


include::../common/opsi_terms.asciidoc[]


[[opsi-manual-backup]]
=== opsi-backup

[[opsi-manual-backup_introduction]]
==== Introduction

Like any other system, an opsi-system should also be backed up. Since opsi is a central tool for Windows client and Windows server management, the opsi-server should be backed up.
This manual is intended to give an insight into the backup strategy of opsi and also on topics such as restoring and the "DisasterRecovery" of opsi.

[[opsi-manual-backup_prerequisites]]
==== Preconditions for a backup

There is not really a prerequisite for backing up an opsi-system. Once you have located the central files and backends of the opsi system, you can save them using various methods. The following instructions should not only answer the question: "What should be backed up?", but also document a way what a backup strategy for an opsi-system could look like.

The backup script should be run as root, either manually or a root cronjob, so that you can read the configuration of opsi and also determine the system configuration. Furthermore, the _mysqldump_ program should be installed for a backup of the mysql backend, which can usually be found in the client packages of mysql.



[[opsi-manual-backup-quickstart]]
==== Quick Start

Creating a backup:
[source, prompt]
----
opsi-backup create opsi_backup.tar.bz2
----
Creates a backup of the currently used backends, as well as the configuration files, in the current directory with the name `opsi_backup.tar.bz2`.


Restoring backend data (without configuration files):
[source, prompt]
----
opsi-backup restore opsi_backup.tar.bz2
----
Restores the data from the backup file `opsi_backup.tar.bz2` in the current directory.


Completely restoring a backup including configuration files:
[source, prompt]
----
opsi-backup restore --backends=all --configuration opsi_backup.tar.bz2
----


[[opsi-manual-backup_parts-of-opsi]]
==== Basic parts of opsi

Opsi can roughly be divided into five parts. The following five parts are specific to opsi and may vary from system to system depending on the configuration.


[[opsi-manual-backup_config-part]]
===== Opsi configuration

By far the most important part of opsi is the configuration. True to LSB (Linux Standard Base), the configuration of opsi is located under `/etc/opsi`.

This directory mainly contains the backend configuration, the webservice configuration and the SSL certificate for the webservice.
Furthermore, backend extensions are stored here, the configuration of 'opsipxeconfd', 'opsi-package-updater' with its repositories and also the modules file, which unlocks your co-financed modules.

The directory `/etc/opsi` must be backed up in order to achieve a full recovery after an incident.

This part is secured with `opsi-backup`.

This backup also has another advantage: +
If you have changed many configuration options of opsi and the system no longer works properly, it is usually easier and quicker to return to a previous working version than troubleshooting.


[[opsi-manual-backup_backend-parts]]
===== Opsi backends

The opsi backends are listed in the following chapter. These form the heart of the opsi data storage. All clients, products, configurations, statuses, etc... are stored in the respective data storage.

Opsi offers the following data backends:

.opsi backends
[options="header"]
|==========================
|Backend|Description
|file-Backend|File-based backend, currently the default
|mysql-Backend|MySQL-based backend (since opsi 4.0)
|dhcp|Special backend which is used in combination with dhcpd on the opsi-server
|==========================

If you do not know which backend you are using, you are probably using the file backend. Opsi is also designed to use multiple backends at the same time. Which backends are used for which functions of opsi is configured in `/etc/opsi/backendManager/dispatch.conf`.

This part is secured with `opsi-backup`.

[[opsi-manual-backup_depotfiles-parts]]
===== Opsi depot share

The depot files are interesting because they contain the actual files of the software to be distributed. The localboot products as well as the netboot products each have their files stored under `/var/lib/opsi/depot`. In previous versions of opsi they were located in the directory `/opt/pcbin/install`.

Depending on how much software is kept on the opsi-server, and how many operating system installations including drivers are stored, this data volume can take on enormous proportions.

There are different approaches to back up these files. The simplest alternative is 'rsnapshot'. However, there are more elegant solutions, such as storing this data in a redundant file system on a SAN, etc.

This part is *not* backed up by `opsi-backup`.

[[opsi-manual-backup_workbench-parts]]
===== Opsi workbench

The opsi workbench area, which is also used as a Samba-share of the same name ('opsi_workbench'), contains the state of your own software packaging. By default, the directory is `/var/lib/opsi/workbench`. If this share is used to store your created packages in different revisions, this directory should also be saved.

The 'rsnapshot' tool is also suitable here.

This part is *not* backed up by `opsi-backup`.

NOTE: Since opsi 4.1, this directory can be configured individually for each depot server, so that different paths are possible.

NOTE: Before opsi 4.1, this directory was on non-SLES systems located at `/home/opsiproducts`.

[[opsi-manual-backup_repository-parts]]
===== Opsi repository

The directory `/var/lib/opsi/repository` is used to store opsi packages. Unlike the opsi workbench, it is not used to create opsi packages, but the opsi packages that are stored there should not be removed, in order to simplify a possible synchronization with other servers or the synchronization using `opsi-package-updater`.

These files are not absolutely necessary for a complete recovery, but can also be saved with the 'rsnapshot' tool.

This part is *not* backed up by `opsi-backup`.

[[opsi-manual-backup_tftp]]
===== TFTP directory

The TFTP directory contains configuration files for booting via PXE.
This directory is located under `/tftpboot/` on most systems. On SLES this directory is `/var/lib/tftpboot/opsi/`.

Possibly modified files are e.g. `linux/pxelinux.cfg/default.menu` or `linux/pxelinux.cfg/default.nomenu`.
These files are created with default values when installing opsi-linux-bootimage. These are not absolutely necessary for disaster recovery.

This part is *not* backed up by `opsi-backup`.

[[opsi-manual-backup-cli]]
==== The `opsi-backup` program

The command line program `opsi-backup` is a tool that makes it easy to create and restore backups.

To do this, `opsi-backup` can be controlled with three basic commands: +create+, +restore+ and +verify+. +
The +--help+ option gives a detailed overview of all options of `opsi-backup`. +
A backup created with `opsi-backup` is a raw backup, which means that no files are backed up at the logical level, but backups of the files stored in the backends are made in the corresponding structures. +
*Such a backup can therefore only be restored for an identical backend configuration*.

A backup created with `opsi-backup` is always a full backup (`opsi-backup` does not support incremental or differential backups).

It should be noted that `opsi-backup` does not back up <<opsi-manual-backup_depotfiles-parts,depot files>>, <<opsi-manual-backup_workbench-parts,workbench files>> and <<opsi-manual-backup_repository-parts,repository files>>. These files should therefore be backed up in a different way.

The backup file created with `opsi-backup` is a compressed tar file, the content of which can be viewed accordingly.

[source, prompt]
----
opsi-backup --help
----

CAUTION: A backup created with `opsi-backup` may contain passwords and PC-keys, among other things, and should therefore be stored securely.

[[opsi-manual-backup-create]]
===== Creating a backup

To create a backup call `opsi-backup create`. +
This command (without any additional options) will create a backup of all configuration data and all used backends. The backup file will be stored at the current directory with an automatically generated name. +
To get information about the possible options of +create+ call +
`opsi-backup create --help`

[source, prompt]
----
opsi-backup create
opsi-backup create --help
usage: opsi-backup create [-h] [--flush-logs]
                          [--backends {file,mysql,dhcp,auto,all}]
                          [--no-configuration] [-c [{gz,bz2,none}]]
                          [destination]

positional arguments:
  destination           Destination of the generated output file. (optional)

optional arguments:
  -h, --help            show this help message and exit
  --flush-logs          Causes mysql to flush table logs to disk before the
                        backup. (recommended)
  --backends {file,mysql,dhcp,auto,all}
                        Select a backend to backup or 'all' for all backends.
                        Can be given multiple times. (Default: auto)
  --no-configuration    Backup opsi configuration.
  -c [{gz,bz2,none}], --compression [{gz,bz2,none}]
                        Sets the compression format for the archive (Default:
                        bz2)
----

You may give the target directory or the full path to the backup file as option to `opsi-backup create`. If the given option is a filename, the backup will be created in this file - existing files will be overwritten. If the given option is a directory, the backup file will be crated in this directory with a generated filename using the pattern: +<hostname>_<opsi-version>_<date>_<time>+

[source, prompt]
----
opsi-backup create /mnt/backup/opsi_backup.tar.bz2
opsi-backup create /mnt/backup/
----

Other +create+ options are:

* +--backends {file,mysql,dhcp,all,auto}+ +
is used to select the backends which shall be included to the backup. You may give this option multiple times. +
The option `--backends=all` includes all supported backends. +
The default is `--backends=auto`, which means that `opsi-backup` reads the configuration file `/etc/opsi/backendManager/dispatch.conf` and backups all supported backends used in this configuration.
The supported backends are: +mysql+, +file+, +dhcp+
+
[source, prompt]
----
opsi-backup create --backends=file --backends=mysql
opsi-backup create --backends=all
----
+
TIP: If you are using a not supported backend (like 'ldap'), you may use `opsi-convert` to convert your data to a backend, which is supported by backup.

* +--no-configuration+ +
Excludes the <<opsi-manual-backup_config-part,opsi configuration>> files from the backup.
+
[source, prompt]
----
opsi-backup create --no-configuration
----

* +-c [{gz,bz2,none}], --compression [{gz,bz2,none}]+ +
Specify the compression method. +none+ means 'no compression'. +
The default is +bz2+.
+
[source, prompt]
----
opsi-backup create -c bz2
----

* `--flush-logs` +
The backup of the mysql backend uses the 'mysqldump' command. This means that all data known by the database are backed up, no matter if they are on disk or only in the memory yet. This means, that your backup may be more topical than your database files (which is really not a problem). +
If you want to make sure, that the database stores all data to the disk before starting the backup, you may use the `--flush-logs` option. But before you may do this, you have to grant the required RELOAD-privileges to the opsi database user, or your backup will fail. Check: http://dev.mysql.com/doc/refman/5.5/en/privileges-provided.html#priv_reload[RELOAD]. +
So use this option only if you really know what you are doing.
+
[source, prompt]
----
opsi-backup create --backends=mysql --flush-logs
----

*Example*
[source, prompt]
----
opsi-backup create --no-configuration --backends=all opsi_backup.tar.bz2
----

[[opsi-manual-backup-archive]]
===== Archive your backup files
`opsi-backup` has no features to archive the created backup files. So you have to do it by yourself (e.g. using a file backup tool). +
If you call `opsi-backup` with a target directory as option, please keep in mind that every call creates a new full backup file and no older files will be deleted.

[[opsi-manual-backup-verify]]
===== Verify a backup
The command `opsi-backup verify` is used to test the internal integrity of the created backup file.
Special help for the `opsi-backup verify` command is available by the command option `--help`.

*Example*
[source, prompt]
----
opsi-backup verify opsi_backup.tar.bz2
opsi-backup verify --help
usage: opsi-backup verify [-h] file [file ...]

required arguments:
  file        The backup archive to verify.

optional arguments:
  -h, --help  shows this help message and then exits
----

TIP: If you are calling `opsi-backup verify` at the console, it may be useful to activate messages at standard out using `-v`: `opsi-backup -v verify opsi_backup.tar.bz2`


[[opsi-manual-backup-list]]
===== List content of a backup

With the command `opsi-backup list` the contents of a backup will be displayed.
The listing shows which backend are in a backup and if configuration files are present.

*Example*
[source, prompt]
----
opsi-backup list opsi_backup.tar.bz2
----


[[opsi-manual-backup-restore]]
===== Restore from a backup file
To restore data from a backup file, use the command `opsi-backup restore`.

You have to give the path to the backup file as parameter.

The command `opsi-backup restore --help` gives information about the options for the command `restore`.
[source, prompt]
----
opsi-backup restore --help
usage: opsi-backup restore [-h] [--backends {file,mysql,dhcp,auto,all}]
                           [--configuration] [-f]
                           file

required arguments:
  file                  The backup archive to restore data from.

optional arguments:
  -h, --help            show this help message and exit
  --backends {file,mysql,dhcp,auto,all}
                        Select a backend to restore or 'all' for all backends.
                        Can be given multiple times.
  --configuration       Restore opsi configuration.
  -f, --force           Ignore sanity checks and try to apply anyway. Use
                        with caution! (Default: false)
----

`opsi-backup restore` has the following options:

* +--backends {file,mysql,dhcp,auto,all}+ +
Specifies the backend to restore. This option may be used multiple times. +
The option `--backends=all` specifies that the data from all backends which are found in the backup file shall be restored. +
The default is `--backends=auto`. This restores the data from the backup file to the system using the actual configuration data from `/etc/opsi/backendManager/dispatch.conf`.
+
[source, prompt]
----
opsi-backup restore --backends=file --backends=mysql opsi_backup.tar.bz2
opsi-backup restore --backends=all opsi_backup.tar.bz2
----
+
CAUTION: If you changed your backend configuration since you have created the backup, no or not all data will be restored. In this case you have to use the `--backends=all` option and then to convert the restored data to the now used backend using `opsi-convert`.

* +--configuration+ +
Specifies that the <<opsi-manual-backup_config-part,opsi configuration>> has to be restored. +
This option is not default at +restore+ command.
+
[source, prompt]
----
opsi-backup restore --configuration opsi_backup.tar.bz2
----

* +-f, --force+ +
To avoid data damage `opsi-backup` makes a system compatibility check (opsi Version, OS-Version, Host- and Domain Name) before restoring data and aborts if the actual system differs from the system the backup file was created on. Using this option you may override this check.
+
[source, prompt]
----
opsi-backup restore -f opsi_backup.tar.bz2
----

*Example*
[source, prompt]
----
opsi-backup restore --configuration --backends=all opsi_backup.tar.bz2
----

If a backup is restored to a server and no backup for the depot folder exists there is the possibility to use `opsi-package-updater` and `opsi-package-manager` to download all packages from the repositories again and install them.
Manual changes made in the depot have to be applied again afterwards.

[source, prompt]
----
opsi-package-updater download --force
opsi-package-manager --install /var/lib/opsi/repository/*.opsi
----
