////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      17.06.2011
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-security]]
== Security

[[opsi-manual-security-introduction]]
=== Introduction

Opsi is a powerful tool for the administration of many clients.

According to that fact, the '{opsi-server}' has to be in the focus of security considerations.

If you control the '{opsi-server}', you are in control of all the clients, that are connecting to that '{opsi-server}'.

How much time and money you should spend for hardening your '{opsi-server}', depends on your needs regarding security and the operational environment for using opsi. So for example an '{opsi-server}' in the 'cloud' is more endangered than an '{opsi-server}' in a secured network.

In the following chapter we have collected the most important issues and problems.

At this point we say 'thank you' to all customers and users which informed us about security problems and helped us to improve the security of the opsi system. If you find any security problem, please inform us (info@uib.de) before disclosing the security vulnerability in public.

[[opsi-manual-security-staytuned]]
=== Stay tuned

Information about security relevant updates and tasks are published at +
the news area at the opsi forum: +
https://forum.opsi.org/viewforum.php?f=10


[[opsi-manual-security-server]]
=== General server security

The opsi software cannot be more secure than the underlying operating system. So please make sure to update your server with the security updates of your Linux distribution. This has to be done not only for the '{opsi-configserver}', but also for all the '{opsi-depotserver}'.

It may help you to install programs which inform you by email if there are new updates available.

Debian, Ubuntu:: apticron

RHEL, CentOS::  yum-updatesd

There are a lot of possibilities to enhance the security of your Linux server. But this is not the task of this manual.

We would be happy to help you with this task as part of a support contract.

[[opsi-manual-security-client2server]]
=== Client authentication at the server
The client authenticates itself using the FQDN as username and the 'opsi-host-key' as password.

The 'opsi-host-key' is stored at the client in the file: +
`%programfiles%\opsi.org\opsi-client-agent\opsiclientd\opsiclientd.conf` +
which is readable with administrative privileges only. +
The 'opsi-host-key' is stored at the server in the used backend (e.g at `/etc/opsi/pckeys`).

In addition to this authentication, you may tell the 'opsiconfd' to check if the client IP address matches the given FQDN. To activate this check, set at the `/etc/opsi/opsiconfd.conf`:

[source,configfile]
----
verify ip = yes
----
and reload the 'opsiconfd':

[source,prompt]
----
service opsiconfd reload
----
CAUTION: Do not use this feature if you are not really sure, that your name resolution works properly in both directions for all clients.

[[opsi-manual-security-server2client]]
=== Server authentication at the client


Since opsi 4.0.1 there are different possibilities to check the trustworthiness of the contacted server.

CAUTION: Do not use them in combination. Choose only one way or you will be locked out from your client.

==== Variant 1: verify_server_cert

At the first contact to a opsi-server, the client will accept the given SSL certificate and store it at `C:\opsi.org\opsiclientd\server-certs`. +
On any subsequent contact, the client creates a random string and uses the 'public key' of the stored certificate to encrypt this string (and the own access parameters). These encrypted data will be sent to the server. +
The server uses the 'private key' of its own SSL certificate to decrypt the data and sends the decrypted random string back to the client. +
Now the client checks if the correct string was sent back. If not, the communication to the server will be aborted.

You can prevent this way that somebody directs your clients to a wrong server, e.g. by manipulating the DNS. If you setup a new server, you may migrate the SSL certificate from the old to the new server without problems. And you must not deploy any certification authority (CA).

The disadvantage of this method is, that a 'man-in-the-middle' attack is still possible.

This security method checks the communication between client and '{opsi-configserver}'.

Using the opsi WAN extension and as +clientconfig.depot.protocol+ +webdav+, also the communication to the '{opsi-depotserver}' is checked.

<<opsi-manual-wansupport-depot-protocol>>


To activate this check, set at the `opsiclientd.conf` in the section '[global]' the option:
[source,configfile]
----
verify_server_cert = true
----
Run the following command at your '{opsi-configserver}' to create this configuration entry for all clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert "verify_server_cert" false
----

Now you can activate this using the '{opsi-configed}' at the 'Server configuration' or at the 'Host parameter' of seleted clients by chaning the value from 'false' to 'true'.

CAUTION: Be very careful with activating "verify_server_cert", for in case of improper configuration your clients will refuse the connection!

==== Variant 2: verify_server_cert_by_ca

This variant works just like SSL certificates are checked in your browser. +
The given SSL certificate will be accepted, if it is issued for the exact FQDN ('commonName') of the server (or if the DNS verifies that this is the FQDN matching the IP address of the server) *and* the certificate is issued and signed by the 'uib gmbh'.

Is one of these conditions not true, the communication to the server will be aborted.

This method is more secure than the first one. But you will have to buy the certificates from 'uib gmbh'.
For prizes and conditions have a look at the prize list of 'uib gmbh': +
http://uib.de/en/opsi_support/index.html

Any profits from selling these certificates will be invested in the maintenance of the opsi security.


To activate this security method, set at the `opsiclientd.conf` in the section '[global]' the option:
[source,configfile]
----
verify_server_cert_by_ca = true
----
Run the following command at your '{opsi-configserver}' to create this configuration entry for all clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert_by_ca "verify_server_cert_by_ca" false
----

Now you can activate this using the '{opsi-configed}' at the 'Server configuration' or at the 'Host parameter' of seleted clients by chaning the value from 'false' to 'true'.


CAUTION: Be very careful with activating "verify_server_cert_by_ca", for in case of improper configuration your clients will refuse the connection!

[[opsi-manual-security-clientcontrolserver]]
=== Authentication at the control server of the client

The '{opsiclientd}' provides a web service interface, which allows remote control of the '{opsiclientd}' and thus remote control of the client.

(<<opsi-manual-clientagent-control>>).


In order to access this interface authentication is required.
You may authenticate as a local administrator with a not empty password, or with an empty user name and the '{opsi-host-key}' as password.

[[opsi-manual-security-adminnetwork]]
=== Admin network configuration

The idea of an 'admin network' is to ban any administrative access from the standard production network and allow these accesses only from a special 'admin network'.

With opsi all 'opsi-clients' need restricted access to the 'opsi web service', which allows them to read and change their own data. Administrative access with further privileges is granted to members of the unix group 'opsiadmin' only.

If you configure an 'admin networks' parameter, all administrative accesses are restricted to these network(s).

Setting the option +[global] admin networks+ at the `/etc/opsi/opsiconfd.conf` will restrict the administrative access to the 'opsiconfd' to connections coming from the specified network address(es). +
You may give multiple addresses separated by comma. +
Non administrative access may also come from other networks.

The default is:
[source,configfile]
----
admin networks = 0.0.0.0/0
----
and allows administrative access from all networks.

A configuration like e.g.
[source,configfile]
----
admin networks = 127.0.0.1/32, 10.1.1.0/24
----
restricts administrative access to the server itself and to the network '10.1.1.0/24'.

[[opsi-manual-security-pcpatch]]
=== The user pcpatch

With opsi 4 the user 'pcpatch' is used just by the 'opsi-client-agent' to mount the 'depot share' (`opsi_depot`).

Excepions are the products:

* `opsi-wim-capture` and `opsi-local-image-capture` which use 'pcpatch' to mount the share `opsi_depot_rw`
* `opsi-clonezilla` wich use 'pcpatch' to mount the share `opsi_images`

The password of the user 'pcpatch' is usually stored and transmitted encrypted. Under special circumstances it might be possible to catch the clear password. To reduce risks arising from that, you should do the following:

Deny for the user pcpatch the access to all other shares than the 'opsi_depot' share. You should do this by adding the following entry to all share definitions (besides the 'opsi_depot') at the `/etc/samba/smb.conf`:
[source,configfile]
----
invalid users = root pcpatch
----

Alternative +
At the `/etc/samba/smb.conf` restrict privileges for the user 'pcpatch' to global read only by setting in the [global] section:
[source,configfile]
----
read list = pcpatch
----

WARNING: For the products `opsi-wim-capture` and `opsi-local-image-capture` the share `opsi_depot_rw` must have write permission for 'pcpatch'. For the product `opsi-clonezilla` the share `opsi_images` must have write permission for 'pcpatch'

As an additional task you should frequently change the password of the user 'pcpatch'. You may set the password to a random string which no one knows (besides opsi). You may do this by calling the following command e.g by a cronjob:
[source,prompt]
----
opsi-admin -d task setPcpatchPassword $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16)
----

If you are not using netboot products that require the possibility to login as user 'pcpatch' you can disable the login for that user.
To do so please change the shell of the user 'pcpatch' to +/bin/false+ in the file `/etc/passwd`.
Netboot products that may require such a login are i.e. 'ntfs-write-image' and 'ntfs-restore-image' respectively.

[[opsi-manual-security-acl-configuration]]
=== Webservice access limitations

The file `/etc/opsi/backendManager/acl.conf` can be used to limit the access
to specified methods and attributes of the returned values.

The limitation affects the base methods of the webservice.
For those a restriction of users or groups and allowed attributes can be established.

The access should be limited to the used methods.
If it is not clear what methods are being used one can refer to the output of
opsiconfd about the accessed methods. This is logged to `/var/log/opsi/opsiconfd/opsiconfd.log` in case of a stop or restart.

More information about the webservice can be found at <<opsi-manual-api-datastructure-opsi4>>.

[[opsi-manual-security-bootimagerootpw]]
=== Change the bootimage root password

The root password of the opsi linux bootimage is 'linux123' by default.
You may like to change this for security reasons.
How to do this is desribed here: <<opsi-manual-netboot-bootimage-parametrization>>
