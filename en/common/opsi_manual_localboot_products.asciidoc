////
; Copyright (c) uib gmbh (www.uib.de)
; This documentation is owned by uib
; and published under the german creative commons by-sa license
; see:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; english:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; credits: http://www.opsi.org/credits/
////

:Author:    uib gmbh
:Email:     info@uib.de
:Date:      15.06.2011
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-localboot-products]]
=== Localboot products: automatic software distribution with opsi

Localboot products are all products that are installed by the '{opsi-client-agent}' after the computer started the installed OS. This is in contrast to the netboot products described below <<opsi-manual-netboot-products>>.


[[opsi-manual-localboot-standardprodukte]]
==== opsi standard products

The following localboot products are part of the default installation of opsi.

[[opsi-manual-localboot-opsi-client-agent]]
===== '{opsi-client-agent}'

The '{opsi-client-agent}' is the client agent of opsi and is described in detail above: see chapter <<opsi-manual-clientagent>>.

[[opsi-manual-localboot-opsi-winst]]
===== '{opsi-winst}'

The product '{opsi-winst}' is a special case. It contains the current '{opsi-winst}'.
This does not have to be set to setup to update. Rather, part of the '{opsi-client-agent}' checks each time it is started whether a different version of the '{opsi-winst}' is available and fetches it if this is the case.

[[opsi-manual-localboot-javavm]]
===== javavm: Java Runtime Environment

The product javavm provides the Java Runtime Environment for the clients, which is required for '{opsi-configed}'.

[[opsi-manual-localboot-opsi-configed]]
===== opsi-configed

The opsi graphical management interface packaged as application
For Windows and Linux.
See also chapter: <<opsi-manual-configed>>

[[opsi-manual-localboot-jedit]]
===== jedit

Java based editor with syntax highlighting for '{opsi-winst}' scripts.

[[opsi-manual-localboot-swaudit_hwaudit]]
===== swaudit + hwaudit: Products for hard- and software-audit

The hwaudit and swaudit products are used for hardware and software inventory.
The hardware data is collected via WMI and reported back to the server via the '{opsi-webservice}'.
For the software inventory the information is taken from the registry key (HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall)and reported back to the server via the '{opsi-webservice}'.

[[opsi-manual-localboot-opsi-template]]
===== opsi-template

Template for you own opsi scripts.

You may extract this template with:
[source, prompt]
----
opsi-package-manager -x opsi-template_<version>.opsi
----
it is also possible to rename it at the same time:
[source, prompt]
----
opsi-package-manager -x opsi-template_<version>.opsi --new-product-id myprod
----

See also opsi-getting-started Manual.

[[opsi-manual-localboot-opsi-template-with-admin]]
===== opsi-template-with-admin

Template-Script for Installations in the Context of a Local Administrator

You may extract this template with:
[source, prompt]
----
opsi-package-manager -x opsi-template-with-admin_<version>.opsi
----
it is also possible to rename it at the same time:
[source, prompt]
----
opsi-package-manager -x opsi-template-with-admin_<version>.opsi --new-product-id myprod
----

See also opsi-winst-manual / opsi-script-manual +
Chapter: 'Cookbook / Script for Installations in the Context of a Local Administrator'

[[opsi-manual-localboot-shutdownwanted]]
===== shutdownwanted

Requests a shutdown after all is installed. +
(more exactly: if there is no more action request).

[[opsi-manual-localboot-opsi-script-test]]
===== opsi-script-test

Large collection of opsi-script selftest scripts which can be used as a example collection for running opsi-script code.


[[opsi-manual-localboot-opsi-wim-capture]]
===== opsi-wim-capture

See also chapter <<opsi-manual-wimcap>>

[[opsi-manual-localboot-opsi-winpe]]
===== opsi-winpe

Product for comfortable creation of a opsi-winpe
See also opsi-getting-started Manual, Chapter 'Creating a PE'.

[[opsi-manual-localboot-opsi-uefi-netboot]]
===== opsi-uefi-netboot

See also chapter <<opsi-manual-uefi>>


[[opsi-manual-localboot-opsi-set-win-uac]]
===== opsi-set-win-uac

Set's the UAC-Level via opsi.

[[opsi-manual-localboot-opsi-setup-detector]]
===== opsi-setup-detector

See also chapter <<opsi-setup-detector>>



[[opsi-manual-localboot-opsi-logviewer]]
===== opsi-logviewer

Text viewer with selection for log levels and events. +
For Windows and Linux.

[[opsi-manual-localboot-config-win10]]
===== config-win10

Configure various Windows 10 settings like lockscreen, hibernationboot, telemetry sending and update behavior.

* *change_power_plan* Change the machine power plan.

* *config_updates* gives one the possibility to handle the update source. The options are to select Microsoft servers, a local peer-to-peer or a peer-to-peer over the internet as an update source. Die option 'disable' moved into an own property, named 'disable_updates'.

* *defer_upgrade*: One can defer Updates and Upgrades of Windows 10. Setting this property to 'true' defers Updates for four weeks and Upgrades for eight months. However security updates will be installed anyway.

* *disable_advertising_id*: The advertising ID is used to collect data within the browser and show user-specific advertisement. Set this property to 'true' to disable this.

* *disable_cortana*: The Cortana assistant in Windows 10 collects data on performed seaches through the search field in the task bar. To change this behaviour use this property.

* *disable_customer_experience* can dis- or enable the data collection on used applications.

* *disable_defender*: Windows 10 has the Windows Defender preinstalled. To deactivate the defender and replace it with an own anti-virus-solution use the property 'disable_defender'.

* *disable_font_streaming*: Whenever a document uses a font which is not installed on the system the missing font is streamed to the machine. This can be disabled by setting the peroperty 'disable_font_streaming' to 'true'.

* *disable_handwrite_sharing*: On modern tablet computers with Windows 10 Microsoft collects data whenever the user uses a pen or anything similar to write something. This handwrite sharing feature is controlled by the property 'disable_handwrite_sharing'

* *disable_location_sensors*: Windows 10 logs informations on the current geolocation of the device. This property makes it possible to disable this logging.

* *disable_lock_screen* disable_lock_screen.

* *disable_mac*: Windows 10 also collect data on the currently logged in Microsoft account user. This can be changed with the property 'disable_mac'

* *disable_mrt*: Windows 10 has an auto built in 'Malware Removal Tool' (MRT). This tool checks the file on the harddrive on a regular basis and compares them with known malware. To disable this feature, set the property to 'true'.

* *disable_onedrive_sync* disable the OneDrive file synchronization.

* *disable_sending_feedback* can disable the feedback service. This service send data to Microsoft in crashed applications.

* *disable_smbv1* disable smbv1.

* *disable_telemetry* influences the amount of transfered data to Microsoft. Usually the default level, full, transfers most data. Setting this property to 'true' lowers the amount of transfered data. Windows 10 LTSB and Enterprise releases will then only communicate security related information. Any other Windows 10 release will lower the level to 'basic'.

* *disable_updates* blocks connections wo Microsoft update sources when set to 'true'. Setting the property to 'false' enables these connections again.

* *disable_wifi_sense*: 'WiFi Sense' service makes it possible to share WiFi SSIDs inclusing password with contacts. The 'disable_wifi_sense' property can disable or enable this service.

* *flashplayer_autorun*: The Adobe Flashplayer contains a security vunerability related to its autorun feature. If one has the Flashplayer installed, please use the 'flashplayer_autorun' property to disable or enable the autorun feature.

* *online_search*: Whenever one uses the search field within the task bar a search is also performed through the internet. The search result then also contains webpages even if a local file was searched. Setting the property to 'true' disables

* *sync_settings*: Windows 10 makes it possible to synchronise made settings with an account and restore these saved settings on another device running Windows 10.

[source, prompt]
----
[ProductProperty]
type: bool
name: disable_fast_boot
description: Disable Fastboot for proper opsi startup
default: True

[ProductProperty]
type: bool
name: disable_lock_screen
default: True

[ProductProperty]
type: bool
name: disable_telemetry
description: Disable telemetry data transmission
default: True

[ProductProperty]
type: bool
name: disable_cortana
description: Disable Cortana assistant
default: True

[ProductProperty]
type: bool
name: disable_customer_experience
description: Disable customer experience program
default: True

[ProductProperty]
type: bool
name: disable_mrt
description: Disable Malicious Software Removal Tool
default: True

[ProductProperty]
type: unicode
name: config_updates
multivalue: False
editable: False
description: Set Windows-Update behavior
values: ["AllowPeerToPeer", "LocalPeerToPeer", "MicrosoftOnly"]
default: ["MicrosoftOnly"]

[ProductProperty]
type: bool
name: disable_mac
description: Disable Microsoft Account communication
default: False

[ProductProperty]
type: bool
name: disable_advertising_id
description: Disable Microsoft Advertising ID
default: False

[ProductProperty]
type: bool
name: disable_updates
description: Disable Windows Updates
default: False

[ProductProperty]
type: bool
name: disable_defender
description: Disable Microsoft Windows Defender
default: False

[ProductProperty]
type: bool
name: disable_wifi_sense
description: Disable Wi-Fi Sense
default: False

[ProductProperty]
type: bool
name: disable_sending_feedback
description: Disable sending feedback and diagnostics
default: False

[ProductProperty]
type: bool
name: disable_font_streaming
description: Disable font streaming of not installed fonts
default: False

[ProductProperty]
type: bool
name: defer_upgrade
description: Defer Windows 10 Upgrade
default: True

[ProductProperty]
type: bool
name: flashplayer_autorun
description: Adobe Flashplayer: allow autorun?
default: False

[ProductProperty]
type: bool
name: location_sensors
description: Disable location and sensor detection
default: True

[ProductProperty]
type: bool
name: online_search
description: Disable online search during file or command search
default: True

[ProductProperty]
type: bool
name: disable_handwrite_sharing
description: Tablet-PC: Disable sharing of handriting information
default: True

[ProductProperty]
type: bool
name: sync_settings
description: Sync settings with AccountID
default: False
----
[[opsi-manual-localboot-config-winbase]]
===== config-winbase

Package for customizing the GUI and Explorer settings.

[[opsi-manual-localboot-opsi-auto-update]]
===== opsi-auto-update

`opsi-auto-update` is a product to simplify the maintenance of the clients.

In essence, this product can be used to ensure that the installed products are up to date. +
The product sets all installed products,
whose version is not identical to that on the server,
for the client to setup.

Properies zur Behandlung von Ausnahmen:

* name: `products_to_exclude`
** description: (Blacklist) Which opsi product(s) should be excluded from update ? +
Liste von Produkten die nicht installiert werden sollten auch wenn es ein update gibt (wie z.B. windomain)

* name: `products_to_include`
** description: (Whitelist) Which opsi product(s) should be checked for update ? ; If empty = all products +
Hier kann man eine Liste von Produkten angeben auf die die Updateprüfung beschränkt werden soll. Produkte welche nicht in dieser Liste sind werden auch nicht bei der Prüfung auf Updates berücksichtigt. Ausnahme: Wenn die Liste leer ist wird gegen alle Produkte geprüft.



Properies zur Behandlung von Ergänzungen:

* name: `products_to_run_always`
** description: Which opsi product(s) should be installed via every update ? (List will not be cleared after run) +
Liste von Produkten welche bei jedem Lauf von opsi-auto-update auf setup gestellt werden.

* name: `setup_after_install`
** description: Which opsi product(s) should we switch to setup after update is done ? +
Liste von Produkten welche nach jedem Lauf von opsi-auto-update auf setup gestellt werden. (z.B. shutdownwanted)

Special Properies für 'local-image / vhd-reset': +
siehe auch: <<opsi-manual-vhd>> +
siehe auch: <<opsi-manual-localimage>> +

* name: `do_cleanup`
** description: If false: skip restore before update +
Diese Property wird ignoriert, wenn es sich nicht um eine vhd oder local.image installation handelt. +
Bei einer vhd Installation wird bei do_cleanup=true vor den updates `opsi-vhd-control` aufgerufen und dadurch alle Änderungen verworfen und der gespeicherte Zustand wieder hergestellt. +
Bei einer local-image Installation wird bei do_cleanup=true vor den updates `opsi-local-image-restore` aufgerufen und dadurch alle Änderungen verworfen und der gespeicherte Zustand wieder hergestellt. +
In beiden Fällen werden dabei auch die Informationen über Actionrequests verworfen. Um trotzdem während eines Laufs vo `opsi-auto-update` Produkte hinzuzufügen oder entfernen zu können gibt es die folgenden beiden Properties.


* name: `products_to_install`
** description: Which opsi product(s) should be installed via update ? (List will be cleared after run) +
Liste von Produkten welche bei dem Lauf von opsi-auto-update auf setup gestellt werden. Wenn die Produkte erfolgreich abgearbeitet wurden, werden sie aus dieser Liste gelöscht.

* name: `products_to_uninstall`
** description: Which opsi product(s) should be uninstalled via update ? (List will be cleared after run) +
Liste von Produkten welche bei dem Lauf von opsi-auto-update auf uninstall gestellt werden. Wenn die Produkte erfolgreich abgearbeitet wurden, werden sie aus dieser Liste gelöscht.

* name: `do_merge`
** description: If false: skip backup after update +
Diese Property wird ignoriert, wenn es sich nicht um eine vhd oder local.image installation handelt. +
Bei einer vhd Installation wird bei do_cleanup=true nach den updates `opsi-vhd-control` mit `upgrade=true` aufgerufen und dadurch alle Änderungen gespeichert. +
Bei einer local-image Installation wird bei do_cleanup=true nach den updates `opsi-local-image-backup` aufgerufen und dadurch alle Änderungen gespeichert. 

* name: `disabled` +
Diese Property dient zu Debug Zwecken. +
Wenn 'true' führt das Produkt keine Aktionen aus. +
Default = 'false'

* name: `rebootflag` +
Bitte während des Laufes nicht ändern. Sollte vor dem Start '0' sein.

* name: `stop_after_step` +
Diese Property dient zu Debug Zwecken. +
Wenn nicht '0' dann anzahl der reboots nach denen gestopt wird.
Default = '0'


Das Produkt opsi-auto-update hat eine sehr niedrige Priorität (-97),
welche noch geringer ist als die von opsi-vhd-control.

Das opsi-Produkt
kann gut mit einem cron-job der das skript `wake_clients_for_setup.py` ausführt kombiniert werden. +
(https://download.uib.de/opsi4.1/misc/time-driven-maintenance-tools/wake_clients_for_setup.py)



[[opsi-manual-localboot-product-order]]
==== Manipulating the installation sequence by product priorities

Since opsi 4.0 the installation sequence will be calculated by regarding product dependencies and product priotities.

* product dependencies +
defines dependencies and needed installation sequence between opsi-packages. A typical example is the dependency between a java program and the java runtime environment (javavm).

* product priorities +
will be used to push some packages to the beginning of the installation sequence and other packages to the end. For example it is useful install service pack and hotfixes at the beginning of a installation sequence and software inventory at the end. +
Product priorities are numbers between 100 and -100 (0 is the default)

There are different possibilities how these two factors are used to calculate the installation sequence. According to this opsi provides two different algorithms.

You may switch between these algorithms:

* using the opsi-configed, in the 'Host parameter' Tab of the 'server configuration'

.'{opsi-configed}': server configuration
image::configed_serverconfiguration_en.png["opsi-configed: server configuration",width=500]

or you can do this on the commend line:
[source, prompt]
----
opsi-setup --edit-config-defaults
----

.Choose the sort algorithm: Part 1
image::opsi-setup-product_sort_algorithm.png["Choose the sort algorithm: Part 1",width=300]

.Choose the sort algorithm: Part 2
image::opsi-setup-product_sort_algorithm2.png["Choose the sort algorithm: Part 2",width=300]

[[opsi-manual-localboot-product-order-algorithm1]]
===== Algorithm1: product dependency above priority (default)

Using this algorithm, the product installation sequence at first will be calculated by the product priorities. In a second step it will be resorted to met the product dependencies. This algorithm may push products with low priority before products with higher priority to met the needs of product dependencies. But therefore you will not see installation problems as result of not resolved product dependencies. +
The installation sequence of products with action requests is exactly the sequence you see in the configed if sort the products by the products by the column 'position' and its order even if the scripts have partly been executed. Especially, if the execution of a script is stopped by an "ExitWindows /ImmediateReboot" command, then it is guaranteed that the suspended product installation is directly continued after reboot.

[[opsi-manual-localboot-product-order-algorithm2]]
===== Algorithm2: product priority above dependency

The base philosophy of this algorithm is, that in practice there are three needed priority classes:

* Products which have to be installed at the beginning of a sequence, like OS-Patches. These products need a high priority (e.g. 100)

* "normal" products to install applications (default priority = 0)

* Products which have to be installed at the end of a installation sequence, like software inventory. These products need a low priority (e.g. -100)

Product dependicies will only resolved inside of priority class. This guarantees that products with a high priority will be installed very early. But is in your reponsibility that there are non product dependencies which go cross priority class borders.

[[opsi-manual-localboot-product-order-create]]
===== Defining product priorities and dependencies

Product priorities and dependencies belong to the meta data of a product. You will be asked for these meta data creating a new product using the command
`opsi-newprod`.

These meta data will be stored in the product control file and may be edited there. After changing the control file you have create and install the package again.

For more details see at 'getting started' manual in the chapter creating a opsi-package.

[[opsi-manual-localboot-own_software]]
==== Integration of new software packages into the opsi software deployment.

Instructions for integrating your own software can be found in the opsi-getting-started manual.
